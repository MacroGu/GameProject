// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Copy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Msg_Copy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ResultObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResultObject_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResultPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResultPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* BattleResultNty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleResultNty_reflection_ = NULL;
const ::google::protobuf::Descriptor* MainCopyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MainCopyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MainCopyAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MainCopyAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MainCopyResultNty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MainCopyResultNty_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_CreateRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_CreateRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_CreateRoomAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_CreateRoomAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_JoinRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_JoinRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_JoinRoomAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_JoinRoomAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_KickRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_KickRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_KickRoomAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_KickRoomAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_LeaveRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_LeaveRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_LeaveRoomAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_LeaveRoomAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_StartRoomReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_StartRoomReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_StartRoomAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_StartRoomAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_RoomPlayerInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_RoomPlayerInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Msg_BroadRoomNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Msg_BroadRoomNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Msg_5fCopy_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Msg_5fCopy_2eproto() {
  protobuf_AddDesc_Msg_5fCopy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Msg_Copy.proto");
  GOOGLE_CHECK(file != NULL);
  ResultObject_descriptor_ = file->message_type(0);
  static const int ResultObject_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, objecttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, kill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, death_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, heal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, damage_),
  };
  ResultObject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResultObject_descriptor_,
      ResultObject::default_instance_,
      ResultObject_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResultObject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultObject, _is_default_instance_));
  ResultPlayer_descriptor_ = file->message_type(1);
  static const int ResultPlayer_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, objectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, objecttype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, kill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, death_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, heal_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, damage_),
  };
  ResultPlayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResultPlayer_descriptor_,
      ResultPlayer::default_instance_,
      ResultPlayer_offsets_,
      -1,
      -1,
      -1,
      sizeof(ResultPlayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultPlayer, _is_default_instance_));
  BattleResultNty_descriptor_ = file->message_type(2);
  static const int BattleResultNty_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultNty, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultNty, copyguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultNty, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultNty, copytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultNty, lasttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultNty, playerlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultNty, objectlist_),
  };
  BattleResultNty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BattleResultNty_descriptor_,
      BattleResultNty::default_instance_,
      BattleResultNty_offsets_,
      -1,
      -1,
      -1,
      sizeof(BattleResultNty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultNty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleResultNty, _is_default_instance_));
  MainCopyReq_descriptor_ = file->message_type(3);
  static const int MainCopyReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyReq, copyid_),
  };
  MainCopyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MainCopyReq_descriptor_,
      MainCopyReq::default_instance_,
      MainCopyReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(MainCopyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyReq, _is_default_instance_));
  MainCopyAck_descriptor_ = file->message_type(4);
  static const int MainCopyAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyAck, retcode_),
  };
  MainCopyAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MainCopyAck_descriptor_,
      MainCopyAck::default_instance_,
      MainCopyAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(MainCopyAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyAck, _is_default_instance_));
  ItemData_descriptor_ = file->message_type(5);
  static const int ItemData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemData, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemData, itemnum_),
  };
  ItemData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemData_descriptor_,
      ItemData::default_instance_,
      ItemData_offsets_,
      -1,
      -1,
      -1,
      sizeof(ItemData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemData, _is_default_instance_));
  MainCopyResultNty_descriptor_ = file->message_type(6);
  static const int MainCopyResultNty_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyResultNty, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyResultNty, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyResultNty, copyresult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyResultNty, starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyResultNty, lasttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyResultNty, itemlist_),
  };
  MainCopyResultNty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MainCopyResultNty_descriptor_,
      MainCopyResultNty::default_instance_,
      MainCopyResultNty_offsets_,
      -1,
      -1,
      -1,
      sizeof(MainCopyResultNty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyResultNty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainCopyResultNty, _is_default_instance_));
  Msg_CreateRoomReq_descriptor_ = file->message_type(7);
  static const int Msg_CreateRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateRoomReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateRoomReq, copyid_),
  };
  Msg_CreateRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_CreateRoomReq_descriptor_,
      Msg_CreateRoomReq::default_instance_,
      Msg_CreateRoomReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_CreateRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateRoomReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateRoomReq, _is_default_instance_));
  Msg_CreateRoomAck_descriptor_ = file->message_type(8);
  static const int Msg_CreateRoomAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateRoomAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateRoomAck, roomid_),
  };
  Msg_CreateRoomAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_CreateRoomAck_descriptor_,
      Msg_CreateRoomAck::default_instance_,
      Msg_CreateRoomAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_CreateRoomAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateRoomAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_CreateRoomAck, _is_default_instance_));
  Msg_JoinRoomReq_descriptor_ = file->message_type(9);
  static const int Msg_JoinRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_JoinRoomReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_JoinRoomReq, roomid_),
  };
  Msg_JoinRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_JoinRoomReq_descriptor_,
      Msg_JoinRoomReq::default_instance_,
      Msg_JoinRoomReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_JoinRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_JoinRoomReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_JoinRoomReq, _is_default_instance_));
  Msg_JoinRoomAck_descriptor_ = file->message_type(10);
  static const int Msg_JoinRoomAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_JoinRoomAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_JoinRoomAck, roomid_),
  };
  Msg_JoinRoomAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_JoinRoomAck_descriptor_,
      Msg_JoinRoomAck::default_instance_,
      Msg_JoinRoomAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_JoinRoomAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_JoinRoomAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_JoinRoomAck, _is_default_instance_));
  Msg_KickRoomReq_descriptor_ = file->message_type(11);
  static const int Msg_KickRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_KickRoomReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_KickRoomReq, roomid_),
  };
  Msg_KickRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_KickRoomReq_descriptor_,
      Msg_KickRoomReq::default_instance_,
      Msg_KickRoomReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_KickRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_KickRoomReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_KickRoomReq, _is_default_instance_));
  Msg_KickRoomAck_descriptor_ = file->message_type(12);
  static const int Msg_KickRoomAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_KickRoomAck, retcode_),
  };
  Msg_KickRoomAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_KickRoomAck_descriptor_,
      Msg_KickRoomAck::default_instance_,
      Msg_KickRoomAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_KickRoomAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_KickRoomAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_KickRoomAck, _is_default_instance_));
  Msg_LeaveRoomReq_descriptor_ = file->message_type(13);
  static const int Msg_LeaveRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_LeaveRoomReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_LeaveRoomReq, roomid_),
  };
  Msg_LeaveRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_LeaveRoomReq_descriptor_,
      Msg_LeaveRoomReq::default_instance_,
      Msg_LeaveRoomReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_LeaveRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_LeaveRoomReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_LeaveRoomReq, _is_default_instance_));
  Msg_LeaveRoomAck_descriptor_ = file->message_type(14);
  static const int Msg_LeaveRoomAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_LeaveRoomAck, retcode_),
  };
  Msg_LeaveRoomAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_LeaveRoomAck_descriptor_,
      Msg_LeaveRoomAck::default_instance_,
      Msg_LeaveRoomAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_LeaveRoomAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_LeaveRoomAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_LeaveRoomAck, _is_default_instance_));
  Msg_StartRoomReq_descriptor_ = file->message_type(15);
  static const int Msg_StartRoomReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_StartRoomReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_StartRoomReq, roomid_),
  };
  Msg_StartRoomReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_StartRoomReq_descriptor_,
      Msg_StartRoomReq::default_instance_,
      Msg_StartRoomReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_StartRoomReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_StartRoomReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_StartRoomReq, _is_default_instance_));
  Msg_StartRoomAck_descriptor_ = file->message_type(16);
  static const int Msg_StartRoomAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_StartRoomAck, retcode_),
  };
  Msg_StartRoomAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_StartRoomAck_descriptor_,
      Msg_StartRoomAck::default_instance_,
      Msg_StartRoomAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_StartRoomAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_StartRoomAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_StartRoomAck, _is_default_instance_));
  Msg_RoomPlayerInfo_descriptor_ = file->message_type(17);
  static const int Msg_RoomPlayerInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_RoomPlayerInfo, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_RoomPlayerInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_RoomPlayerInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_RoomPlayerInfo, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_RoomPlayerInfo, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_RoomPlayerInfo, equips_),
  };
  Msg_RoomPlayerInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_RoomPlayerInfo_descriptor_,
      Msg_RoomPlayerInfo::default_instance_,
      Msg_RoomPlayerInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_RoomPlayerInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_RoomPlayerInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_RoomPlayerInfo, _is_default_instance_));
  Msg_BroadRoomNotify_descriptor_ = file->message_type(18);
  static const int Msg_BroadRoomNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BroadRoomNotify, playerlist_),
  };
  Msg_BroadRoomNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Msg_BroadRoomNotify_descriptor_,
      Msg_BroadRoomNotify::default_instance_,
      Msg_BroadRoomNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(Msg_BroadRoomNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BroadRoomNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Msg_BroadRoomNotify, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Msg_5fCopy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResultObject_descriptor_, &ResultObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResultPlayer_descriptor_, &ResultPlayer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BattleResultNty_descriptor_, &BattleResultNty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MainCopyReq_descriptor_, &MainCopyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MainCopyAck_descriptor_, &MainCopyAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemData_descriptor_, &ItemData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MainCopyResultNty_descriptor_, &MainCopyResultNty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_CreateRoomReq_descriptor_, &Msg_CreateRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_CreateRoomAck_descriptor_, &Msg_CreateRoomAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_JoinRoomReq_descriptor_, &Msg_JoinRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_JoinRoomAck_descriptor_, &Msg_JoinRoomAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_KickRoomReq_descriptor_, &Msg_KickRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_KickRoomAck_descriptor_, &Msg_KickRoomAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_LeaveRoomReq_descriptor_, &Msg_LeaveRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_LeaveRoomAck_descriptor_, &Msg_LeaveRoomAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_StartRoomReq_descriptor_, &Msg_StartRoomReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_StartRoomAck_descriptor_, &Msg_StartRoomAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_RoomPlayerInfo_descriptor_, &Msg_RoomPlayerInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Msg_BroadRoomNotify_descriptor_, &Msg_BroadRoomNotify::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Msg_5fCopy_2eproto() {
  delete ResultObject::default_instance_;
  delete ResultObject_reflection_;
  delete ResultPlayer::default_instance_;
  delete ResultPlayer_reflection_;
  delete BattleResultNty::default_instance_;
  delete BattleResultNty_reflection_;
  delete MainCopyReq::default_instance_;
  delete MainCopyReq_reflection_;
  delete MainCopyAck::default_instance_;
  delete MainCopyAck_reflection_;
  delete ItemData::default_instance_;
  delete ItemData_reflection_;
  delete MainCopyResultNty::default_instance_;
  delete MainCopyResultNty_reflection_;
  delete Msg_CreateRoomReq::default_instance_;
  delete Msg_CreateRoomReq_reflection_;
  delete Msg_CreateRoomAck::default_instance_;
  delete Msg_CreateRoomAck_reflection_;
  delete Msg_JoinRoomReq::default_instance_;
  delete Msg_JoinRoomReq_reflection_;
  delete Msg_JoinRoomAck::default_instance_;
  delete Msg_JoinRoomAck_reflection_;
  delete Msg_KickRoomReq::default_instance_;
  delete Msg_KickRoomReq_reflection_;
  delete Msg_KickRoomAck::default_instance_;
  delete Msg_KickRoomAck_reflection_;
  delete Msg_LeaveRoomReq::default_instance_;
  delete Msg_LeaveRoomReq_reflection_;
  delete Msg_LeaveRoomAck::default_instance_;
  delete Msg_LeaveRoomAck_reflection_;
  delete Msg_StartRoomReq::default_instance_;
  delete Msg_StartRoomReq_reflection_;
  delete Msg_StartRoomAck::default_instance_;
  delete Msg_StartRoomAck_reflection_;
  delete Msg_RoomPlayerInfo::default_instance_;
  delete Msg_RoomPlayerInfo_reflection_;
  delete Msg_BroadRoomNotify::default_instance_;
  delete Msg_BroadRoomNotify_reflection_;
}

void protobuf_AddDesc_Msg_5fCopy_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Msg_5fCopy_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016Msg_Copy.proto\"\220\001\n\014ResultObject\022\020\n\010Obj"
    "ectID\030\001 \001(\004\022\017\n\007ActorID\030\002 \001(\005\022\022\n\nObjectTy"
    "pe\030\003 \001(\005\022\016\n\006Result\030\004 \001(\005\022\014\n\004Kill\030\005 \001(\005\022\r"
    "\n\005Death\030\006 \001(\005\022\014\n\004Heal\030\007 \001(\005\022\016\n\006Damage\030\010 "
    "\001(\005\"\220\001\n\014ResultPlayer\022\020\n\010ObjectID\030\001 \001(\004\022\017"
    "\n\007ActorID\030\002 \001(\005\022\022\n\nObjectType\030\003 \001(\005\022\016\n\006R"
    "esult\030\004 \001(\005\022\014\n\004Kill\030\005 \001(\005\022\r\n\005Death\030\006 \001(\005"
    "\022\014\n\004Heal\030\007 \001(\005\022\016\n\006Damage\030\010 \001(\005\"\257\001\n\017Battl"
    "eResultNty\022\020\n\010ServerID\030\001 \001(\005\022\020\n\010CopyGuid"
    "\030\002 \001(\r\022\016\n\006CopyID\030\003 \001(\005\022\020\n\010CopyType\030\004 \001(\005"
    "\022\020\n\010LastTime\030\005 \001(\004\022!\n\nPlayerList\030\006 \003(\0132\r"
    ".ResultPlayer\022!\n\nObjectList\030\007 \003(\0132\r.Resu"
    "ltObject\"\035\n\013MainCopyReq\022\016\n\006CopyID\030\001 \001(\005\""
    "\036\n\013MainCopyAck\022\017\n\007RetCode\030\001 \001(\r\"+\n\010ItemD"
    "ata\022\016\n\006ItemID\030\001 \001(\005\022\017\n\007ItemNum\030\002 \001(\005\"\207\001\n"
    "\021MainCopyResultNty\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006Co"
    "pyID\030\002 \001(\005\022\022\n\nCopyResult\030\003 \001(\005\022\017\n\007StarNu"
    "m\030\004 \001(\005\022\020\n\010LastTime\030\005 \001(\004\022\033\n\010ItemList\030\006 "
    "\003(\0132\t.ItemData\"3\n\021Msg_CreateRoomReq\022\016\n\006R"
    "oleID\030\001 \001(\004\022\016\n\006CopyID\030\002 \001(\r\"4\n\021Msg_Creat"
    "eRoomAck\022\017\n\007RetCode\030\001 \001(\r\022\016\n\006RoomID\030\002 \001("
    "\004\"1\n\017Msg_JoinRoomReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006"
    "RoomID\030\002 \001(\004\"2\n\017Msg_JoinRoomAck\022\017\n\007RetCo"
    "de\030\001 \001(\r\022\016\n\006RoomID\030\002 \001(\004\"1\n\017Msg_KickRoom"
    "Req\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006RoomID\030\002 \001(\004\"\"\n\017M"
    "sg_KickRoomAck\022\017\n\007RetCode\030\001 \001(\r\"2\n\020Msg_L"
    "eaveRoomReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006RoomID\030\002 "
    "\001(\004\"#\n\020Msg_LeaveRoomAck\022\017\n\007RetCode\030\001 \001(\r"
    "\"2\n\020Msg_StartRoomReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006"
    "RoomID\030\002 \001(\004\"#\n\020Msg_StartRoomAck\022\017\n\007RetC"
    "ode\030\001 \001(\r\"s\n\022Msg_RoomPlayerInfo\022\016\n\006RoleI"
    "D\030\001 \001(\004\022\r\n\005Level\030\002 \001(\005\022\014\n\004Name\030\003 \001(\t\022\017\n\007"
    "ActorID\030\004 \001(\005\022\017\n\007MountID\030\005 \001(\005\022\016\n\006Equips"
    "\030\006 \003(\005\">\n\023Msg_BroadRoomNotify\022\'\n\nPlayerL"
    "ist\030\001 \003(\0132\023.Msg_RoomPlayerInfob\006proto3", 1398);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_Copy.proto", &protobuf_RegisterTypes);
  ResultObject::default_instance_ = new ResultObject();
  ResultPlayer::default_instance_ = new ResultPlayer();
  BattleResultNty::default_instance_ = new BattleResultNty();
  MainCopyReq::default_instance_ = new MainCopyReq();
  MainCopyAck::default_instance_ = new MainCopyAck();
  ItemData::default_instance_ = new ItemData();
  MainCopyResultNty::default_instance_ = new MainCopyResultNty();
  Msg_CreateRoomReq::default_instance_ = new Msg_CreateRoomReq();
  Msg_CreateRoomAck::default_instance_ = new Msg_CreateRoomAck();
  Msg_JoinRoomReq::default_instance_ = new Msg_JoinRoomReq();
  Msg_JoinRoomAck::default_instance_ = new Msg_JoinRoomAck();
  Msg_KickRoomReq::default_instance_ = new Msg_KickRoomReq();
  Msg_KickRoomAck::default_instance_ = new Msg_KickRoomAck();
  Msg_LeaveRoomReq::default_instance_ = new Msg_LeaveRoomReq();
  Msg_LeaveRoomAck::default_instance_ = new Msg_LeaveRoomAck();
  Msg_StartRoomReq::default_instance_ = new Msg_StartRoomReq();
  Msg_StartRoomAck::default_instance_ = new Msg_StartRoomAck();
  Msg_RoomPlayerInfo::default_instance_ = new Msg_RoomPlayerInfo();
  Msg_BroadRoomNotify::default_instance_ = new Msg_BroadRoomNotify();
  ResultObject::default_instance_->InitAsDefaultInstance();
  ResultPlayer::default_instance_->InitAsDefaultInstance();
  BattleResultNty::default_instance_->InitAsDefaultInstance();
  MainCopyReq::default_instance_->InitAsDefaultInstance();
  MainCopyAck::default_instance_->InitAsDefaultInstance();
  ItemData::default_instance_->InitAsDefaultInstance();
  MainCopyResultNty::default_instance_->InitAsDefaultInstance();
  Msg_CreateRoomReq::default_instance_->InitAsDefaultInstance();
  Msg_CreateRoomAck::default_instance_->InitAsDefaultInstance();
  Msg_JoinRoomReq::default_instance_->InitAsDefaultInstance();
  Msg_JoinRoomAck::default_instance_->InitAsDefaultInstance();
  Msg_KickRoomReq::default_instance_->InitAsDefaultInstance();
  Msg_KickRoomAck::default_instance_->InitAsDefaultInstance();
  Msg_LeaveRoomReq::default_instance_->InitAsDefaultInstance();
  Msg_LeaveRoomAck::default_instance_->InitAsDefaultInstance();
  Msg_StartRoomReq::default_instance_->InitAsDefaultInstance();
  Msg_StartRoomAck::default_instance_->InitAsDefaultInstance();
  Msg_RoomPlayerInfo::default_instance_->InitAsDefaultInstance();
  Msg_BroadRoomNotify::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Msg_5fCopy_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Msg_5fCopy_2eproto {
  StaticDescriptorInitializer_Msg_5fCopy_2eproto() {
    protobuf_AddDesc_Msg_5fCopy_2eproto();
  }
} static_descriptor_initializer_Msg_5fCopy_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultObject::kObjectIDFieldNumber;
const int ResultObject::kActorIDFieldNumber;
const int ResultObject::kObjectTypeFieldNumber;
const int ResultObject::kResultFieldNumber;
const int ResultObject::kKillFieldNumber;
const int ResultObject::kDeathFieldNumber;
const int ResultObject::kHealFieldNumber;
const int ResultObject::kDamageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultObject::ResultObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResultObject)
}

void ResultObject::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResultObject::ResultObject(const ResultObject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResultObject)
}

void ResultObject::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  objectid_ = GOOGLE_ULONGLONG(0);
  actorid_ = 0;
  objecttype_ = 0;
  result_ = 0;
  kill_ = 0;
  death_ = 0;
  heal_ = 0;
  damage_ = 0;
}

ResultObject::~ResultObject() {
  // @@protoc_insertion_point(destructor:ResultObject)
  SharedDtor();
}

void ResultObject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResultObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResultObject_descriptor_;
}

const ResultObject& ResultObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

ResultObject* ResultObject::default_instance_ = NULL;

ResultObject* ResultObject::New(::google::protobuf::Arena* arena) const {
  ResultObject* n = new ResultObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultObject::Clear() {
// @@protoc_insertion_point(message_clear_start:ResultObject)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResultObject, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResultObject*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(objectid_, damage_);

#undef ZR_HELPER_
#undef ZR_

}

bool ResultObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResultObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ObjectID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 2;
      case 2: {
        if (tag == 16) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ObjectType;
        break;
      }

      // optional int32 ObjectType = 3;
      case 3: {
        if (tag == 24) {
         parse_ObjectType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objecttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Result;
        break;
      }

      // optional int32 Result = 4;
      case 4: {
        if (tag == 32) {
         parse_Result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Kill;
        break;
      }

      // optional int32 Kill = 5;
      case 5: {
        if (tag == 40) {
         parse_Kill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Death;
        break;
      }

      // optional int32 Death = 6;
      case 6: {
        if (tag == 48) {
         parse_Death:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &death_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Heal;
        break;
      }

      // optional int32 Heal = 7;
      case 7: {
        if (tag == 56) {
         parse_Heal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Damage;
        break;
      }

      // optional int32 Damage = 8;
      case 8: {
        if (tag == 64) {
         parse_Damage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResultObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResultObject)
  return false;
#undef DO_
}

void ResultObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResultObject)
  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->objectid(), output);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actorid(), output);
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->objecttype(), output);
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->kill(), output);
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->death(), output);
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->heal(), output);
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->damage(), output);
  }

  // @@protoc_insertion_point(serialize_end:ResultObject)
}

::google::protobuf::uint8* ResultObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResultObject)
  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->objectid(), target);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actorid(), target);
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->objecttype(), target);
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->kill(), target);
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->death(), target);
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->heal(), target);
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->damage(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ResultObject)
  return target;
}

int ResultObject::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ResultObject)
  int total_size = 0;

  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->objecttype());
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kill());
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->death());
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heal());
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResultObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResultObject* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResultObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResultObject)
    MergeFrom(*source);
  }
}

void ResultObject::MergeFrom(const ResultObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResultObject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.objecttype() != 0) {
    set_objecttype(from.objecttype());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.kill() != 0) {
    set_kill(from.kill());
  }
  if (from.death() != 0) {
    set_death(from.death());
  }
  if (from.heal() != 0) {
    set_heal(from.heal());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
}

void ResultObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResultObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultObject::CopyFrom(const ResultObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResultObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultObject::IsInitialized() const {

  return true;
}

void ResultObject::Swap(ResultObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultObject::InternalSwap(ResultObject* other) {
  std::swap(objectid_, other->objectid_);
  std::swap(actorid_, other->actorid_);
  std::swap(objecttype_, other->objecttype_);
  std::swap(result_, other->result_);
  std::swap(kill_, other->kill_);
  std::swap(death_, other->death_);
  std::swap(heal_, other->heal_);
  std::swap(damage_, other->damage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResultObject_descriptor_;
  metadata.reflection = ResultObject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultObject

// optional uint64 ObjectID = 1;
void ResultObject::clear_objectid() {
  objectid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ResultObject::objectid() const {
  // @@protoc_insertion_point(field_get:ResultObject.ObjectID)
  return objectid_;
}
 void ResultObject::set_objectid(::google::protobuf::uint64 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.ObjectID)
}

// optional int32 ActorID = 2;
void ResultObject::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 ResultObject::actorid() const {
  // @@protoc_insertion_point(field_get:ResultObject.ActorID)
  return actorid_;
}
 void ResultObject::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.ActorID)
}

// optional int32 ObjectType = 3;
void ResultObject::clear_objecttype() {
  objecttype_ = 0;
}
 ::google::protobuf::int32 ResultObject::objecttype() const {
  // @@protoc_insertion_point(field_get:ResultObject.ObjectType)
  return objecttype_;
}
 void ResultObject::set_objecttype(::google::protobuf::int32 value) {
  
  objecttype_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.ObjectType)
}

// optional int32 Result = 4;
void ResultObject::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 ResultObject::result() const {
  // @@protoc_insertion_point(field_get:ResultObject.Result)
  return result_;
}
 void ResultObject::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Result)
}

// optional int32 Kill = 5;
void ResultObject::clear_kill() {
  kill_ = 0;
}
 ::google::protobuf::int32 ResultObject::kill() const {
  // @@protoc_insertion_point(field_get:ResultObject.Kill)
  return kill_;
}
 void ResultObject::set_kill(::google::protobuf::int32 value) {
  
  kill_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Kill)
}

// optional int32 Death = 6;
void ResultObject::clear_death() {
  death_ = 0;
}
 ::google::protobuf::int32 ResultObject::death() const {
  // @@protoc_insertion_point(field_get:ResultObject.Death)
  return death_;
}
 void ResultObject::set_death(::google::protobuf::int32 value) {
  
  death_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Death)
}

// optional int32 Heal = 7;
void ResultObject::clear_heal() {
  heal_ = 0;
}
 ::google::protobuf::int32 ResultObject::heal() const {
  // @@protoc_insertion_point(field_get:ResultObject.Heal)
  return heal_;
}
 void ResultObject::set_heal(::google::protobuf::int32 value) {
  
  heal_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Heal)
}

// optional int32 Damage = 8;
void ResultObject::clear_damage() {
  damage_ = 0;
}
 ::google::protobuf::int32 ResultObject::damage() const {
  // @@protoc_insertion_point(field_get:ResultObject.Damage)
  return damage_;
}
 void ResultObject::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:ResultObject.Damage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultPlayer::kObjectIDFieldNumber;
const int ResultPlayer::kActorIDFieldNumber;
const int ResultPlayer::kObjectTypeFieldNumber;
const int ResultPlayer::kResultFieldNumber;
const int ResultPlayer::kKillFieldNumber;
const int ResultPlayer::kDeathFieldNumber;
const int ResultPlayer::kHealFieldNumber;
const int ResultPlayer::kDamageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultPlayer::ResultPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResultPlayer)
}

void ResultPlayer::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ResultPlayer::ResultPlayer(const ResultPlayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResultPlayer)
}

void ResultPlayer::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  objectid_ = GOOGLE_ULONGLONG(0);
  actorid_ = 0;
  objecttype_ = 0;
  result_ = 0;
  kill_ = 0;
  death_ = 0;
  heal_ = 0;
  damage_ = 0;
}

ResultPlayer::~ResultPlayer() {
  // @@protoc_insertion_point(destructor:ResultPlayer)
  SharedDtor();
}

void ResultPlayer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResultPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResultPlayer_descriptor_;
}

const ResultPlayer& ResultPlayer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

ResultPlayer* ResultPlayer::default_instance_ = NULL;

ResultPlayer* ResultPlayer::New(::google::protobuf::Arena* arena) const {
  ResultPlayer* n = new ResultPlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:ResultPlayer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ResultPlayer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ResultPlayer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(objectid_, damage_);

#undef ZR_HELPER_
#undef ZR_

}

bool ResultPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResultPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ObjectID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 2;
      case 2: {
        if (tag == 16) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ObjectType;
        break;
      }

      // optional int32 ObjectType = 3;
      case 3: {
        if (tag == 24) {
         parse_ObjectType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &objecttype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Result;
        break;
      }

      // optional int32 Result = 4;
      case 4: {
        if (tag == 32) {
         parse_Result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Kill;
        break;
      }

      // optional int32 Kill = 5;
      case 5: {
        if (tag == 40) {
         parse_Kill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Death;
        break;
      }

      // optional int32 Death = 6;
      case 6: {
        if (tag == 48) {
         parse_Death:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &death_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Heal;
        break;
      }

      // optional int32 Heal = 7;
      case 7: {
        if (tag == 56) {
         parse_Heal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Damage;
        break;
      }

      // optional int32 Damage = 8;
      case 8: {
        if (tag == 64) {
         parse_Damage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResultPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResultPlayer)
  return false;
#undef DO_
}

void ResultPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResultPlayer)
  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->objectid(), output);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actorid(), output);
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->objecttype(), output);
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->result(), output);
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->kill(), output);
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->death(), output);
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->heal(), output);
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->damage(), output);
  }

  // @@protoc_insertion_point(serialize_end:ResultPlayer)
}

::google::protobuf::uint8* ResultPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ResultPlayer)
  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->objectid(), target);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actorid(), target);
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->objecttype(), target);
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->result(), target);
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->kill(), target);
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->death(), target);
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->heal(), target);
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->damage(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ResultPlayer)
  return target;
}

int ResultPlayer::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ResultPlayer)
  int total_size = 0;

  // optional uint64 ObjectID = 1;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional int32 ObjectType = 3;
  if (this->objecttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->objecttype());
  }

  // optional int32 Result = 4;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional int32 Kill = 5;
  if (this->kill() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kill());
  }

  // optional int32 Death = 6;
  if (this->death() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->death());
  }

  // optional int32 Heal = 7;
  if (this->heal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heal());
  }

  // optional int32 Damage = 8;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ResultPlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ResultPlayer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ResultPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ResultPlayer)
    MergeFrom(*source);
  }
}

void ResultPlayer::MergeFrom(const ResultPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ResultPlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.objecttype() != 0) {
    set_objecttype(from.objecttype());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.kill() != 0) {
    set_kill(from.kill());
  }
  if (from.death() != 0) {
    set_death(from.death());
  }
  if (from.heal() != 0) {
    set_heal(from.heal());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
}

void ResultPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ResultPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultPlayer::CopyFrom(const ResultPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ResultPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultPlayer::IsInitialized() const {

  return true;
}

void ResultPlayer::Swap(ResultPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultPlayer::InternalSwap(ResultPlayer* other) {
  std::swap(objectid_, other->objectid_);
  std::swap(actorid_, other->actorid_);
  std::swap(objecttype_, other->objecttype_);
  std::swap(result_, other->result_);
  std::swap(kill_, other->kill_);
  std::swap(death_, other->death_);
  std::swap(heal_, other->heal_);
  std::swap(damage_, other->damage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResultPlayer_descriptor_;
  metadata.reflection = ResultPlayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultPlayer

// optional uint64 ObjectID = 1;
void ResultPlayer::clear_objectid() {
  objectid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ResultPlayer::objectid() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.ObjectID)
  return objectid_;
}
 void ResultPlayer::set_objectid(::google::protobuf::uint64 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.ObjectID)
}

// optional int32 ActorID = 2;
void ResultPlayer::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::actorid() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.ActorID)
  return actorid_;
}
 void ResultPlayer::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.ActorID)
}

// optional int32 ObjectType = 3;
void ResultPlayer::clear_objecttype() {
  objecttype_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::objecttype() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.ObjectType)
  return objecttype_;
}
 void ResultPlayer::set_objecttype(::google::protobuf::int32 value) {
  
  objecttype_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.ObjectType)
}

// optional int32 Result = 4;
void ResultPlayer::clear_result() {
  result_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::result() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Result)
  return result_;
}
 void ResultPlayer::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Result)
}

// optional int32 Kill = 5;
void ResultPlayer::clear_kill() {
  kill_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::kill() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Kill)
  return kill_;
}
 void ResultPlayer::set_kill(::google::protobuf::int32 value) {
  
  kill_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Kill)
}

// optional int32 Death = 6;
void ResultPlayer::clear_death() {
  death_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::death() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Death)
  return death_;
}
 void ResultPlayer::set_death(::google::protobuf::int32 value) {
  
  death_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Death)
}

// optional int32 Heal = 7;
void ResultPlayer::clear_heal() {
  heal_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::heal() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Heal)
  return heal_;
}
 void ResultPlayer::set_heal(::google::protobuf::int32 value) {
  
  heal_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Heal)
}

// optional int32 Damage = 8;
void ResultPlayer::clear_damage() {
  damage_ = 0;
}
 ::google::protobuf::int32 ResultPlayer::damage() const {
  // @@protoc_insertion_point(field_get:ResultPlayer.Damage)
  return damage_;
}
 void ResultPlayer::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:ResultPlayer.Damage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleResultNty::kServerIDFieldNumber;
const int BattleResultNty::kCopyGuidFieldNumber;
const int BattleResultNty::kCopyIDFieldNumber;
const int BattleResultNty::kCopyTypeFieldNumber;
const int BattleResultNty::kLastTimeFieldNumber;
const int BattleResultNty::kPlayerListFieldNumber;
const int BattleResultNty::kObjectListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleResultNty::BattleResultNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BattleResultNty)
}

void BattleResultNty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BattleResultNty::BattleResultNty(const BattleResultNty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BattleResultNty)
}

void BattleResultNty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  serverid_ = 0;
  copyguid_ = 0u;
  copyid_ = 0;
  copytype_ = 0;
  lasttime_ = GOOGLE_ULONGLONG(0);
}

BattleResultNty::~BattleResultNty() {
  // @@protoc_insertion_point(destructor:BattleResultNty)
  SharedDtor();
}

void BattleResultNty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BattleResultNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleResultNty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleResultNty_descriptor_;
}

const BattleResultNty& BattleResultNty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

BattleResultNty* BattleResultNty::default_instance_ = NULL;

BattleResultNty* BattleResultNty::New(::google::protobuf::Arena* arena) const {
  BattleResultNty* n = new BattleResultNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleResultNty::Clear() {
// @@protoc_insertion_point(message_clear_start:BattleResultNty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BattleResultNty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BattleResultNty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(serverid_, lasttime_);

#undef ZR_HELPER_
#undef ZR_

  playerlist_.Clear();
  objectlist_.Clear();
}

bool BattleResultNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BattleResultNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ServerID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyGuid;
        break;
      }

      // optional uint32 CopyGuid = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CopyID;
        break;
      }

      // optional int32 CopyID = 3;
      case 3: {
        if (tag == 24) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CopyType;
        break;
      }

      // optional int32 CopyType = 4;
      case 4: {
        if (tag == 32) {
         parse_CopyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_LastTime;
        break;
      }

      // optional uint64 LastTime = 5;
      case 5: {
        if (tag == 40) {
         parse_LastTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lasttime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_PlayerList;
        break;
      }

      // repeated .ResultPlayer PlayerList = 6;
      case 6: {
        if (tag == 50) {
         parse_PlayerList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_PlayerList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playerlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_PlayerList;
        if (input->ExpectTag(58)) goto parse_loop_ObjectList;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ResultObject ObjectList = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ObjectList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objectlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_ObjectList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BattleResultNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BattleResultNty)
  return false;
#undef DO_
}

void BattleResultNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BattleResultNty)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // optional uint32 CopyGuid = 2;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->copyguid(), output);
  }

  // optional int32 CopyID = 3;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyid(), output);
  }

  // optional int32 CopyType = 4;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->copytype(), output);
  }

  // optional uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->lasttime(), output);
  }

  // repeated .ResultPlayer PlayerList = 6;
  for (unsigned int i = 0, n = this->playerlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->playerlist(i), output);
  }

  // repeated .ResultObject ObjectList = 7;
  for (unsigned int i = 0, n = this->objectlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->objectlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:BattleResultNty)
}

::google::protobuf::uint8* BattleResultNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BattleResultNty)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // optional uint32 CopyGuid = 2;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->copyguid(), target);
  }

  // optional int32 CopyID = 3;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyid(), target);
  }

  // optional int32 CopyType = 4;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->copytype(), target);
  }

  // optional uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->lasttime(), target);
  }

  // repeated .ResultPlayer PlayerList = 6;
  for (unsigned int i = 0, n = this->playerlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->playerlist(i), false, target);
  }

  // repeated .ResultObject ObjectList = 7;
  for (unsigned int i = 0, n = this->objectlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->objectlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BattleResultNty)
  return target;
}

int BattleResultNty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:BattleResultNty)
  int total_size = 0;

  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // optional uint32 CopyGuid = 2;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyguid());
  }

  // optional int32 CopyID = 3;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // optional int32 CopyType = 4;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // optional uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lasttime());
  }

  // repeated .ResultPlayer PlayerList = 6;
  total_size += 1 * this->playerlist_size();
  for (int i = 0; i < this->playerlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playerlist(i));
  }

  // repeated .ResultObject ObjectList = 7;
  total_size += 1 * this->objectlist_size();
  for (int i = 0; i < this->objectlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->objectlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleResultNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BattleResultNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BattleResultNty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleResultNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BattleResultNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BattleResultNty)
    MergeFrom(*source);
  }
}

void BattleResultNty::MergeFrom(const BattleResultNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BattleResultNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  playerlist_.MergeFrom(from.playerlist_);
  objectlist_.MergeFrom(from.objectlist_);
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.lasttime() != 0) {
    set_lasttime(from.lasttime());
  }
}

void BattleResultNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BattleResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleResultNty::CopyFrom(const BattleResultNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BattleResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleResultNty::IsInitialized() const {

  return true;
}

void BattleResultNty::Swap(BattleResultNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleResultNty::InternalSwap(BattleResultNty* other) {
  std::swap(serverid_, other->serverid_);
  std::swap(copyguid_, other->copyguid_);
  std::swap(copyid_, other->copyid_);
  std::swap(copytype_, other->copytype_);
  std::swap(lasttime_, other->lasttime_);
  playerlist_.UnsafeArenaSwap(&other->playerlist_);
  objectlist_.UnsafeArenaSwap(&other->objectlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleResultNty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleResultNty_descriptor_;
  metadata.reflection = BattleResultNty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleResultNty

// optional int32 ServerID = 1;
void BattleResultNty::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 BattleResultNty::serverid() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.ServerID)
  return serverid_;
}
 void BattleResultNty::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:BattleResultNty.ServerID)
}

// optional uint32 CopyGuid = 2;
void BattleResultNty::clear_copyguid() {
  copyguid_ = 0u;
}
 ::google::protobuf::uint32 BattleResultNty::copyguid() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.CopyGuid)
  return copyguid_;
}
 void BattleResultNty::set_copyguid(::google::protobuf::uint32 value) {
  
  copyguid_ = value;
  // @@protoc_insertion_point(field_set:BattleResultNty.CopyGuid)
}

// optional int32 CopyID = 3;
void BattleResultNty::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 BattleResultNty::copyid() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.CopyID)
  return copyid_;
}
 void BattleResultNty::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:BattleResultNty.CopyID)
}

// optional int32 CopyType = 4;
void BattleResultNty::clear_copytype() {
  copytype_ = 0;
}
 ::google::protobuf::int32 BattleResultNty::copytype() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.CopyType)
  return copytype_;
}
 void BattleResultNty::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:BattleResultNty.CopyType)
}

// optional uint64 LastTime = 5;
void BattleResultNty::clear_lasttime() {
  lasttime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BattleResultNty::lasttime() const {
  // @@protoc_insertion_point(field_get:BattleResultNty.LastTime)
  return lasttime_;
}
 void BattleResultNty::set_lasttime(::google::protobuf::uint64 value) {
  
  lasttime_ = value;
  // @@protoc_insertion_point(field_set:BattleResultNty.LastTime)
}

// repeated .ResultPlayer PlayerList = 6;
int BattleResultNty::playerlist_size() const {
  return playerlist_.size();
}
void BattleResultNty::clear_playerlist() {
  playerlist_.Clear();
}
const ::ResultPlayer& BattleResultNty::playerlist(int index) const {
  // @@protoc_insertion_point(field_get:BattleResultNty.PlayerList)
  return playerlist_.Get(index);
}
::ResultPlayer* BattleResultNty::mutable_playerlist(int index) {
  // @@protoc_insertion_point(field_mutable:BattleResultNty.PlayerList)
  return playerlist_.Mutable(index);
}
::ResultPlayer* BattleResultNty::add_playerlist() {
  // @@protoc_insertion_point(field_add:BattleResultNty.PlayerList)
  return playerlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::ResultPlayer >*
BattleResultNty::mutable_playerlist() {
  // @@protoc_insertion_point(field_mutable_list:BattleResultNty.PlayerList)
  return &playerlist_;
}
const ::google::protobuf::RepeatedPtrField< ::ResultPlayer >&
BattleResultNty::playerlist() const {
  // @@protoc_insertion_point(field_list:BattleResultNty.PlayerList)
  return playerlist_;
}

// repeated .ResultObject ObjectList = 7;
int BattleResultNty::objectlist_size() const {
  return objectlist_.size();
}
void BattleResultNty::clear_objectlist() {
  objectlist_.Clear();
}
const ::ResultObject& BattleResultNty::objectlist(int index) const {
  // @@protoc_insertion_point(field_get:BattleResultNty.ObjectList)
  return objectlist_.Get(index);
}
::ResultObject* BattleResultNty::mutable_objectlist(int index) {
  // @@protoc_insertion_point(field_mutable:BattleResultNty.ObjectList)
  return objectlist_.Mutable(index);
}
::ResultObject* BattleResultNty::add_objectlist() {
  // @@protoc_insertion_point(field_add:BattleResultNty.ObjectList)
  return objectlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::ResultObject >*
BattleResultNty::mutable_objectlist() {
  // @@protoc_insertion_point(field_mutable_list:BattleResultNty.ObjectList)
  return &objectlist_;
}
const ::google::protobuf::RepeatedPtrField< ::ResultObject >&
BattleResultNty::objectlist() const {
  // @@protoc_insertion_point(field_list:BattleResultNty.ObjectList)
  return objectlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainCopyReq::kCopyIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainCopyReq::MainCopyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MainCopyReq)
}

void MainCopyReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MainCopyReq::MainCopyReq(const MainCopyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MainCopyReq)
}

void MainCopyReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  copyid_ = 0;
}

MainCopyReq::~MainCopyReq() {
  // @@protoc_insertion_point(destructor:MainCopyReq)
  SharedDtor();
}

void MainCopyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MainCopyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MainCopyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MainCopyReq_descriptor_;
}

const MainCopyReq& MainCopyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

MainCopyReq* MainCopyReq::default_instance_ = NULL;

MainCopyReq* MainCopyReq::New(::google::protobuf::Arena* arena) const {
  MainCopyReq* n = new MainCopyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MainCopyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MainCopyReq)
  copyid_ = 0;
}

bool MainCopyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MainCopyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 CopyID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MainCopyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MainCopyReq)
  return false;
#undef DO_
}

void MainCopyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MainCopyReq)
  // optional int32 CopyID = 1;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->copyid(), output);
  }

  // @@protoc_insertion_point(serialize_end:MainCopyReq)
}

::google::protobuf::uint8* MainCopyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MainCopyReq)
  // optional int32 CopyID = 1;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->copyid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MainCopyReq)
  return target;
}

int MainCopyReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MainCopyReq)
  int total_size = 0;

  // optional int32 CopyID = 1;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MainCopyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MainCopyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MainCopyReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MainCopyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MainCopyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MainCopyReq)
    MergeFrom(*source);
  }
}

void MainCopyReq::MergeFrom(const MainCopyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MainCopyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
}

void MainCopyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MainCopyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainCopyReq::CopyFrom(const MainCopyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MainCopyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCopyReq::IsInitialized() const {

  return true;
}

void MainCopyReq::Swap(MainCopyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainCopyReq::InternalSwap(MainCopyReq* other) {
  std::swap(copyid_, other->copyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MainCopyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MainCopyReq_descriptor_;
  metadata.reflection = MainCopyReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MainCopyReq

// optional int32 CopyID = 1;
void MainCopyReq::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 MainCopyReq::copyid() const {
  // @@protoc_insertion_point(field_get:MainCopyReq.CopyID)
  return copyid_;
}
 void MainCopyReq::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:MainCopyReq.CopyID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainCopyAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainCopyAck::MainCopyAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MainCopyAck)
}

void MainCopyAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MainCopyAck::MainCopyAck(const MainCopyAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MainCopyAck)
}

void MainCopyAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

MainCopyAck::~MainCopyAck() {
  // @@protoc_insertion_point(destructor:MainCopyAck)
  SharedDtor();
}

void MainCopyAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MainCopyAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MainCopyAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MainCopyAck_descriptor_;
}

const MainCopyAck& MainCopyAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

MainCopyAck* MainCopyAck::default_instance_ = NULL;

MainCopyAck* MainCopyAck::New(::google::protobuf::Arena* arena) const {
  MainCopyAck* n = new MainCopyAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MainCopyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:MainCopyAck)
  retcode_ = 0u;
}

bool MainCopyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MainCopyAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MainCopyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MainCopyAck)
  return false;
#undef DO_
}

void MainCopyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MainCopyAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:MainCopyAck)
}

::google::protobuf::uint8* MainCopyAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MainCopyAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MainCopyAck)
  return target;
}

int MainCopyAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MainCopyAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MainCopyAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MainCopyAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MainCopyAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MainCopyAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MainCopyAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MainCopyAck)
    MergeFrom(*source);
  }
}

void MainCopyAck::MergeFrom(const MainCopyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MainCopyAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void MainCopyAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MainCopyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainCopyAck::CopyFrom(const MainCopyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MainCopyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCopyAck::IsInitialized() const {

  return true;
}

void MainCopyAck::Swap(MainCopyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainCopyAck::InternalSwap(MainCopyAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MainCopyAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MainCopyAck_descriptor_;
  metadata.reflection = MainCopyAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MainCopyAck

// optional uint32 RetCode = 1;
void MainCopyAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 MainCopyAck::retcode() const {
  // @@protoc_insertion_point(field_get:MainCopyAck.RetCode)
  return retcode_;
}
 void MainCopyAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:MainCopyAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemData::kItemIDFieldNumber;
const int ItemData::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemData::ItemData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ItemData)
}

void ItemData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ItemData::ItemData(const ItemData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ItemData)
}

void ItemData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  itemid_ = 0;
  itemnum_ = 0;
}

ItemData::~ItemData() {
  // @@protoc_insertion_point(destructor:ItemData)
  SharedDtor();
}

void ItemData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemData_descriptor_;
}

const ItemData& ItemData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

ItemData* ItemData::default_instance_ = NULL;

ItemData* ItemData::New(::google::protobuf::Arena* arena) const {
  ItemData* n = new ItemData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:ItemData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(itemid_, itemnum_);

#undef ZR_HELPER_
#undef ZR_

}

bool ItemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ItemData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ItemID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ItemNum;
        break;
      }

      // optional int32 ItemNum = 2;
      case 2: {
        if (tag == 16) {
         parse_ItemNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &itemnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ItemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ItemData)
  return false;
#undef DO_
}

void ItemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ItemData)
  // optional int32 ItemID = 1;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->itemid(), output);
  }

  // optional int32 ItemNum = 2;
  if (this->itemnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->itemnum(), output);
  }

  // @@protoc_insertion_point(serialize_end:ItemData)
}

::google::protobuf::uint8* ItemData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ItemData)
  // optional int32 ItemID = 1;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->itemid(), target);
  }

  // optional int32 ItemNum = 2;
  if (this->itemnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->itemnum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ItemData)
  return target;
}

int ItemData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ItemData)
  int total_size = 0;

  // optional int32 ItemID = 1;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemid());
  }

  // optional int32 ItemNum = 2;
  if (this->itemnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->itemnum());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ItemData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ItemData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ItemData)
    MergeFrom(*source);
  }
}

void ItemData::MergeFrom(const ItemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ItemData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.itemnum() != 0) {
    set_itemnum(from.itemnum());
  }
}

void ItemData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemData::CopyFrom(const ItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemData::IsInitialized() const {

  return true;
}

void ItemData::Swap(ItemData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemData::InternalSwap(ItemData* other) {
  std::swap(itemid_, other->itemid_);
  std::swap(itemnum_, other->itemnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemData_descriptor_;
  metadata.reflection = ItemData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemData

// optional int32 ItemID = 1;
void ItemData::clear_itemid() {
  itemid_ = 0;
}
 ::google::protobuf::int32 ItemData::itemid() const {
  // @@protoc_insertion_point(field_get:ItemData.ItemID)
  return itemid_;
}
 void ItemData::set_itemid(::google::protobuf::int32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:ItemData.ItemID)
}

// optional int32 ItemNum = 2;
void ItemData::clear_itemnum() {
  itemnum_ = 0;
}
 ::google::protobuf::int32 ItemData::itemnum() const {
  // @@protoc_insertion_point(field_get:ItemData.ItemNum)
  return itemnum_;
}
 void ItemData::set_itemnum(::google::protobuf::int32 value) {
  
  itemnum_ = value;
  // @@protoc_insertion_point(field_set:ItemData.ItemNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainCopyResultNty::kRoleIDFieldNumber;
const int MainCopyResultNty::kCopyIDFieldNumber;
const int MainCopyResultNty::kCopyResultFieldNumber;
const int MainCopyResultNty::kStarNumFieldNumber;
const int MainCopyResultNty::kLastTimeFieldNumber;
const int MainCopyResultNty::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainCopyResultNty::MainCopyResultNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MainCopyResultNty)
}

void MainCopyResultNty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MainCopyResultNty::MainCopyResultNty(const MainCopyResultNty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MainCopyResultNty)
}

void MainCopyResultNty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  copyid_ = 0;
  copyresult_ = 0;
  starnum_ = 0;
  lasttime_ = GOOGLE_ULONGLONG(0);
}

MainCopyResultNty::~MainCopyResultNty() {
  // @@protoc_insertion_point(destructor:MainCopyResultNty)
  SharedDtor();
}

void MainCopyResultNty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MainCopyResultNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MainCopyResultNty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MainCopyResultNty_descriptor_;
}

const MainCopyResultNty& MainCopyResultNty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

MainCopyResultNty* MainCopyResultNty::default_instance_ = NULL;

MainCopyResultNty* MainCopyResultNty::New(::google::protobuf::Arena* arena) const {
  MainCopyResultNty* n = new MainCopyResultNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MainCopyResultNty::Clear() {
// @@protoc_insertion_point(message_clear_start:MainCopyResultNty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MainCopyResultNty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MainCopyResultNty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, lasttime_);
  starnum_ = 0;

#undef ZR_HELPER_
#undef ZR_

  itemlist_.Clear();
}

bool MainCopyResultNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MainCopyResultNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyID;
        break;
      }

      // optional int32 CopyID = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CopyResult;
        break;
      }

      // optional int32 CopyResult = 3;
      case 3: {
        if (tag == 24) {
         parse_CopyResult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyresult_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StarNum;
        break;
      }

      // optional int32 StarNum = 4;
      case 4: {
        if (tag == 32) {
         parse_StarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_LastTime;
        break;
      }

      // optional uint64 LastTime = 5;
      case 5: {
        if (tag == 40) {
         parse_LastTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lasttime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_ItemList;
        break;
      }

      // repeated .ItemData ItemList = 6;
      case 6: {
        if (tag == 50) {
         parse_ItemList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MainCopyResultNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MainCopyResultNty)
  return false;
#undef DO_
}

void MainCopyResultNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MainCopyResultNty)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // optional int32 CopyResult = 3;
  if (this->copyresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyresult(), output);
  }

  // optional int32 StarNum = 4;
  if (this->starnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->starnum(), output);
  }

  // optional uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->lasttime(), output);
  }

  // repeated .ItemData ItemList = 6;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->itemlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:MainCopyResultNty)
}

::google::protobuf::uint8* MainCopyResultNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MainCopyResultNty)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // optional int32 CopyResult = 3;
  if (this->copyresult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyresult(), target);
  }

  // optional int32 StarNum = 4;
  if (this->starnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->starnum(), target);
  }

  // optional uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->lasttime(), target);
  }

  // repeated .ItemData ItemList = 6;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->itemlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MainCopyResultNty)
  return target;
}

int MainCopyResultNty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MainCopyResultNty)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // optional int32 CopyResult = 3;
  if (this->copyresult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyresult());
  }

  // optional int32 StarNum = 4;
  if (this->starnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starnum());
  }

  // optional uint64 LastTime = 5;
  if (this->lasttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lasttime());
  }

  // repeated .ItemData ItemList = 6;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MainCopyResultNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MainCopyResultNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MainCopyResultNty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MainCopyResultNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MainCopyResultNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MainCopyResultNty)
    MergeFrom(*source);
  }
}

void MainCopyResultNty::MergeFrom(const MainCopyResultNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MainCopyResultNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copyresult() != 0) {
    set_copyresult(from.copyresult());
  }
  if (from.starnum() != 0) {
    set_starnum(from.starnum());
  }
  if (from.lasttime() != 0) {
    set_lasttime(from.lasttime());
  }
}

void MainCopyResultNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MainCopyResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainCopyResultNty::CopyFrom(const MainCopyResultNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MainCopyResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCopyResultNty::IsInitialized() const {

  return true;
}

void MainCopyResultNty::Swap(MainCopyResultNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainCopyResultNty::InternalSwap(MainCopyResultNty* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(copyid_, other->copyid_);
  std::swap(copyresult_, other->copyresult_);
  std::swap(starnum_, other->starnum_);
  std::swap(lasttime_, other->lasttime_);
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MainCopyResultNty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MainCopyResultNty_descriptor_;
  metadata.reflection = MainCopyResultNty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MainCopyResultNty

// optional uint64 RoleID = 1;
void MainCopyResultNty::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MainCopyResultNty::roleid() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.RoleID)
  return roleid_;
}
 void MainCopyResultNty::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:MainCopyResultNty.RoleID)
}

// optional int32 CopyID = 2;
void MainCopyResultNty::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 MainCopyResultNty::copyid() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.CopyID)
  return copyid_;
}
 void MainCopyResultNty::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:MainCopyResultNty.CopyID)
}

// optional int32 CopyResult = 3;
void MainCopyResultNty::clear_copyresult() {
  copyresult_ = 0;
}
 ::google::protobuf::int32 MainCopyResultNty::copyresult() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.CopyResult)
  return copyresult_;
}
 void MainCopyResultNty::set_copyresult(::google::protobuf::int32 value) {
  
  copyresult_ = value;
  // @@protoc_insertion_point(field_set:MainCopyResultNty.CopyResult)
}

// optional int32 StarNum = 4;
void MainCopyResultNty::clear_starnum() {
  starnum_ = 0;
}
 ::google::protobuf::int32 MainCopyResultNty::starnum() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.StarNum)
  return starnum_;
}
 void MainCopyResultNty::set_starnum(::google::protobuf::int32 value) {
  
  starnum_ = value;
  // @@protoc_insertion_point(field_set:MainCopyResultNty.StarNum)
}

// optional uint64 LastTime = 5;
void MainCopyResultNty::clear_lasttime() {
  lasttime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MainCopyResultNty::lasttime() const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.LastTime)
  return lasttime_;
}
 void MainCopyResultNty::set_lasttime(::google::protobuf::uint64 value) {
  
  lasttime_ = value;
  // @@protoc_insertion_point(field_set:MainCopyResultNty.LastTime)
}

// repeated .ItemData ItemList = 6;
int MainCopyResultNty::itemlist_size() const {
  return itemlist_.size();
}
void MainCopyResultNty::clear_itemlist() {
  itemlist_.Clear();
}
const ::ItemData& MainCopyResultNty::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:MainCopyResultNty.ItemList)
  return itemlist_.Get(index);
}
::ItemData* MainCopyResultNty::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:MainCopyResultNty.ItemList)
  return itemlist_.Mutable(index);
}
::ItemData* MainCopyResultNty::add_itemlist() {
  // @@protoc_insertion_point(field_add:MainCopyResultNty.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::ItemData >*
MainCopyResultNty::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:MainCopyResultNty.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::ItemData >&
MainCopyResultNty::itemlist() const {
  // @@protoc_insertion_point(field_list:MainCopyResultNty.ItemList)
  return itemlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_CreateRoomReq::kRoleIDFieldNumber;
const int Msg_CreateRoomReq::kCopyIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_CreateRoomReq::Msg_CreateRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_CreateRoomReq)
}

void Msg_CreateRoomReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_CreateRoomReq::Msg_CreateRoomReq(const Msg_CreateRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_CreateRoomReq)
}

void Msg_CreateRoomReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  copyid_ = 0u;
}

Msg_CreateRoomReq::~Msg_CreateRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_CreateRoomReq)
  SharedDtor();
}

void Msg_CreateRoomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_CreateRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_CreateRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_CreateRoomReq_descriptor_;
}

const Msg_CreateRoomReq& Msg_CreateRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_CreateRoomReq* Msg_CreateRoomReq::default_instance_ = NULL;

Msg_CreateRoomReq* Msg_CreateRoomReq::New(::google::protobuf::Arena* arena) const {
  Msg_CreateRoomReq* n = new Msg_CreateRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_CreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_CreateRoomReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Msg_CreateRoomReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Msg_CreateRoomReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, copyid_);

#undef ZR_HELPER_
#undef ZR_

}

bool Msg_CreateRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_CreateRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyID;
        break;
      }

      // optional uint32 CopyID = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_CreateRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_CreateRoomReq)
  return false;
#undef DO_
}

void Msg_CreateRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_CreateRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->copyid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_CreateRoomReq)
}

::google::protobuf::uint8* Msg_CreateRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_CreateRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->copyid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_CreateRoomReq)
  return target;
}

int Msg_CreateRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_CreateRoomReq)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_CreateRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_CreateRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_CreateRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_CreateRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_CreateRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_CreateRoomReq)
    MergeFrom(*source);
  }
}

void Msg_CreateRoomReq::MergeFrom(const Msg_CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_CreateRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
}

void Msg_CreateRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CreateRoomReq::CopyFrom(const Msg_CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CreateRoomReq::IsInitialized() const {

  return true;
}

void Msg_CreateRoomReq::Swap(Msg_CreateRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_CreateRoomReq::InternalSwap(Msg_CreateRoomReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(copyid_, other->copyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_CreateRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_CreateRoomReq_descriptor_;
  metadata.reflection = Msg_CreateRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_CreateRoomReq

// optional uint64 RoleID = 1;
void Msg_CreateRoomReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_CreateRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_CreateRoomReq.RoleID)
  return roleid_;
}
 void Msg_CreateRoomReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Msg_CreateRoomReq.RoleID)
}

// optional uint32 CopyID = 2;
void Msg_CreateRoomReq::clear_copyid() {
  copyid_ = 0u;
}
 ::google::protobuf::uint32 Msg_CreateRoomReq::copyid() const {
  // @@protoc_insertion_point(field_get:Msg_CreateRoomReq.CopyID)
  return copyid_;
}
 void Msg_CreateRoomReq::set_copyid(::google::protobuf::uint32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:Msg_CreateRoomReq.CopyID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_CreateRoomAck::kRetCodeFieldNumber;
const int Msg_CreateRoomAck::kRoomIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_CreateRoomAck::Msg_CreateRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_CreateRoomAck)
}

void Msg_CreateRoomAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_CreateRoomAck::Msg_CreateRoomAck(const Msg_CreateRoomAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_CreateRoomAck)
}

void Msg_CreateRoomAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  roomid_ = GOOGLE_ULONGLONG(0);
}

Msg_CreateRoomAck::~Msg_CreateRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_CreateRoomAck)
  SharedDtor();
}

void Msg_CreateRoomAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_CreateRoomAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_CreateRoomAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_CreateRoomAck_descriptor_;
}

const Msg_CreateRoomAck& Msg_CreateRoomAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_CreateRoomAck* Msg_CreateRoomAck::default_instance_ = NULL;

Msg_CreateRoomAck* Msg_CreateRoomAck::New(::google::protobuf::Arena* arena) const {
  Msg_CreateRoomAck* n = new Msg_CreateRoomAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_CreateRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_CreateRoomAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Msg_CreateRoomAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Msg_CreateRoomAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roomid_, retcode_);

#undef ZR_HELPER_
#undef ZR_

}

bool Msg_CreateRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_CreateRoomAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoomID;
        break;
      }

      // optional uint64 RoomID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoomID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_CreateRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_CreateRoomAck)
  return false;
#undef DO_
}

void Msg_CreateRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_CreateRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_CreateRoomAck)
}

::google::protobuf::uint8* Msg_CreateRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_CreateRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_CreateRoomAck)
  return target;
}

int Msg_CreateRoomAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_CreateRoomAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_CreateRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_CreateRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_CreateRoomAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_CreateRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_CreateRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_CreateRoomAck)
    MergeFrom(*source);
  }
}

void Msg_CreateRoomAck::MergeFrom(const Msg_CreateRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_CreateRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void Msg_CreateRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_CreateRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_CreateRoomAck::CopyFrom(const Msg_CreateRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_CreateRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CreateRoomAck::IsInitialized() const {

  return true;
}

void Msg_CreateRoomAck::Swap(Msg_CreateRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_CreateRoomAck::InternalSwap(Msg_CreateRoomAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_CreateRoomAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_CreateRoomAck_descriptor_;
  metadata.reflection = Msg_CreateRoomAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_CreateRoomAck

// optional uint32 RetCode = 1;
void Msg_CreateRoomAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 Msg_CreateRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_CreateRoomAck.RetCode)
  return retcode_;
}
 void Msg_CreateRoomAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Msg_CreateRoomAck.RetCode)
}

// optional uint64 RoomID = 2;
void Msg_CreateRoomAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_CreateRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_CreateRoomAck.RoomID)
  return roomid_;
}
 void Msg_CreateRoomAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Msg_CreateRoomAck.RoomID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_JoinRoomReq::kRoleIDFieldNumber;
const int Msg_JoinRoomReq::kRoomIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_JoinRoomReq::Msg_JoinRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_JoinRoomReq)
}

void Msg_JoinRoomReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_JoinRoomReq::Msg_JoinRoomReq(const Msg_JoinRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_JoinRoomReq)
}

void Msg_JoinRoomReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  roomid_ = GOOGLE_ULONGLONG(0);
}

Msg_JoinRoomReq::~Msg_JoinRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_JoinRoomReq)
  SharedDtor();
}

void Msg_JoinRoomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_JoinRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_JoinRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_JoinRoomReq_descriptor_;
}

const Msg_JoinRoomReq& Msg_JoinRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_JoinRoomReq* Msg_JoinRoomReq::default_instance_ = NULL;

Msg_JoinRoomReq* Msg_JoinRoomReq::New(::google::protobuf::Arena* arena) const {
  Msg_JoinRoomReq* n = new Msg_JoinRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_JoinRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_JoinRoomReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Msg_JoinRoomReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Msg_JoinRoomReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, roomid_);

#undef ZR_HELPER_
#undef ZR_

}

bool Msg_JoinRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_JoinRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoomID;
        break;
      }

      // optional uint64 RoomID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoomID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_JoinRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_JoinRoomReq)
  return false;
#undef DO_
}

void Msg_JoinRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_JoinRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_JoinRoomReq)
}

::google::protobuf::uint8* Msg_JoinRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_JoinRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_JoinRoomReq)
  return target;
}

int Msg_JoinRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_JoinRoomReq)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_JoinRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_JoinRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_JoinRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_JoinRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_JoinRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_JoinRoomReq)
    MergeFrom(*source);
  }
}

void Msg_JoinRoomReq::MergeFrom(const Msg_JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_JoinRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void Msg_JoinRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_JoinRoomReq::CopyFrom(const Msg_JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_JoinRoomReq::IsInitialized() const {

  return true;
}

void Msg_JoinRoomReq::Swap(Msg_JoinRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_JoinRoomReq::InternalSwap(Msg_JoinRoomReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_JoinRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_JoinRoomReq_descriptor_;
  metadata.reflection = Msg_JoinRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_JoinRoomReq

// optional uint64 RoleID = 1;
void Msg_JoinRoomReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_JoinRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_JoinRoomReq.RoleID)
  return roleid_;
}
 void Msg_JoinRoomReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Msg_JoinRoomReq.RoleID)
}

// optional uint64 RoomID = 2;
void Msg_JoinRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_JoinRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_JoinRoomReq.RoomID)
  return roomid_;
}
 void Msg_JoinRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Msg_JoinRoomReq.RoomID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_JoinRoomAck::kRetCodeFieldNumber;
const int Msg_JoinRoomAck::kRoomIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_JoinRoomAck::Msg_JoinRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_JoinRoomAck)
}

void Msg_JoinRoomAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_JoinRoomAck::Msg_JoinRoomAck(const Msg_JoinRoomAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_JoinRoomAck)
}

void Msg_JoinRoomAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  roomid_ = GOOGLE_ULONGLONG(0);
}

Msg_JoinRoomAck::~Msg_JoinRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_JoinRoomAck)
  SharedDtor();
}

void Msg_JoinRoomAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_JoinRoomAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_JoinRoomAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_JoinRoomAck_descriptor_;
}

const Msg_JoinRoomAck& Msg_JoinRoomAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_JoinRoomAck* Msg_JoinRoomAck::default_instance_ = NULL;

Msg_JoinRoomAck* Msg_JoinRoomAck::New(::google::protobuf::Arena* arena) const {
  Msg_JoinRoomAck* n = new Msg_JoinRoomAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_JoinRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_JoinRoomAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Msg_JoinRoomAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Msg_JoinRoomAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roomid_, retcode_);

#undef ZR_HELPER_
#undef ZR_

}

bool Msg_JoinRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_JoinRoomAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoomID;
        break;
      }

      // optional uint64 RoomID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoomID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_JoinRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_JoinRoomAck)
  return false;
#undef DO_
}

void Msg_JoinRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_JoinRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_JoinRoomAck)
}

::google::protobuf::uint8* Msg_JoinRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_JoinRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_JoinRoomAck)
  return target;
}

int Msg_JoinRoomAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_JoinRoomAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_JoinRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_JoinRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_JoinRoomAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_JoinRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_JoinRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_JoinRoomAck)
    MergeFrom(*source);
  }
}

void Msg_JoinRoomAck::MergeFrom(const Msg_JoinRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_JoinRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void Msg_JoinRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_JoinRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_JoinRoomAck::CopyFrom(const Msg_JoinRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_JoinRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_JoinRoomAck::IsInitialized() const {

  return true;
}

void Msg_JoinRoomAck::Swap(Msg_JoinRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_JoinRoomAck::InternalSwap(Msg_JoinRoomAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_JoinRoomAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_JoinRoomAck_descriptor_;
  metadata.reflection = Msg_JoinRoomAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_JoinRoomAck

// optional uint32 RetCode = 1;
void Msg_JoinRoomAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 Msg_JoinRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_JoinRoomAck.RetCode)
  return retcode_;
}
 void Msg_JoinRoomAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Msg_JoinRoomAck.RetCode)
}

// optional uint64 RoomID = 2;
void Msg_JoinRoomAck::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_JoinRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_JoinRoomAck.RoomID)
  return roomid_;
}
 void Msg_JoinRoomAck::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Msg_JoinRoomAck.RoomID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_KickRoomReq::kRoleIDFieldNumber;
const int Msg_KickRoomReq::kRoomIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_KickRoomReq::Msg_KickRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_KickRoomReq)
}

void Msg_KickRoomReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_KickRoomReq::Msg_KickRoomReq(const Msg_KickRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_KickRoomReq)
}

void Msg_KickRoomReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  roomid_ = GOOGLE_ULONGLONG(0);
}

Msg_KickRoomReq::~Msg_KickRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_KickRoomReq)
  SharedDtor();
}

void Msg_KickRoomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_KickRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_KickRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_KickRoomReq_descriptor_;
}

const Msg_KickRoomReq& Msg_KickRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_KickRoomReq* Msg_KickRoomReq::default_instance_ = NULL;

Msg_KickRoomReq* Msg_KickRoomReq::New(::google::protobuf::Arena* arena) const {
  Msg_KickRoomReq* n = new Msg_KickRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_KickRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_KickRoomReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Msg_KickRoomReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Msg_KickRoomReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, roomid_);

#undef ZR_HELPER_
#undef ZR_

}

bool Msg_KickRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_KickRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoomID;
        break;
      }

      // optional uint64 RoomID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoomID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_KickRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_KickRoomReq)
  return false;
#undef DO_
}

void Msg_KickRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_KickRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_KickRoomReq)
}

::google::protobuf::uint8* Msg_KickRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_KickRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_KickRoomReq)
  return target;
}

int Msg_KickRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_KickRoomReq)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_KickRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_KickRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_KickRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_KickRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_KickRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_KickRoomReq)
    MergeFrom(*source);
  }
}

void Msg_KickRoomReq::MergeFrom(const Msg_KickRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_KickRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void Msg_KickRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_KickRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_KickRoomReq::CopyFrom(const Msg_KickRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_KickRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_KickRoomReq::IsInitialized() const {

  return true;
}

void Msg_KickRoomReq::Swap(Msg_KickRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_KickRoomReq::InternalSwap(Msg_KickRoomReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_KickRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_KickRoomReq_descriptor_;
  metadata.reflection = Msg_KickRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_KickRoomReq

// optional uint64 RoleID = 1;
void Msg_KickRoomReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_KickRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_KickRoomReq.RoleID)
  return roleid_;
}
 void Msg_KickRoomReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Msg_KickRoomReq.RoleID)
}

// optional uint64 RoomID = 2;
void Msg_KickRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_KickRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_KickRoomReq.RoomID)
  return roomid_;
}
 void Msg_KickRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Msg_KickRoomReq.RoomID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_KickRoomAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_KickRoomAck::Msg_KickRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_KickRoomAck)
}

void Msg_KickRoomAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_KickRoomAck::Msg_KickRoomAck(const Msg_KickRoomAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_KickRoomAck)
}

void Msg_KickRoomAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

Msg_KickRoomAck::~Msg_KickRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_KickRoomAck)
  SharedDtor();
}

void Msg_KickRoomAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_KickRoomAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_KickRoomAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_KickRoomAck_descriptor_;
}

const Msg_KickRoomAck& Msg_KickRoomAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_KickRoomAck* Msg_KickRoomAck::default_instance_ = NULL;

Msg_KickRoomAck* Msg_KickRoomAck::New(::google::protobuf::Arena* arena) const {
  Msg_KickRoomAck* n = new Msg_KickRoomAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_KickRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_KickRoomAck)
  retcode_ = 0u;
}

bool Msg_KickRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_KickRoomAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_KickRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_KickRoomAck)
  return false;
#undef DO_
}

void Msg_KickRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_KickRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_KickRoomAck)
}

::google::protobuf::uint8* Msg_KickRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_KickRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_KickRoomAck)
  return target;
}

int Msg_KickRoomAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_KickRoomAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_KickRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_KickRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_KickRoomAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_KickRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_KickRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_KickRoomAck)
    MergeFrom(*source);
  }
}

void Msg_KickRoomAck::MergeFrom(const Msg_KickRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_KickRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void Msg_KickRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_KickRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_KickRoomAck::CopyFrom(const Msg_KickRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_KickRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_KickRoomAck::IsInitialized() const {

  return true;
}

void Msg_KickRoomAck::Swap(Msg_KickRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_KickRoomAck::InternalSwap(Msg_KickRoomAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_KickRoomAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_KickRoomAck_descriptor_;
  metadata.reflection = Msg_KickRoomAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_KickRoomAck

// optional uint32 RetCode = 1;
void Msg_KickRoomAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 Msg_KickRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_KickRoomAck.RetCode)
  return retcode_;
}
 void Msg_KickRoomAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Msg_KickRoomAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_LeaveRoomReq::kRoleIDFieldNumber;
const int Msg_LeaveRoomReq::kRoomIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_LeaveRoomReq::Msg_LeaveRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_LeaveRoomReq)
}

void Msg_LeaveRoomReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_LeaveRoomReq::Msg_LeaveRoomReq(const Msg_LeaveRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_LeaveRoomReq)
}

void Msg_LeaveRoomReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  roomid_ = GOOGLE_ULONGLONG(0);
}

Msg_LeaveRoomReq::~Msg_LeaveRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_LeaveRoomReq)
  SharedDtor();
}

void Msg_LeaveRoomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_LeaveRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_LeaveRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_LeaveRoomReq_descriptor_;
}

const Msg_LeaveRoomReq& Msg_LeaveRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_LeaveRoomReq* Msg_LeaveRoomReq::default_instance_ = NULL;

Msg_LeaveRoomReq* Msg_LeaveRoomReq::New(::google::protobuf::Arena* arena) const {
  Msg_LeaveRoomReq* n = new Msg_LeaveRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_LeaveRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_LeaveRoomReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Msg_LeaveRoomReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Msg_LeaveRoomReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, roomid_);

#undef ZR_HELPER_
#undef ZR_

}

bool Msg_LeaveRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_LeaveRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoomID;
        break;
      }

      // optional uint64 RoomID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoomID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_LeaveRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_LeaveRoomReq)
  return false;
#undef DO_
}

void Msg_LeaveRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_LeaveRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_LeaveRoomReq)
}

::google::protobuf::uint8* Msg_LeaveRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_LeaveRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_LeaveRoomReq)
  return target;
}

int Msg_LeaveRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_LeaveRoomReq)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_LeaveRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_LeaveRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_LeaveRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_LeaveRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_LeaveRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_LeaveRoomReq)
    MergeFrom(*source);
  }
}

void Msg_LeaveRoomReq::MergeFrom(const Msg_LeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_LeaveRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void Msg_LeaveRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_LeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_LeaveRoomReq::CopyFrom(const Msg_LeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_LeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_LeaveRoomReq::IsInitialized() const {

  return true;
}

void Msg_LeaveRoomReq::Swap(Msg_LeaveRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_LeaveRoomReq::InternalSwap(Msg_LeaveRoomReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_LeaveRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_LeaveRoomReq_descriptor_;
  metadata.reflection = Msg_LeaveRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_LeaveRoomReq

// optional uint64 RoleID = 1;
void Msg_LeaveRoomReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_LeaveRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_LeaveRoomReq.RoleID)
  return roleid_;
}
 void Msg_LeaveRoomReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Msg_LeaveRoomReq.RoleID)
}

// optional uint64 RoomID = 2;
void Msg_LeaveRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_LeaveRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_LeaveRoomReq.RoomID)
  return roomid_;
}
 void Msg_LeaveRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Msg_LeaveRoomReq.RoomID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_LeaveRoomAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_LeaveRoomAck::Msg_LeaveRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_LeaveRoomAck)
}

void Msg_LeaveRoomAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_LeaveRoomAck::Msg_LeaveRoomAck(const Msg_LeaveRoomAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_LeaveRoomAck)
}

void Msg_LeaveRoomAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

Msg_LeaveRoomAck::~Msg_LeaveRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_LeaveRoomAck)
  SharedDtor();
}

void Msg_LeaveRoomAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_LeaveRoomAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_LeaveRoomAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_LeaveRoomAck_descriptor_;
}

const Msg_LeaveRoomAck& Msg_LeaveRoomAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_LeaveRoomAck* Msg_LeaveRoomAck::default_instance_ = NULL;

Msg_LeaveRoomAck* Msg_LeaveRoomAck::New(::google::protobuf::Arena* arena) const {
  Msg_LeaveRoomAck* n = new Msg_LeaveRoomAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_LeaveRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_LeaveRoomAck)
  retcode_ = 0u;
}

bool Msg_LeaveRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_LeaveRoomAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_LeaveRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_LeaveRoomAck)
  return false;
#undef DO_
}

void Msg_LeaveRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_LeaveRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_LeaveRoomAck)
}

::google::protobuf::uint8* Msg_LeaveRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_LeaveRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_LeaveRoomAck)
  return target;
}

int Msg_LeaveRoomAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_LeaveRoomAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_LeaveRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_LeaveRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_LeaveRoomAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_LeaveRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_LeaveRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_LeaveRoomAck)
    MergeFrom(*source);
  }
}

void Msg_LeaveRoomAck::MergeFrom(const Msg_LeaveRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_LeaveRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void Msg_LeaveRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_LeaveRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_LeaveRoomAck::CopyFrom(const Msg_LeaveRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_LeaveRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_LeaveRoomAck::IsInitialized() const {

  return true;
}

void Msg_LeaveRoomAck::Swap(Msg_LeaveRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_LeaveRoomAck::InternalSwap(Msg_LeaveRoomAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_LeaveRoomAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_LeaveRoomAck_descriptor_;
  metadata.reflection = Msg_LeaveRoomAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_LeaveRoomAck

// optional uint32 RetCode = 1;
void Msg_LeaveRoomAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 Msg_LeaveRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_LeaveRoomAck.RetCode)
  return retcode_;
}
 void Msg_LeaveRoomAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Msg_LeaveRoomAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_StartRoomReq::kRoleIDFieldNumber;
const int Msg_StartRoomReq::kRoomIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_StartRoomReq::Msg_StartRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_StartRoomReq)
}

void Msg_StartRoomReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_StartRoomReq::Msg_StartRoomReq(const Msg_StartRoomReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_StartRoomReq)
}

void Msg_StartRoomReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  roomid_ = GOOGLE_ULONGLONG(0);
}

Msg_StartRoomReq::~Msg_StartRoomReq() {
  // @@protoc_insertion_point(destructor:Msg_StartRoomReq)
  SharedDtor();
}

void Msg_StartRoomReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_StartRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_StartRoomReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_StartRoomReq_descriptor_;
}

const Msg_StartRoomReq& Msg_StartRoomReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_StartRoomReq* Msg_StartRoomReq::default_instance_ = NULL;

Msg_StartRoomReq* Msg_StartRoomReq::New(::google::protobuf::Arena* arena) const {
  Msg_StartRoomReq* n = new Msg_StartRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_StartRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_StartRoomReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Msg_StartRoomReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Msg_StartRoomReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, roomid_);

#undef ZR_HELPER_
#undef ZR_

}

bool Msg_StartRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_StartRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoomID;
        break;
      }

      // optional uint64 RoomID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoomID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_StartRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_StartRoomReq)
  return false;
#undef DO_
}

void Msg_StartRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_StartRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_StartRoomReq)
}

::google::protobuf::uint8* Msg_StartRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_StartRoomReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_StartRoomReq)
  return target;
}

int Msg_StartRoomReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_StartRoomReq)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 RoomID = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_StartRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_StartRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_StartRoomReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_StartRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_StartRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_StartRoomReq)
    MergeFrom(*source);
  }
}

void Msg_StartRoomReq::MergeFrom(const Msg_StartRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_StartRoomReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void Msg_StartRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_StartRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_StartRoomReq::CopyFrom(const Msg_StartRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_StartRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_StartRoomReq::IsInitialized() const {

  return true;
}

void Msg_StartRoomReq::Swap(Msg_StartRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_StartRoomReq::InternalSwap(Msg_StartRoomReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_StartRoomReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_StartRoomReq_descriptor_;
  metadata.reflection = Msg_StartRoomReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_StartRoomReq

// optional uint64 RoleID = 1;
void Msg_StartRoomReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_StartRoomReq::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_StartRoomReq.RoleID)
  return roleid_;
}
 void Msg_StartRoomReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Msg_StartRoomReq.RoleID)
}

// optional uint64 RoomID = 2;
void Msg_StartRoomReq::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_StartRoomReq::roomid() const {
  // @@protoc_insertion_point(field_get:Msg_StartRoomReq.RoomID)
  return roomid_;
}
 void Msg_StartRoomReq::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:Msg_StartRoomReq.RoomID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_StartRoomAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_StartRoomAck::Msg_StartRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_StartRoomAck)
}

void Msg_StartRoomAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_StartRoomAck::Msg_StartRoomAck(const Msg_StartRoomAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_StartRoomAck)
}

void Msg_StartRoomAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

Msg_StartRoomAck::~Msg_StartRoomAck() {
  // @@protoc_insertion_point(destructor:Msg_StartRoomAck)
  SharedDtor();
}

void Msg_StartRoomAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_StartRoomAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_StartRoomAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_StartRoomAck_descriptor_;
}

const Msg_StartRoomAck& Msg_StartRoomAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_StartRoomAck* Msg_StartRoomAck::default_instance_ = NULL;

Msg_StartRoomAck* Msg_StartRoomAck::New(::google::protobuf::Arena* arena) const {
  Msg_StartRoomAck* n = new Msg_StartRoomAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_StartRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_StartRoomAck)
  retcode_ = 0u;
}

bool Msg_StartRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_StartRoomAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_StartRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_StartRoomAck)
  return false;
#undef DO_
}

void Msg_StartRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_StartRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_StartRoomAck)
}

::google::protobuf::uint8* Msg_StartRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_StartRoomAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_StartRoomAck)
  return target;
}

int Msg_StartRoomAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_StartRoomAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_StartRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_StartRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_StartRoomAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_StartRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_StartRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_StartRoomAck)
    MergeFrom(*source);
  }
}

void Msg_StartRoomAck::MergeFrom(const Msg_StartRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_StartRoomAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void Msg_StartRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_StartRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_StartRoomAck::CopyFrom(const Msg_StartRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_StartRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_StartRoomAck::IsInitialized() const {

  return true;
}

void Msg_StartRoomAck::Swap(Msg_StartRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_StartRoomAck::InternalSwap(Msg_StartRoomAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_StartRoomAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_StartRoomAck_descriptor_;
  metadata.reflection = Msg_StartRoomAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_StartRoomAck

// optional uint32 RetCode = 1;
void Msg_StartRoomAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 Msg_StartRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:Msg_StartRoomAck.RetCode)
  return retcode_;
}
 void Msg_StartRoomAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Msg_StartRoomAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_RoomPlayerInfo::kRoleIDFieldNumber;
const int Msg_RoomPlayerInfo::kLevelFieldNumber;
const int Msg_RoomPlayerInfo::kNameFieldNumber;
const int Msg_RoomPlayerInfo::kActorIDFieldNumber;
const int Msg_RoomPlayerInfo::kMountIDFieldNumber;
const int Msg_RoomPlayerInfo::kEquipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_RoomPlayerInfo::Msg_RoomPlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_RoomPlayerInfo)
}

void Msg_RoomPlayerInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_RoomPlayerInfo::Msg_RoomPlayerInfo(const Msg_RoomPlayerInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_RoomPlayerInfo)
}

void Msg_RoomPlayerInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  level_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actorid_ = 0;
  mountid_ = 0;
}

Msg_RoomPlayerInfo::~Msg_RoomPlayerInfo() {
  // @@protoc_insertion_point(destructor:Msg_RoomPlayerInfo)
  SharedDtor();
}

void Msg_RoomPlayerInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Msg_RoomPlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_RoomPlayerInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_RoomPlayerInfo_descriptor_;
}

const Msg_RoomPlayerInfo& Msg_RoomPlayerInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_RoomPlayerInfo* Msg_RoomPlayerInfo::default_instance_ = NULL;

Msg_RoomPlayerInfo* Msg_RoomPlayerInfo::New(::google::protobuf::Arena* arena) const {
  Msg_RoomPlayerInfo* n = new Msg_RoomPlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_RoomPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_RoomPlayerInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Msg_RoomPlayerInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Msg_RoomPlayerInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(level_, actorid_);
  roleid_ = GOOGLE_ULONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mountid_ = 0;

#undef ZR_HELPER_
#undef ZR_

  equips_.Clear();
}

bool Msg_RoomPlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_RoomPlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // optional int32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Name;
        break;
      }

      // optional string Name = 3;
      case 3: {
        if (tag == 26) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Msg_RoomPlayerInfo.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 4;
      case 4: {
        if (tag == 32) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_MountID;
        break;
      }

      // optional int32 MountID = 5;
      case 5: {
        if (tag == 40) {
         parse_MountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Equips;
        break;
      }

      // repeated int32 Equips = 6;
      case 6: {
        if (tag == 50) {
         parse_Equips:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_equips())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50, input, this->mutable_equips())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_RoomPlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_RoomPlayerInfo)
  return false;
#undef DO_
}

void Msg_RoomPlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_RoomPlayerInfo)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int32 Level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // optional string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Msg_RoomPlayerInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional int32 ActorID = 4;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->actorid(), output);
  }

  // optional int32 MountID = 5;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mountid(), output);
  }

  // repeated int32 Equips = 6;
  if (this->equips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_equips_cached_byte_size_);
  }
  for (int i = 0; i < this->equips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->equips(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_RoomPlayerInfo)
}

::google::protobuf::uint8* Msg_RoomPlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_RoomPlayerInfo)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int32 Level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // optional string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Msg_RoomPlayerInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional int32 ActorID = 4;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->actorid(), target);
  }

  // optional int32 MountID = 5;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mountid(), target);
  }

  // repeated int32 Equips = 6;
  if (this->equips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _equips_cached_byte_size_, target);
  }
  for (int i = 0; i < this->equips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->equips(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_RoomPlayerInfo)
  return target;
}

int Msg_RoomPlayerInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_RoomPlayerInfo)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 ActorID = 4;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional int32 MountID = 5;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mountid());
  }

  // repeated int32 Equips = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->equips_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->equips(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equips_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_RoomPlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_RoomPlayerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_RoomPlayerInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_RoomPlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_RoomPlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_RoomPlayerInfo)
    MergeFrom(*source);
  }
}

void Msg_RoomPlayerInfo::MergeFrom(const Msg_RoomPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_RoomPlayerInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  equips_.MergeFrom(from.equips_);
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
}

void Msg_RoomPlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_RoomPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_RoomPlayerInfo::CopyFrom(const Msg_RoomPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_RoomPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RoomPlayerInfo::IsInitialized() const {

  return true;
}

void Msg_RoomPlayerInfo::Swap(Msg_RoomPlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_RoomPlayerInfo::InternalSwap(Msg_RoomPlayerInfo* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(level_, other->level_);
  name_.Swap(&other->name_);
  std::swap(actorid_, other->actorid_);
  std::swap(mountid_, other->mountid_);
  equips_.UnsafeArenaSwap(&other->equips_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_RoomPlayerInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_RoomPlayerInfo_descriptor_;
  metadata.reflection = Msg_RoomPlayerInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_RoomPlayerInfo

// optional uint64 RoleID = 1;
void Msg_RoomPlayerInfo::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Msg_RoomPlayerInfo::roleid() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.RoleID)
  return roleid_;
}
 void Msg_RoomPlayerInfo::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.RoleID)
}

// optional int32 Level = 2;
void Msg_RoomPlayerInfo::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 Msg_RoomPlayerInfo::level() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.Level)
  return level_;
}
 void Msg_RoomPlayerInfo::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.Level)
}

// optional string Name = 3;
void Msg_RoomPlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Msg_RoomPlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Msg_RoomPlayerInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.Name)
}
 void Msg_RoomPlayerInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Msg_RoomPlayerInfo.Name)
}
 void Msg_RoomPlayerInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Msg_RoomPlayerInfo.Name)
}
 ::std::string* Msg_RoomPlayerInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Msg_RoomPlayerInfo.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Msg_RoomPlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:Msg_RoomPlayerInfo.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Msg_RoomPlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Msg_RoomPlayerInfo.Name)
}

// optional int32 ActorID = 4;
void Msg_RoomPlayerInfo::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 Msg_RoomPlayerInfo::actorid() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.ActorID)
  return actorid_;
}
 void Msg_RoomPlayerInfo::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.ActorID)
}

// optional int32 MountID = 5;
void Msg_RoomPlayerInfo::clear_mountid() {
  mountid_ = 0;
}
 ::google::protobuf::int32 Msg_RoomPlayerInfo::mountid() const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.MountID)
  return mountid_;
}
 void Msg_RoomPlayerInfo::set_mountid(::google::protobuf::int32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.MountID)
}

// repeated int32 Equips = 6;
int Msg_RoomPlayerInfo::equips_size() const {
  return equips_.size();
}
void Msg_RoomPlayerInfo::clear_equips() {
  equips_.Clear();
}
 ::google::protobuf::int32 Msg_RoomPlayerInfo::equips(int index) const {
  // @@protoc_insertion_point(field_get:Msg_RoomPlayerInfo.Equips)
  return equips_.Get(index);
}
 void Msg_RoomPlayerInfo::set_equips(int index, ::google::protobuf::int32 value) {
  equips_.Set(index, value);
  // @@protoc_insertion_point(field_set:Msg_RoomPlayerInfo.Equips)
}
 void Msg_RoomPlayerInfo::add_equips(::google::protobuf::int32 value) {
  equips_.Add(value);
  // @@protoc_insertion_point(field_add:Msg_RoomPlayerInfo.Equips)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Msg_RoomPlayerInfo::equips() const {
  // @@protoc_insertion_point(field_list:Msg_RoomPlayerInfo.Equips)
  return equips_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Msg_RoomPlayerInfo::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:Msg_RoomPlayerInfo.Equips)
  return &equips_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Msg_BroadRoomNotify::kPlayerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Msg_BroadRoomNotify::Msg_BroadRoomNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Msg_BroadRoomNotify)
}

void Msg_BroadRoomNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Msg_BroadRoomNotify::Msg_BroadRoomNotify(const Msg_BroadRoomNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Msg_BroadRoomNotify)
}

void Msg_BroadRoomNotify::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Msg_BroadRoomNotify::~Msg_BroadRoomNotify() {
  // @@protoc_insertion_point(destructor:Msg_BroadRoomNotify)
  SharedDtor();
}

void Msg_BroadRoomNotify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Msg_BroadRoomNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Msg_BroadRoomNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Msg_BroadRoomNotify_descriptor_;
}

const Msg_BroadRoomNotify& Msg_BroadRoomNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fCopy_2eproto();
  return *default_instance_;
}

Msg_BroadRoomNotify* Msg_BroadRoomNotify::default_instance_ = NULL;

Msg_BroadRoomNotify* Msg_BroadRoomNotify::New(::google::protobuf::Arena* arena) const {
  Msg_BroadRoomNotify* n = new Msg_BroadRoomNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Msg_BroadRoomNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg_BroadRoomNotify)
  playerlist_.Clear();
}

bool Msg_BroadRoomNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Msg_BroadRoomNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Msg_RoomPlayerInfo PlayerList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_PlayerList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playerlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_PlayerList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Msg_BroadRoomNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Msg_BroadRoomNotify)
  return false;
#undef DO_
}

void Msg_BroadRoomNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Msg_BroadRoomNotify)
  // repeated .Msg_RoomPlayerInfo PlayerList = 1;
  for (unsigned int i = 0, n = this->playerlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->playerlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Msg_BroadRoomNotify)
}

::google::protobuf::uint8* Msg_BroadRoomNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Msg_BroadRoomNotify)
  // repeated .Msg_RoomPlayerInfo PlayerList = 1;
  for (unsigned int i = 0, n = this->playerlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->playerlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Msg_BroadRoomNotify)
  return target;
}

int Msg_BroadRoomNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Msg_BroadRoomNotify)
  int total_size = 0;

  // repeated .Msg_RoomPlayerInfo PlayerList = 1;
  total_size += 1 * this->playerlist_size();
  for (int i = 0; i < this->playerlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->playerlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Msg_BroadRoomNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Msg_BroadRoomNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Msg_BroadRoomNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Msg_BroadRoomNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Msg_BroadRoomNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Msg_BroadRoomNotify)
    MergeFrom(*source);
  }
}

void Msg_BroadRoomNotify::MergeFrom(const Msg_BroadRoomNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Msg_BroadRoomNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  playerlist_.MergeFrom(from.playerlist_);
}

void Msg_BroadRoomNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Msg_BroadRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Msg_BroadRoomNotify::CopyFrom(const Msg_BroadRoomNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg_BroadRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_BroadRoomNotify::IsInitialized() const {

  return true;
}

void Msg_BroadRoomNotify::Swap(Msg_BroadRoomNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Msg_BroadRoomNotify::InternalSwap(Msg_BroadRoomNotify* other) {
  playerlist_.UnsafeArenaSwap(&other->playerlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Msg_BroadRoomNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Msg_BroadRoomNotify_descriptor_;
  metadata.reflection = Msg_BroadRoomNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Msg_BroadRoomNotify

// repeated .Msg_RoomPlayerInfo PlayerList = 1;
int Msg_BroadRoomNotify::playerlist_size() const {
  return playerlist_.size();
}
void Msg_BroadRoomNotify::clear_playerlist() {
  playerlist_.Clear();
}
const ::Msg_RoomPlayerInfo& Msg_BroadRoomNotify::playerlist(int index) const {
  // @@protoc_insertion_point(field_get:Msg_BroadRoomNotify.PlayerList)
  return playerlist_.Get(index);
}
::Msg_RoomPlayerInfo* Msg_BroadRoomNotify::mutable_playerlist(int index) {
  // @@protoc_insertion_point(field_mutable:Msg_BroadRoomNotify.PlayerList)
  return playerlist_.Mutable(index);
}
::Msg_RoomPlayerInfo* Msg_BroadRoomNotify::add_playerlist() {
  // @@protoc_insertion_point(field_add:Msg_BroadRoomNotify.PlayerList)
  return playerlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::Msg_RoomPlayerInfo >*
Msg_BroadRoomNotify::mutable_playerlist() {
  // @@protoc_insertion_point(field_mutable_list:Msg_BroadRoomNotify.PlayerList)
  return &playerlist_;
}
const ::google::protobuf::RepeatedPtrField< ::Msg_RoomPlayerInfo >&
Msg_BroadRoomNotify::playerlist() const {
  // @@protoc_insertion_point(field_list:Msg_BroadRoomNotify.PlayerList)
  return playerlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
