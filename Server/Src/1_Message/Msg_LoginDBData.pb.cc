// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_LoginDBData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Msg_LoginDBData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* DBRoleData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBRoleData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBBagItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBBagItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBBagData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBBagData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBCopyItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBCopyItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBChapterItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBChapterItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBCopyData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBCopyData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBEquipItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBEquipItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBEquipData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBEquipData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBGemItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBGemItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBGemData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBGemData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBSkillItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBSkillItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBSkillData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBSkillData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBPetItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBPetItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBPetData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBPetData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBMountItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBMountItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBMountData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBMountData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBPartnerItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBPartnerItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBPartnerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBPartnerData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBTaskItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBTaskItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBTaskData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBTaskData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBMailItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBMailItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBMailData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBMailData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBActivityItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBActivityItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBActivityData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBActivityData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBCounterItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBCounterItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBCounterData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBCounterData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBFriendItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBFriendItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBFriendData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBFriendData_reflection_ = NULL;
const ::google::protobuf::Descriptor* DBRoleLoginAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DBRoleLoginAck_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Msg_5fLoginDBData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Msg_5fLoginDBData_2eproto() {
  protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Msg_LoginDBData.proto");
  GOOGLE_CHECK(file != NULL);
  DBRoleData_descriptor_ = file->message_type(0);
  static const int DBRoleData_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, carrerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, langid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, viplvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, vipexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, fightvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, citycopyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, actime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, createtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, logontime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, logofftime_),
  };
  DBRoleData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBRoleData_descriptor_,
      DBRoleData::default_instance_,
      DBRoleData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBRoleData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleData, _is_default_instance_));
  DBBagItem_descriptor_ = file->message_type(1);
  static const int DBBagItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagItem, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagItem, itemguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagItem, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagItem, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagItem, bind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagItem, status_),
  };
  DBBagItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBBagItem_descriptor_,
      DBBagItem::default_instance_,
      DBBagItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBBagItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagItem, _is_default_instance_));
  DBBagData_descriptor_ = file->message_type(2);
  static const int DBBagData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagData, itemlist_),
  };
  DBBagData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBBagData_descriptor_,
      DBBagData::default_instance_,
      DBBagData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBBagData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBBagData, _is_default_instance_));
  DBCopyItem_descriptor_ = file->message_type(3);
  static const int DBCopyItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyItem, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyItem, starnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyItem, battlecnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyItem, resetcnt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyItem, battletime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyItem, resettime_),
  };
  DBCopyItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBCopyItem_descriptor_,
      DBCopyItem::default_instance_,
      DBCopyItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBCopyItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyItem, _is_default_instance_));
  DBChapterItem_descriptor_ = file->message_type(4);
  static const int DBChapterItem_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBChapterItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBChapterItem, copytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBChapterItem, chapterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBChapterItem, staraward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBChapterItem, sceneaward_),
  };
  DBChapterItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBChapterItem_descriptor_,
      DBChapterItem::default_instance_,
      DBChapterItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBChapterItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBChapterItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBChapterItem, _is_default_instance_));
  DBCopyData_descriptor_ = file->message_type(5);
  static const int DBCopyData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyData, copylist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyData, chapterlist_),
  };
  DBCopyData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBCopyData_descriptor_,
      DBCopyData::default_instance_,
      DBCopyData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBCopyData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCopyData, _is_default_instance_));
  DBEquipItem_descriptor_ = file->message_type(6);
  static const int DBEquipItem_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, equipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, strengthlvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, refinelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, starlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, refineexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, starexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, isusing_),
  };
  DBEquipItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBEquipItem_descriptor_,
      DBEquipItem::default_instance_,
      DBEquipItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBEquipItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipItem, _is_default_instance_));
  DBEquipData_descriptor_ = file->message_type(7);
  static const int DBEquipData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipData, equiplist_),
  };
  DBEquipData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBEquipData_descriptor_,
      DBEquipData::default_instance_,
      DBEquipData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBEquipData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBEquipData, _is_default_instance_));
  DBGemItem_descriptor_ = file->message_type(8);
  static const int DBGemItem_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, gemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, strengthlvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, refinelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, starlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, refineexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, starexp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, pos_),
  };
  DBGemItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBGemItem_descriptor_,
      DBGemItem::default_instance_,
      DBGemItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBGemItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemItem, _is_default_instance_));
  DBGemData_descriptor_ = file->message_type(9);
  static const int DBGemData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemData, gemlist_),
  };
  DBGemData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBGemData_descriptor_,
      DBGemData::default_instance_,
      DBGemData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBGemData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBGemData, _is_default_instance_));
  DBSkillItem_descriptor_ = file->message_type(10);
  static const int DBSkillItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillItem, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillItem, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillItem, keypos_),
  };
  DBSkillItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBSkillItem_descriptor_,
      DBSkillItem::default_instance_,
      DBSkillItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBSkillItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillItem, _is_default_instance_));
  DBSkillData_descriptor_ = file->message_type(11);
  static const int DBSkillData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillData, skilllist_),
  };
  DBSkillData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBSkillData_descriptor_,
      DBSkillData::default_instance_,
      DBSkillData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBSkillData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBSkillData, _is_default_instance_));
  DBPetItem_descriptor_ = file->message_type(12);
  static const int DBPetItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetItem, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetItem, petid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetItem, strengthlvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetItem, refinelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetItem, starlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetItem, isusing_),
  };
  DBPetItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBPetItem_descriptor_,
      DBPetItem::default_instance_,
      DBPetItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBPetItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetItem, _is_default_instance_));
  DBPetData_descriptor_ = file->message_type(13);
  static const int DBPetData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetData, petlist_),
  };
  DBPetData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBPetData_descriptor_,
      DBPetData::default_instance_,
      DBPetData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBPetData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPetData, _is_default_instance_));
  DBMountItem_descriptor_ = file->message_type(14);
  static const int DBMountItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountItem, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountItem, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountItem, strengthlvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountItem, refinelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountItem, starlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountItem, isusing_),
  };
  DBMountItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBMountItem_descriptor_,
      DBMountItem::default_instance_,
      DBMountItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBMountItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountItem, _is_default_instance_));
  DBMountData_descriptor_ = file->message_type(15);
  static const int DBMountData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountData, mountlist_),
  };
  DBMountData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBMountData_descriptor_,
      DBMountData::default_instance_,
      DBMountData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBMountData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMountData, _is_default_instance_));
  DBPartnerItem_descriptor_ = file->message_type(16);
  static const int DBPartnerItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerItem, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerItem, partnerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerItem, strengthlvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerItem, refinelevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerItem, starlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerItem, setpos_),
  };
  DBPartnerItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBPartnerItem_descriptor_,
      DBPartnerItem::default_instance_,
      DBPartnerItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBPartnerItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerItem, _is_default_instance_));
  DBPartnerData_descriptor_ = file->message_type(17);
  static const int DBPartnerData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerData, partnerlist_),
  };
  DBPartnerData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBPartnerData_descriptor_,
      DBPartnerData::default_instance_,
      DBPartnerData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBPartnerData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBPartnerData, _is_default_instance_));
  DBTaskItem_descriptor_ = file->message_type(18);
  static const int DBTaskItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskItem, taskid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskItem, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskItem, progress_),
  };
  DBTaskItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBTaskItem_descriptor_,
      DBTaskItem::default_instance_,
      DBTaskItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBTaskItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskItem, _is_default_instance_));
  DBTaskData_descriptor_ = file->message_type(19);
  static const int DBTaskData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskData, tasklist_),
  };
  DBTaskData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBTaskData_descriptor_,
      DBTaskData::default_instance_,
      DBTaskData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBTaskData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBTaskData, _is_default_instance_));
  DBMailItem_descriptor_ = file->message_type(20);
  static const int DBMailItem_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, groupid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, senderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, items_),
  };
  DBMailItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBMailItem_descriptor_,
      DBMailItem::default_instance_,
      DBMailItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBMailItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailItem, _is_default_instance_));
  DBMailData_descriptor_ = file->message_type(21);
  static const int DBMailData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailData, maillist_),
  };
  DBMailData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBMailData_descriptor_,
      DBMailData::default_instance_,
      DBMailData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBMailData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBMailData, _is_default_instance_));
  DBActivityItem_descriptor_ = file->message_type(22);
  static const int DBActivityItem_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityItem, activityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityItem, activitytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityItem, jointime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityItem, datalen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityItem, data_),
  };
  DBActivityItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBActivityItem_descriptor_,
      DBActivityItem::default_instance_,
      DBActivityItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBActivityItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityItem, _is_default_instance_));
  DBActivityData_descriptor_ = file->message_type(23);
  static const int DBActivityData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityData, activitylist_),
  };
  DBActivityData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBActivityData_descriptor_,
      DBActivityData::default_instance_,
      DBActivityData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBActivityData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBActivityData, _is_default_instance_));
  DBCounterItem_descriptor_ = file->message_type(24);
  static const int DBCounterItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterItem, counterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterItem, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterItem, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterItem, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterItem, param1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterItem, param2_),
  };
  DBCounterItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBCounterItem_descriptor_,
      DBCounterItem::default_instance_,
      DBCounterItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBCounterItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterItem, _is_default_instance_));
  DBCounterData_descriptor_ = file->message_type(25);
  static const int DBCounterData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterData, counterlist_),
  };
  DBCounterData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBCounterData_descriptor_,
      DBCounterData::default_instance_,
      DBCounterData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBCounterData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBCounterData, _is_default_instance_));
  DBFriendItem_descriptor_ = file->message_type(26);
  static const int DBFriendItem_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBFriendItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBFriendItem, friendid_),
  };
  DBFriendItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBFriendItem_descriptor_,
      DBFriendItem::default_instance_,
      DBFriendItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBFriendItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBFriendItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBFriendItem, _is_default_instance_));
  DBFriendData_descriptor_ = file->message_type(27);
  static const int DBFriendData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBFriendData, friendlist_),
  };
  DBFriendData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBFriendData_descriptor_,
      DBFriendData::default_instance_,
      DBFriendData_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBFriendData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBFriendData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBFriendData, _is_default_instance_));
  DBRoleLoginAck_descriptor_ = file->message_type(28);
  static const int DBRoleLoginAck_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, roledata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, bagdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, copydata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, equipdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, gemdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, petdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, partnerdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, taskdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, maildata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, mountdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, activitydata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, counterdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, frienddata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, skilldata_),
  };
  DBRoleLoginAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DBRoleLoginAck_descriptor_,
      DBRoleLoginAck::default_instance_,
      DBRoleLoginAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(DBRoleLoginAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBRoleLoginAck, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Msg_5fLoginDBData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBRoleData_descriptor_, &DBRoleData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBBagItem_descriptor_, &DBBagItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBBagData_descriptor_, &DBBagData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBCopyItem_descriptor_, &DBCopyItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBChapterItem_descriptor_, &DBChapterItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBCopyData_descriptor_, &DBCopyData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBEquipItem_descriptor_, &DBEquipItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBEquipData_descriptor_, &DBEquipData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBGemItem_descriptor_, &DBGemItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBGemData_descriptor_, &DBGemData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBSkillItem_descriptor_, &DBSkillItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBSkillData_descriptor_, &DBSkillData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBPetItem_descriptor_, &DBPetItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBPetData_descriptor_, &DBPetData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBMountItem_descriptor_, &DBMountItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBMountData_descriptor_, &DBMountData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBPartnerItem_descriptor_, &DBPartnerItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBPartnerData_descriptor_, &DBPartnerData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBTaskItem_descriptor_, &DBTaskItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBTaskData_descriptor_, &DBTaskData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBMailItem_descriptor_, &DBMailItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBMailData_descriptor_, &DBMailData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBActivityItem_descriptor_, &DBActivityItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBActivityData_descriptor_, &DBActivityData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBCounterItem_descriptor_, &DBCounterItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBCounterData_descriptor_, &DBCounterData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBFriendItem_descriptor_, &DBFriendItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBFriendData_descriptor_, &DBFriendData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DBRoleLoginAck_descriptor_, &DBRoleLoginAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Msg_5fLoginDBData_2eproto() {
  delete DBRoleData::default_instance_;
  delete DBRoleData_reflection_;
  delete DBBagItem::default_instance_;
  delete DBBagItem_reflection_;
  delete DBBagData::default_instance_;
  delete DBBagData_reflection_;
  delete DBCopyItem::default_instance_;
  delete DBCopyItem_reflection_;
  delete DBChapterItem::default_instance_;
  delete DBChapterItem_reflection_;
  delete DBCopyData::default_instance_;
  delete DBCopyData_reflection_;
  delete DBEquipItem::default_instance_;
  delete DBEquipItem_reflection_;
  delete DBEquipData::default_instance_;
  delete DBEquipData_reflection_;
  delete DBGemItem::default_instance_;
  delete DBGemItem_reflection_;
  delete DBGemData::default_instance_;
  delete DBGemData_reflection_;
  delete DBSkillItem::default_instance_;
  delete DBSkillItem_reflection_;
  delete DBSkillData::default_instance_;
  delete DBSkillData_reflection_;
  delete DBPetItem::default_instance_;
  delete DBPetItem_reflection_;
  delete DBPetData::default_instance_;
  delete DBPetData_reflection_;
  delete DBMountItem::default_instance_;
  delete DBMountItem_reflection_;
  delete DBMountData::default_instance_;
  delete DBMountData_reflection_;
  delete DBPartnerItem::default_instance_;
  delete DBPartnerItem_reflection_;
  delete DBPartnerData::default_instance_;
  delete DBPartnerData_reflection_;
  delete DBTaskItem::default_instance_;
  delete DBTaskItem_reflection_;
  delete DBTaskData::default_instance_;
  delete DBTaskData_reflection_;
  delete DBMailItem::default_instance_;
  delete DBMailItem_reflection_;
  delete DBMailData::default_instance_;
  delete DBMailData_reflection_;
  delete DBActivityItem::default_instance_;
  delete DBActivityItem_reflection_;
  delete DBActivityData::default_instance_;
  delete DBActivityData_reflection_;
  delete DBCounterItem::default_instance_;
  delete DBCounterItem_reflection_;
  delete DBCounterData::default_instance_;
  delete DBCounterData_reflection_;
  delete DBFriendItem::default_instance_;
  delete DBFriendItem_reflection_;
  delete DBFriendData::default_instance_;
  delete DBFriendData_reflection_;
  delete DBRoleLoginAck::default_instance_;
  delete DBRoleLoginAck_reflection_;
}

void protobuf_AddDesc_Msg_5fLoginDBData_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Msg_5fLoginDBData_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025Msg_LoginDBData.proto\"\236\002\n\nDBRoleData\022\021"
    "\n\tAccountID\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004\022\020\n\010Car"
    "rerID\030\003 \001(\005\022\r\n\005Level\030\004 \001(\005\022\013\n\003Exp\030\005 \001(\003\022"
    "\014\n\004Name\030\006 \001(\t\022\016\n\006LangID\030\007 \001(\005\022\016\n\006VipLvl\030"
    "\010 \001(\005\022\016\n\006VipExp\030\t \001(\005\022\022\n\nFightValue\030\n \001("
    "\003\022\022\n\nCityCopyID\030\013 \001(\005\022\016\n\006Action\030\014 \003(\003\022\016\n"
    "\006Actime\030\r \003(\003\022\022\n\nCreateTime\030\016 \001(\004\022\021\n\tLog"
    "onTime\030\017 \001(\004\022\022\n\nLogoffTime\030\020 \001(\004\"x\n\tDBBa"
    "gItem\022\014\n\004Guid\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004\022\020\n\010I"
    "temGuid\030\003 \001(\004\022\016\n\006ItemID\030\004 \001(\r\022\r\n\005Count\030\005"
    " \001(\003\022\014\n\004Bind\030\006 \001(\005\022\016\n\006Status\030\007 \001(\005\")\n\tDB"
    "BagData\022\034\n\010ItemList\030\001 \003(\0132\n.DBBagItem\"\211\001"
    "\n\nDBCopyItem\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006CopyID\030\002"
    " \001(\r\022\017\n\007StarNum\030\003 \001(\005\022\021\n\tBattleCnt\030\004 \001(\005"
    "\022\020\n\010ResetCnt\030\005 \001(\005\022\022\n\nBattleTime\030\006 \001(\004\022\021"
    "\n\tResetTime\030\007 \001(\004\"k\n\rDBChapterItem\022\016\n\006Ro"
    "leID\030\001 \001(\004\022\020\n\010CopyType\030\002 \001(\r\022\021\n\tChapterI"
    "D\030\003 \001(\r\022\021\n\tStarAward\030\004 \001(\r\022\022\n\nSceneAward"
    "\030\005 \001(\r\"P\n\nDBCopyData\022\035\n\010CopyList\030\001 \003(\0132\013"
    ".DBCopyItem\022#\n\013ChapterList\030\002 \003(\0132\016.DBCha"
    "pterItem\"\256\001\n\013DBEquipItem\022\016\n\006RoleID\030\001 \001(\004"
    "\022\014\n\004Guid\030\002 \001(\004\022\017\n\007EquipID\030\003 \001(\005\022\023\n\013Stren"
    "gthLvl\030\004 \001(\005\022\023\n\013RefineLevel\030\005 \001(\005\022\021\n\tSta"
    "rLevel\030\006 \001(\005\022\021\n\tRefineExp\030\007 \001(\005\022\017\n\007StarE"
    "xp\030\010 \001(\005\022\017\n\007IsUsing\030\t \001(\010\".\n\013DBEquipData"
    "\022\037\n\tEquipList\030\001 \003(\0132\014.DBEquipItem\"\246\001\n\tDB"
    "GemItem\022\016\n\006RoleID\030\001 \001(\004\022\014\n\004Guid\030\002 \001(\004\022\r\n"
    "\005GemID\030\003 \001(\005\022\023\n\013StrengthLvl\030\004 \001(\005\022\023\n\013Ref"
    "ineLevel\030\005 \001(\005\022\021\n\tStarLevel\030\006 \001(\005\022\021\n\tRef"
    "ineExp\030\007 \001(\005\022\017\n\007StarExp\030\010 \001(\005\022\013\n\003Pos\030\t \001"
    "(\005\"(\n\tDBGemData\022\033\n\007GemList\030\001 \003(\0132\n.DBGem"
    "Item\"M\n\013DBSkillItem\022\016\n\006RoleID\030\001 \001(\004\022\017\n\007S"
    "killID\030\002 \001(\r\022\r\n\005Level\030\003 \001(\005\022\016\n\006KeyPos\030\004 "
    "\001(\005\".\n\013DBSkillData\022\037\n\tSkillList\030\001 \003(\0132\014."
    "DBSkillItem\"\206\001\n\tDBPetItem\022\016\n\006RoleID\030\001 \001("
    "\004\022\014\n\004Guid\030\002 \001(\004\022\r\n\005PetID\030\003 \001(\005\022\023\n\013Streng"
    "thLvl\030\004 \001(\005\022\023\n\013RefineLevel\030\005 \001(\005\022\021\n\tStar"
    "Level\030\006 \001(\005\022\017\n\007IsUsing\030\007 \001(\010\"(\n\tDBPetDat"
    "a\022\033\n\007PetList\030\001 \003(\0132\n.DBPetItem\"\212\001\n\013DBMou"
    "ntItem\022\016\n\006RoleID\030\001 \001(\004\022\014\n\004Guid\030\002 \001(\004\022\017\n\007"
    "MountID\030\003 \001(\005\022\023\n\013StrengthLvl\030\004 \001(\005\022\023\n\013Re"
    "fineLevel\030\005 \001(\005\022\021\n\tStarLevel\030\006 \001(\005\022\017\n\007Is"
    "Using\030\007 \001(\010\".\n\013DBMountData\022\037\n\tMountList\030"
    "\001 \003(\0132\014.DBMountItem\"\215\001\n\rDBPartnerItem\022\016\n"
    "\006RoleID\030\001 \001(\004\022\014\n\004Guid\030\002 \001(\004\022\021\n\tPartnerID"
    "\030\003 \001(\005\022\023\n\013StrengthLvl\030\004 \001(\005\022\023\n\013RefineLev"
    "el\030\005 \001(\005\022\021\n\tStarLevel\030\006 \001(\005\022\016\n\006SetPos\030\007 "
    "\001(\005\"4\n\rDBPartnerData\022#\n\013PartnerList\030\001 \003("
    "\0132\016.DBPartnerItem\"N\n\nDBTaskItem\022\016\n\006RoleI"
    "D\030\001 \001(\004\022\016\n\006TaskID\030\002 \001(\r\022\016\n\006Status\030\003 \001(\005\022"
    "\020\n\010Progress\030\004 \001(\005\"+\n\nDBTaskData\022\035\n\010TaskL"
    "ist\030\001 \003(\0132\013.DBTaskItem\"\232\001\n\nDBMailItem\022\016\n"
    "\006RoleID\030\001 \001(\004\022\014\n\004Guid\030\002 \001(\004\022\017\n\007GroupID\030\003"
    " \001(\005\022\014\n\004Time\030\004 \001(\004\022\020\n\010SenderID\030\005 \001(\004\022\016\n\006"
    "Sender\030\006 \001(\t\022\r\n\005Title\030\007 \001(\t\022\017\n\007Content\030\010"
    " \001(\t\022\r\n\005Items\030\t \001(\014\"+\n\nDBMailData\022\035\n\010Mai"
    "lList\030\001 \003(\0132\013.DBMailItem\"{\n\016DBActivityIt"
    "em\022\016\n\006RoleID\030\001 \001(\004\022\022\n\nActivityID\030\002 \001(\r\022\024"
    "\n\014ActivityType\030\003 \001(\r\022\020\n\010JoinTime\030\004 \001(\r\022\017"
    "\n\007DataLen\030\005 \001(\r\022\014\n\004Data\030\006 \001(\014\"7\n\016DBActiv"
    "ityData\022%\n\014ActivityList\030\001 \003(\0132\017.DBActivi"
    "tyItem\"~\n\rDBCounterItem\022\016\n\006RoleID\030\001 \001(\004\022"
    "\021\n\tCounterID\030\002 \001(\004\022\r\n\005Index\030\003 \001(\r\022\r\n\005Val"
    "ue\030\004 \001(\r\022\014\n\004Time\030\005 \001(\r\022\016\n\006Param1\030\006 \001(\r\022\016"
    "\n\006Param2\030\007 \001(\r\"4\n\rDBCounterData\022#\n\013Count"
    "erList\030\001 \003(\0132\016.DBCounterItem\"0\n\014DBFriend"
    "Item\022\016\n\006RoleID\030\001 \001(\004\022\020\n\010FriendID\030\002 \001(\004\"1"
    "\n\014DBFriendData\022!\n\nFriendList\030\001 \003(\0132\r.DBF"
    "riendItem\"\373\003\n\016DBRoleLoginAck\022\017\n\007RetCode\030"
    "\001 \001(\r\022\016\n\006RoleID\030\002 \001(\004\022\035\n\010RoleData\030\003 \001(\0132"
    "\013.DBRoleData\022\033\n\007BagData\030\004 \001(\0132\n.DBBagDat"
    "a\022\035\n\010CopyData\030\005 \001(\0132\013.DBCopyData\022\037\n\tEqui"
    "pData\030\006 \001(\0132\014.DBEquipData\022\033\n\007GemData\030\007 \001"
    "(\0132\n.DBGemData\022\033\n\007PetData\030\010 \001(\0132\n.DBPetD"
    "ata\022#\n\013PartnerData\030\t \001(\0132\016.DBPartnerData"
    "\022\035\n\010TaskData\030\n \001(\0132\013.DBTaskData\022\035\n\010MailD"
    "ata\030\013 \001(\0132\013.DBMailData\022\037\n\tMountData\030\014 \001("
    "\0132\014.DBMountData\022%\n\014ActivityData\030\r \001(\0132\017."
    "DBActivityData\022#\n\013CounterData\030\016 \001(\0132\016.DB"
    "CounterData\022!\n\nFriendData\030\017 \001(\0132\r.DBFrie"
    "ndData\022\037\n\tSkillData\030\020 \001(\0132\014.DBSkillDatab"
    "\006proto3", 3247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_LoginDBData.proto", &protobuf_RegisterTypes);
  DBRoleData::default_instance_ = new DBRoleData();
  DBBagItem::default_instance_ = new DBBagItem();
  DBBagData::default_instance_ = new DBBagData();
  DBCopyItem::default_instance_ = new DBCopyItem();
  DBChapterItem::default_instance_ = new DBChapterItem();
  DBCopyData::default_instance_ = new DBCopyData();
  DBEquipItem::default_instance_ = new DBEquipItem();
  DBEquipData::default_instance_ = new DBEquipData();
  DBGemItem::default_instance_ = new DBGemItem();
  DBGemData::default_instance_ = new DBGemData();
  DBSkillItem::default_instance_ = new DBSkillItem();
  DBSkillData::default_instance_ = new DBSkillData();
  DBPetItem::default_instance_ = new DBPetItem();
  DBPetData::default_instance_ = new DBPetData();
  DBMountItem::default_instance_ = new DBMountItem();
  DBMountData::default_instance_ = new DBMountData();
  DBPartnerItem::default_instance_ = new DBPartnerItem();
  DBPartnerData::default_instance_ = new DBPartnerData();
  DBTaskItem::default_instance_ = new DBTaskItem();
  DBTaskData::default_instance_ = new DBTaskData();
  DBMailItem::default_instance_ = new DBMailItem();
  DBMailData::default_instance_ = new DBMailData();
  DBActivityItem::default_instance_ = new DBActivityItem();
  DBActivityData::default_instance_ = new DBActivityData();
  DBCounterItem::default_instance_ = new DBCounterItem();
  DBCounterData::default_instance_ = new DBCounterData();
  DBFriendItem::default_instance_ = new DBFriendItem();
  DBFriendData::default_instance_ = new DBFriendData();
  DBRoleLoginAck::default_instance_ = new DBRoleLoginAck();
  DBRoleData::default_instance_->InitAsDefaultInstance();
  DBBagItem::default_instance_->InitAsDefaultInstance();
  DBBagData::default_instance_->InitAsDefaultInstance();
  DBCopyItem::default_instance_->InitAsDefaultInstance();
  DBChapterItem::default_instance_->InitAsDefaultInstance();
  DBCopyData::default_instance_->InitAsDefaultInstance();
  DBEquipItem::default_instance_->InitAsDefaultInstance();
  DBEquipData::default_instance_->InitAsDefaultInstance();
  DBGemItem::default_instance_->InitAsDefaultInstance();
  DBGemData::default_instance_->InitAsDefaultInstance();
  DBSkillItem::default_instance_->InitAsDefaultInstance();
  DBSkillData::default_instance_->InitAsDefaultInstance();
  DBPetItem::default_instance_->InitAsDefaultInstance();
  DBPetData::default_instance_->InitAsDefaultInstance();
  DBMountItem::default_instance_->InitAsDefaultInstance();
  DBMountData::default_instance_->InitAsDefaultInstance();
  DBPartnerItem::default_instance_->InitAsDefaultInstance();
  DBPartnerData::default_instance_->InitAsDefaultInstance();
  DBTaskItem::default_instance_->InitAsDefaultInstance();
  DBTaskData::default_instance_->InitAsDefaultInstance();
  DBMailItem::default_instance_->InitAsDefaultInstance();
  DBMailData::default_instance_->InitAsDefaultInstance();
  DBActivityItem::default_instance_->InitAsDefaultInstance();
  DBActivityData::default_instance_->InitAsDefaultInstance();
  DBCounterItem::default_instance_->InitAsDefaultInstance();
  DBCounterData::default_instance_->InitAsDefaultInstance();
  DBFriendItem::default_instance_->InitAsDefaultInstance();
  DBFriendData::default_instance_->InitAsDefaultInstance();
  DBRoleLoginAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Msg_5fLoginDBData_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Msg_5fLoginDBData_2eproto {
  StaticDescriptorInitializer_Msg_5fLoginDBData_2eproto() {
    protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  }
} static_descriptor_initializer_Msg_5fLoginDBData_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBRoleData::kAccountIDFieldNumber;
const int DBRoleData::kRoleIDFieldNumber;
const int DBRoleData::kCarrerIDFieldNumber;
const int DBRoleData::kLevelFieldNumber;
const int DBRoleData::kExpFieldNumber;
const int DBRoleData::kNameFieldNumber;
const int DBRoleData::kLangIDFieldNumber;
const int DBRoleData::kVipLvlFieldNumber;
const int DBRoleData::kVipExpFieldNumber;
const int DBRoleData::kFightValueFieldNumber;
const int DBRoleData::kCityCopyIDFieldNumber;
const int DBRoleData::kActionFieldNumber;
const int DBRoleData::kActimeFieldNumber;
const int DBRoleData::kCreateTimeFieldNumber;
const int DBRoleData::kLogonTimeFieldNumber;
const int DBRoleData::kLogoffTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBRoleData::DBRoleData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBRoleData)
}

void DBRoleData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBRoleData::DBRoleData(const DBRoleData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBRoleData)
}

void DBRoleData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
  roleid_ = GOOGLE_ULONGLONG(0);
  carrerid_ = 0;
  level_ = 0;
  exp_ = GOOGLE_LONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  langid_ = 0;
  viplvl_ = 0;
  vipexp_ = 0;
  fightvalue_ = GOOGLE_LONGLONG(0);
  citycopyid_ = 0;
  createtime_ = GOOGLE_ULONGLONG(0);
  logontime_ = GOOGLE_ULONGLONG(0);
  logofftime_ = GOOGLE_ULONGLONG(0);
}

DBRoleData::~DBRoleData() {
  // @@protoc_insertion_point(destructor:DBRoleData)
  SharedDtor();
}

void DBRoleData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DBRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBRoleData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBRoleData_descriptor_;
}

const DBRoleData& DBRoleData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBRoleData* DBRoleData::default_instance_ = NULL;

DBRoleData* DBRoleData::New(::google::protobuf::Arena* arena) const {
  DBRoleData* n = new DBRoleData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBRoleData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBRoleData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBRoleData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBRoleData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, exp_);
  ZR_(langid_, viplvl_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(fightvalue_, citycopyid_);
  ZR_(createtime_, logofftime_);

#undef ZR_HELPER_
#undef ZR_

  action_.Clear();
  actime_.Clear();
}

bool DBRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBRoleData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }

      // optional uint64 RoleID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CarrerID;
        break;
      }

      // optional int32 CarrerID = 3;
      case 3: {
        if (tag == 24) {
         parse_CarrerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Level;
        break;
      }

      // optional int32 Level = 4;
      case 4: {
        if (tag == 32) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Exp;
        break;
      }

      // optional int64 Exp = 5;
      case 5: {
        if (tag == 40) {
         parse_Exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Name;
        break;
      }

      // optional string Name = 6;
      case 6: {
        if (tag == 50) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBRoleData.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_LangID;
        break;
      }

      // optional int32 LangID = 7;
      case 7: {
        if (tag == 56) {
         parse_LangID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &langid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_VipLvl;
        break;
      }

      // optional int32 VipLvl = 8;
      case 8: {
        if (tag == 64) {
         parse_VipLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplvl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_VipExp;
        break;
      }

      // optional int32 VipExp = 9;
      case 9: {
        if (tag == 72) {
         parse_VipExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vipexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_FightValue;
        break;
      }

      // optional int64 FightValue = 10;
      case 10: {
        if (tag == 80) {
         parse_FightValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fightvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_CityCopyID;
        break;
      }

      // optional int32 CityCopyID = 11;
      case 11: {
        if (tag == 88) {
         parse_CityCopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &citycopyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_Action;
        break;
      }

      // repeated int64 Action = 12;
      case 12: {
        if (tag == 98) {
         parse_Action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_action())));
        } else if (tag == 96) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 98, input, this->mutable_action())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_Actime;
        break;
      }

      // repeated int64 Actime = 13;
      case 13: {
        if (tag == 106) {
         parse_Actime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_actime())));
        } else if (tag == 104) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 106, input, this->mutable_actime())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_CreateTime;
        break;
      }

      // optional uint64 CreateTime = 14;
      case 14: {
        if (tag == 112) {
         parse_CreateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_LogonTime;
        break;
      }

      // optional uint64 LogonTime = 15;
      case 15: {
        if (tag == 120) {
         parse_LogonTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logontime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_LogoffTime;
        break;
      }

      // optional uint64 LogoffTime = 16;
      case 16: {
        if (tag == 128) {
         parse_LogoffTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logofftime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBRoleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBRoleData)
  return false;
#undef DO_
}

void DBRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBRoleData)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // optional int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->carrerid(), output);
  }

  // optional int32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // optional int64 Exp = 5;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->exp(), output);
  }

  // optional string Name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBRoleData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // optional int32 LangID = 7;
  if (this->langid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->langid(), output);
  }

  // optional int32 VipLvl = 8;
  if (this->viplvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->viplvl(), output);
  }

  // optional int32 VipExp = 9;
  if (this->vipexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->vipexp(), output);
  }

  // optional int64 FightValue = 10;
  if (this->fightvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->fightvalue(), output);
  }

  // optional int32 CityCopyID = 11;
  if (this->citycopyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->citycopyid(), output);
  }

  // repeated int64 Action = 12;
  if (this->action_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_action_cached_byte_size_);
  }
  for (int i = 0; i < this->action_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->action(i), output);
  }

  // repeated int64 Actime = 13;
  if (this->actime_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_actime_cached_byte_size_);
  }
  for (int i = 0; i < this->actime_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->actime(i), output);
  }

  // optional uint64 CreateTime = 14;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->createtime(), output);
  }

  // optional uint64 LogonTime = 15;
  if (this->logontime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->logontime(), output);
  }

  // optional uint64 LogoffTime = 16;
  if (this->logofftime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->logofftime(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBRoleData)
}

::google::protobuf::uint8* DBRoleData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBRoleData)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // optional int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->carrerid(), target);
  }

  // optional int32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // optional int64 Exp = 5;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->exp(), target);
  }

  // optional string Name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBRoleData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // optional int32 LangID = 7;
  if (this->langid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->langid(), target);
  }

  // optional int32 VipLvl = 8;
  if (this->viplvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->viplvl(), target);
  }

  // optional int32 VipExp = 9;
  if (this->vipexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->vipexp(), target);
  }

  // optional int64 FightValue = 10;
  if (this->fightvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->fightvalue(), target);
  }

  // optional int32 CityCopyID = 11;
  if (this->citycopyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->citycopyid(), target);
  }

  // repeated int64 Action = 12;
  if (this->action_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _action_cached_byte_size_, target);
  }
  for (int i = 0; i < this->action_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->action(i), target);
  }

  // repeated int64 Actime = 13;
  if (this->actime_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _actime_cached_byte_size_, target);
  }
  for (int i = 0; i < this->actime_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->actime(i), target);
  }

  // optional uint64 CreateTime = 14;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->createtime(), target);
  }

  // optional uint64 LogonTime = 15;
  if (this->logontime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->logontime(), target);
  }

  // optional uint64 LogoffTime = 16;
  if (this->logofftime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->logofftime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBRoleData)
  return target;
}

int DBRoleData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBRoleData)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrerid());
  }

  // optional int32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional int64 Exp = 5;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exp());
  }

  // optional string Name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 LangID = 7;
  if (this->langid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->langid());
  }

  // optional int32 VipLvl = 8;
  if (this->viplvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->viplvl());
  }

  // optional int32 VipExp = 9;
  if (this->vipexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vipexp());
  }

  // optional int64 FightValue = 10;
  if (this->fightvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fightvalue());
  }

  // optional int32 CityCopyID = 11;
  if (this->citycopyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->citycopyid());
  }

  // optional uint64 CreateTime = 14;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createtime());
  }

  // optional uint64 LogonTime = 15;
  if (this->logontime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->logontime());
  }

  // optional uint64 LogoffTime = 16;
  if (this->logofftime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->logofftime());
  }

  // repeated int64 Action = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->action_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->action(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _action_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 Actime = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->actime_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->actime(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _actime_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBRoleData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBRoleData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBRoleData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBRoleData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBRoleData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBRoleData)
    MergeFrom(*source);
  }
}

void DBRoleData::MergeFrom(const DBRoleData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBRoleData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  action_.MergeFrom(from.action_);
  actime_.MergeFrom(from.actime_);
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.carrerid() != 0) {
    set_carrerid(from.carrerid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.langid() != 0) {
    set_langid(from.langid());
  }
  if (from.viplvl() != 0) {
    set_viplvl(from.viplvl());
  }
  if (from.vipexp() != 0) {
    set_vipexp(from.vipexp());
  }
  if (from.fightvalue() != 0) {
    set_fightvalue(from.fightvalue());
  }
  if (from.citycopyid() != 0) {
    set_citycopyid(from.citycopyid());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.logontime() != 0) {
    set_logontime(from.logontime());
  }
  if (from.logofftime() != 0) {
    set_logofftime(from.logofftime());
  }
}

void DBRoleData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBRoleData::CopyFrom(const DBRoleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleData::IsInitialized() const {

  return true;
}

void DBRoleData::Swap(DBRoleData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBRoleData::InternalSwap(DBRoleData* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(carrerid_, other->carrerid_);
  std::swap(level_, other->level_);
  std::swap(exp_, other->exp_);
  name_.Swap(&other->name_);
  std::swap(langid_, other->langid_);
  std::swap(viplvl_, other->viplvl_);
  std::swap(vipexp_, other->vipexp_);
  std::swap(fightvalue_, other->fightvalue_);
  std::swap(citycopyid_, other->citycopyid_);
  action_.UnsafeArenaSwap(&other->action_);
  actime_.UnsafeArenaSwap(&other->actime_);
  std::swap(createtime_, other->createtime_);
  std::swap(logontime_, other->logontime_);
  std::swap(logofftime_, other->logofftime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBRoleData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBRoleData_descriptor_;
  metadata.reflection = DBRoleData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBRoleData

// optional uint64 AccountID = 1;
void DBRoleData::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBRoleData::accountid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.AccountID)
  return accountid_;
}
 void DBRoleData::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.AccountID)
}

// optional uint64 RoleID = 2;
void DBRoleData::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBRoleData::roleid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.RoleID)
  return roleid_;
}
 void DBRoleData::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.RoleID)
}

// optional int32 CarrerID = 3;
void DBRoleData::clear_carrerid() {
  carrerid_ = 0;
}
 ::google::protobuf::int32 DBRoleData::carrerid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.CarrerID)
  return carrerid_;
}
 void DBRoleData::set_carrerid(::google::protobuf::int32 value) {
  
  carrerid_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.CarrerID)
}

// optional int32 Level = 4;
void DBRoleData::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 DBRoleData::level() const {
  // @@protoc_insertion_point(field_get:DBRoleData.Level)
  return level_;
}
 void DBRoleData::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.Level)
}

// optional int64 Exp = 5;
void DBRoleData::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 DBRoleData::exp() const {
  // @@protoc_insertion_point(field_get:DBRoleData.Exp)
  return exp_;
}
 void DBRoleData::set_exp(::google::protobuf::int64 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.Exp)
}

// optional string Name = 6;
void DBRoleData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DBRoleData::name() const {
  // @@protoc_insertion_point(field_get:DBRoleData.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBRoleData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBRoleData.Name)
}
 void DBRoleData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBRoleData.Name)
}
 void DBRoleData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBRoleData.Name)
}
 ::std::string* DBRoleData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:DBRoleData.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBRoleData::release_name() {
  // @@protoc_insertion_point(field_release:DBRoleData.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBRoleData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DBRoleData.Name)
}

// optional int32 LangID = 7;
void DBRoleData::clear_langid() {
  langid_ = 0;
}
 ::google::protobuf::int32 DBRoleData::langid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.LangID)
  return langid_;
}
 void DBRoleData::set_langid(::google::protobuf::int32 value) {
  
  langid_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.LangID)
}

// optional int32 VipLvl = 8;
void DBRoleData::clear_viplvl() {
  viplvl_ = 0;
}
 ::google::protobuf::int32 DBRoleData::viplvl() const {
  // @@protoc_insertion_point(field_get:DBRoleData.VipLvl)
  return viplvl_;
}
 void DBRoleData::set_viplvl(::google::protobuf::int32 value) {
  
  viplvl_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.VipLvl)
}

// optional int32 VipExp = 9;
void DBRoleData::clear_vipexp() {
  vipexp_ = 0;
}
 ::google::protobuf::int32 DBRoleData::vipexp() const {
  // @@protoc_insertion_point(field_get:DBRoleData.VipExp)
  return vipexp_;
}
 void DBRoleData::set_vipexp(::google::protobuf::int32 value) {
  
  vipexp_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.VipExp)
}

// optional int64 FightValue = 10;
void DBRoleData::clear_fightvalue() {
  fightvalue_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 DBRoleData::fightvalue() const {
  // @@protoc_insertion_point(field_get:DBRoleData.FightValue)
  return fightvalue_;
}
 void DBRoleData::set_fightvalue(::google::protobuf::int64 value) {
  
  fightvalue_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.FightValue)
}

// optional int32 CityCopyID = 11;
void DBRoleData::clear_citycopyid() {
  citycopyid_ = 0;
}
 ::google::protobuf::int32 DBRoleData::citycopyid() const {
  // @@protoc_insertion_point(field_get:DBRoleData.CityCopyID)
  return citycopyid_;
}
 void DBRoleData::set_citycopyid(::google::protobuf::int32 value) {
  
  citycopyid_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.CityCopyID)
}

// repeated int64 Action = 12;
int DBRoleData::action_size() const {
  return action_.size();
}
void DBRoleData::clear_action() {
  action_.Clear();
}
 ::google::protobuf::int64 DBRoleData::action(int index) const {
  // @@protoc_insertion_point(field_get:DBRoleData.Action)
  return action_.Get(index);
}
 void DBRoleData::set_action(int index, ::google::protobuf::int64 value) {
  action_.Set(index, value);
  // @@protoc_insertion_point(field_set:DBRoleData.Action)
}
 void DBRoleData::add_action(::google::protobuf::int64 value) {
  action_.Add(value);
  // @@protoc_insertion_point(field_add:DBRoleData.Action)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DBRoleData::action() const {
  // @@protoc_insertion_point(field_list:DBRoleData.Action)
  return action_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DBRoleData::mutable_action() {
  // @@protoc_insertion_point(field_mutable_list:DBRoleData.Action)
  return &action_;
}

// repeated int64 Actime = 13;
int DBRoleData::actime_size() const {
  return actime_.size();
}
void DBRoleData::clear_actime() {
  actime_.Clear();
}
 ::google::protobuf::int64 DBRoleData::actime(int index) const {
  // @@protoc_insertion_point(field_get:DBRoleData.Actime)
  return actime_.Get(index);
}
 void DBRoleData::set_actime(int index, ::google::protobuf::int64 value) {
  actime_.Set(index, value);
  // @@protoc_insertion_point(field_set:DBRoleData.Actime)
}
 void DBRoleData::add_actime(::google::protobuf::int64 value) {
  actime_.Add(value);
  // @@protoc_insertion_point(field_add:DBRoleData.Actime)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DBRoleData::actime() const {
  // @@protoc_insertion_point(field_list:DBRoleData.Actime)
  return actime_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DBRoleData::mutable_actime() {
  // @@protoc_insertion_point(field_mutable_list:DBRoleData.Actime)
  return &actime_;
}

// optional uint64 CreateTime = 14;
void DBRoleData::clear_createtime() {
  createtime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBRoleData::createtime() const {
  // @@protoc_insertion_point(field_get:DBRoleData.CreateTime)
  return createtime_;
}
 void DBRoleData::set_createtime(::google::protobuf::uint64 value) {
  
  createtime_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.CreateTime)
}

// optional uint64 LogonTime = 15;
void DBRoleData::clear_logontime() {
  logontime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBRoleData::logontime() const {
  // @@protoc_insertion_point(field_get:DBRoleData.LogonTime)
  return logontime_;
}
 void DBRoleData::set_logontime(::google::protobuf::uint64 value) {
  
  logontime_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.LogonTime)
}

// optional uint64 LogoffTime = 16;
void DBRoleData::clear_logofftime() {
  logofftime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBRoleData::logofftime() const {
  // @@protoc_insertion_point(field_get:DBRoleData.LogoffTime)
  return logofftime_;
}
 void DBRoleData::set_logofftime(::google::protobuf::uint64 value) {
  
  logofftime_ = value;
  // @@protoc_insertion_point(field_set:DBRoleData.LogoffTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBBagItem::kGuidFieldNumber;
const int DBBagItem::kRoleIDFieldNumber;
const int DBBagItem::kItemGuidFieldNumber;
const int DBBagItem::kItemIDFieldNumber;
const int DBBagItem::kCountFieldNumber;
const int DBBagItem::kBindFieldNumber;
const int DBBagItem::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBBagItem::DBBagItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBBagItem)
}

void DBBagItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBBagItem::DBBagItem(const DBBagItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBBagItem)
}

void DBBagItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  guid_ = GOOGLE_ULONGLONG(0);
  roleid_ = GOOGLE_ULONGLONG(0);
  itemguid_ = GOOGLE_ULONGLONG(0);
  itemid_ = 0u;
  count_ = GOOGLE_LONGLONG(0);
  bind_ = 0;
  status_ = 0;
}

DBBagItem::~DBBagItem() {
  // @@protoc_insertion_point(destructor:DBBagItem)
  SharedDtor();
}

void DBBagItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBBagItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBBagItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBBagItem_descriptor_;
}

const DBBagItem& DBBagItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBBagItem* DBBagItem::default_instance_ = NULL;

DBBagItem* DBBagItem::New(::google::protobuf::Arena* arena) const {
  DBBagItem* n = new DBBagItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBBagItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBBagItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBBagItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBBagItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(guid_, status_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBBagItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBBagItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Guid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }

      // optional uint64 RoleID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ItemGuid;
        break;
      }

      // optional uint64 ItemGuid = 3;
      case 3: {
        if (tag == 24) {
         parse_ItemGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &itemguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ItemID;
        break;
      }

      // optional uint32 ItemID = 4;
      case 4: {
        if (tag == 32) {
         parse_ItemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Count;
        break;
      }

      // optional int64 Count = 5;
      case 5: {
        if (tag == 40) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Bind;
        break;
      }

      // optional int32 Bind = 6;
      case 6: {
        if (tag == 48) {
         parse_Bind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Status;
        break;
      }

      // optional int32 Status = 7;
      case 7: {
        if (tag == 56) {
         parse_Status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBBagItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBBagItem)
  return false;
#undef DO_
}

void DBBagItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBBagItem)
  // optional uint64 Guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->guid(), output);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // optional uint64 ItemGuid = 3;
  if (this->itemguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->itemguid(), output);
  }

  // optional uint32 ItemID = 4;
  if (this->itemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->itemid(), output);
  }

  // optional int64 Count = 5;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->count(), output);
  }

  // optional int32 Bind = 6;
  if (this->bind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->bind(), output);
  }

  // optional int32 Status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBBagItem)
}

::google::protobuf::uint8* DBBagItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBBagItem)
  // optional uint64 Guid = 1;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->guid(), target);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // optional uint64 ItemGuid = 3;
  if (this->itemguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->itemguid(), target);
  }

  // optional uint32 ItemID = 4;
  if (this->itemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->itemid(), target);
  }

  // optional int64 Count = 5;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->count(), target);
  }

  // optional int32 Bind = 6;
  if (this->bind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->bind(), target);
  }

  // optional int32 Status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBBagItem)
  return target;
}

int DBBagItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBBagItem)
  int total_size = 0;

  // optional uint64 Guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 ItemGuid = 3;
  if (this->itemguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->itemguid());
  }

  // optional uint32 ItemID = 4;
  if (this->itemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->itemid());
  }

  // optional int64 Count = 5;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // optional int32 Bind = 6;
  if (this->bind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bind());
  }

  // optional int32 Status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBBagItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBBagItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBBagItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBBagItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBBagItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBBagItem)
    MergeFrom(*source);
  }
}

void DBBagItem::MergeFrom(const DBBagItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBBagItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.itemguid() != 0) {
    set_itemguid(from.itemguid());
  }
  if (from.itemid() != 0) {
    set_itemid(from.itemid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.bind() != 0) {
    set_bind(from.bind());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void DBBagItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBBagItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBBagItem::CopyFrom(const DBBagItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBBagItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBBagItem::IsInitialized() const {

  return true;
}

void DBBagItem::Swap(DBBagItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBBagItem::InternalSwap(DBBagItem* other) {
  std::swap(guid_, other->guid_);
  std::swap(roleid_, other->roleid_);
  std::swap(itemguid_, other->itemguid_);
  std::swap(itemid_, other->itemid_);
  std::swap(count_, other->count_);
  std::swap(bind_, other->bind_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBBagItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBBagItem_descriptor_;
  metadata.reflection = DBBagItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBBagItem

// optional uint64 Guid = 1;
void DBBagItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBBagItem::guid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.Guid)
  return guid_;
}
 void DBBagItem::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:DBBagItem.Guid)
}

// optional uint64 RoleID = 2;
void DBBagItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBBagItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.RoleID)
  return roleid_;
}
 void DBBagItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBBagItem.RoleID)
}

// optional uint64 ItemGuid = 3;
void DBBagItem::clear_itemguid() {
  itemguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBBagItem::itemguid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.ItemGuid)
  return itemguid_;
}
 void DBBagItem::set_itemguid(::google::protobuf::uint64 value) {
  
  itemguid_ = value;
  // @@protoc_insertion_point(field_set:DBBagItem.ItemGuid)
}

// optional uint32 ItemID = 4;
void DBBagItem::clear_itemid() {
  itemid_ = 0u;
}
 ::google::protobuf::uint32 DBBagItem::itemid() const {
  // @@protoc_insertion_point(field_get:DBBagItem.ItemID)
  return itemid_;
}
 void DBBagItem::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:DBBagItem.ItemID)
}

// optional int64 Count = 5;
void DBBagItem::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 DBBagItem::count() const {
  // @@protoc_insertion_point(field_get:DBBagItem.Count)
  return count_;
}
 void DBBagItem::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:DBBagItem.Count)
}

// optional int32 Bind = 6;
void DBBagItem::clear_bind() {
  bind_ = 0;
}
 ::google::protobuf::int32 DBBagItem::bind() const {
  // @@protoc_insertion_point(field_get:DBBagItem.Bind)
  return bind_;
}
 void DBBagItem::set_bind(::google::protobuf::int32 value) {
  
  bind_ = value;
  // @@protoc_insertion_point(field_set:DBBagItem.Bind)
}

// optional int32 Status = 7;
void DBBagItem::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 DBBagItem::status() const {
  // @@protoc_insertion_point(field_get:DBBagItem.Status)
  return status_;
}
 void DBBagItem::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:DBBagItem.Status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBBagData::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBBagData::DBBagData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBBagData)
}

void DBBagData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBBagData::DBBagData(const DBBagData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBBagData)
}

void DBBagData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBBagData::~DBBagData() {
  // @@protoc_insertion_point(destructor:DBBagData)
  SharedDtor();
}

void DBBagData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBBagData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBBagData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBBagData_descriptor_;
}

const DBBagData& DBBagData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBBagData* DBBagData::default_instance_ = NULL;

DBBagData* DBBagData::New(::google::protobuf::Arena* arena) const {
  DBBagData* n = new DBBagData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBBagData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBBagData)
  itemlist_.Clear();
}

bool DBBagData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBBagData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBBagItem ItemList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBBagData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBBagData)
  return false;
#undef DO_
}

void DBBagData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBBagData)
  // repeated .DBBagItem ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBBagData)
}

::google::protobuf::uint8* DBBagData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBBagData)
  // repeated .DBBagItem ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBBagData)
  return target;
}

int DBBagData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBBagData)
  int total_size = 0;

  // repeated .DBBagItem ItemList = 1;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBBagData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBBagData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBBagData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBBagData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBBagData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBBagData)
    MergeFrom(*source);
  }
}

void DBBagData::MergeFrom(const DBBagData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBBagData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
}

void DBBagData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBBagData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBBagData::CopyFrom(const DBBagData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBBagData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBBagData::IsInitialized() const {

  return true;
}

void DBBagData::Swap(DBBagData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBBagData::InternalSwap(DBBagData* other) {
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBBagData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBBagData_descriptor_;
  metadata.reflection = DBBagData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBBagData

// repeated .DBBagItem ItemList = 1;
int DBBagData::itemlist_size() const {
  return itemlist_.size();
}
void DBBagData::clear_itemlist() {
  itemlist_.Clear();
}
const ::DBBagItem& DBBagData::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:DBBagData.ItemList)
  return itemlist_.Get(index);
}
::DBBagItem* DBBagData::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBBagData.ItemList)
  return itemlist_.Mutable(index);
}
::DBBagItem* DBBagData::add_itemlist() {
  // @@protoc_insertion_point(field_add:DBBagData.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBBagItem >*
DBBagData::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:DBBagData.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBBagItem >&
DBBagData::itemlist() const {
  // @@protoc_insertion_point(field_list:DBBagData.ItemList)
  return itemlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBCopyItem::kRoleIDFieldNumber;
const int DBCopyItem::kCopyIDFieldNumber;
const int DBCopyItem::kStarNumFieldNumber;
const int DBCopyItem::kBattleCntFieldNumber;
const int DBCopyItem::kResetCntFieldNumber;
const int DBCopyItem::kBattleTimeFieldNumber;
const int DBCopyItem::kResetTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBCopyItem::DBCopyItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBCopyItem)
}

void DBCopyItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBCopyItem::DBCopyItem(const DBCopyItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBCopyItem)
}

void DBCopyItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  copyid_ = 0u;
  starnum_ = 0;
  battlecnt_ = 0;
  resetcnt_ = 0;
  battletime_ = GOOGLE_ULONGLONG(0);
  resettime_ = GOOGLE_ULONGLONG(0);
}

DBCopyItem::~DBCopyItem() {
  // @@protoc_insertion_point(destructor:DBCopyItem)
  SharedDtor();
}

void DBCopyItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBCopyItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBCopyItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBCopyItem_descriptor_;
}

const DBCopyItem& DBCopyItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBCopyItem* DBCopyItem::default_instance_ = NULL;

DBCopyItem* DBCopyItem::New(::google::protobuf::Arena* arena) const {
  DBCopyItem* n = new DBCopyItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBCopyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBCopyItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBCopyItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBCopyItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, resettime_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBCopyItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBCopyItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyID;
        break;
      }

      // optional uint32 CopyID = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_StarNum;
        break;
      }

      // optional int32 StarNum = 3;
      case 3: {
        if (tag == 24) {
         parse_StarNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_BattleCnt;
        break;
      }

      // optional int32 BattleCnt = 4;
      case 4: {
        if (tag == 32) {
         parse_BattleCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battlecnt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ResetCnt;
        break;
      }

      // optional int32 ResetCnt = 5;
      case 5: {
        if (tag == 40) {
         parse_ResetCnt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &resetcnt_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_BattleTime;
        break;
      }

      // optional uint64 BattleTime = 6;
      case 6: {
        if (tag == 48) {
         parse_BattleTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battletime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_ResetTime;
        break;
      }

      // optional uint64 ResetTime = 7;
      case 7: {
        if (tag == 56) {
         parse_ResetTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &resettime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBCopyItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBCopyItem)
  return false;
#undef DO_
}

void DBCopyItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBCopyItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->copyid(), output);
  }

  // optional int32 StarNum = 3;
  if (this->starnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->starnum(), output);
  }

  // optional int32 BattleCnt = 4;
  if (this->battlecnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->battlecnt(), output);
  }

  // optional int32 ResetCnt = 5;
  if (this->resetcnt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->resetcnt(), output);
  }

  // optional uint64 BattleTime = 6;
  if (this->battletime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->battletime(), output);
  }

  // optional uint64 ResetTime = 7;
  if (this->resettime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->resettime(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBCopyItem)
}

::google::protobuf::uint8* DBCopyItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBCopyItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->copyid(), target);
  }

  // optional int32 StarNum = 3;
  if (this->starnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->starnum(), target);
  }

  // optional int32 BattleCnt = 4;
  if (this->battlecnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->battlecnt(), target);
  }

  // optional int32 ResetCnt = 5;
  if (this->resetcnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->resetcnt(), target);
  }

  // optional uint64 BattleTime = 6;
  if (this->battletime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->battletime(), target);
  }

  // optional uint64 ResetTime = 7;
  if (this->resettime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->resettime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBCopyItem)
  return target;
}

int DBCopyItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBCopyItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyid());
  }

  // optional int32 StarNum = 3;
  if (this->starnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starnum());
  }

  // optional int32 BattleCnt = 4;
  if (this->battlecnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battlecnt());
  }

  // optional int32 ResetCnt = 5;
  if (this->resetcnt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->resetcnt());
  }

  // optional uint64 BattleTime = 6;
  if (this->battletime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battletime());
  }

  // optional uint64 ResetTime = 7;
  if (this->resettime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->resettime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBCopyItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBCopyItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBCopyItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBCopyItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBCopyItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBCopyItem)
    MergeFrom(*source);
  }
}

void DBCopyItem::MergeFrom(const DBCopyItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBCopyItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.starnum() != 0) {
    set_starnum(from.starnum());
  }
  if (from.battlecnt() != 0) {
    set_battlecnt(from.battlecnt());
  }
  if (from.resetcnt() != 0) {
    set_resetcnt(from.resetcnt());
  }
  if (from.battletime() != 0) {
    set_battletime(from.battletime());
  }
  if (from.resettime() != 0) {
    set_resettime(from.resettime());
  }
}

void DBCopyItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBCopyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBCopyItem::CopyFrom(const DBCopyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBCopyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBCopyItem::IsInitialized() const {

  return true;
}

void DBCopyItem::Swap(DBCopyItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBCopyItem::InternalSwap(DBCopyItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(copyid_, other->copyid_);
  std::swap(starnum_, other->starnum_);
  std::swap(battlecnt_, other->battlecnt_);
  std::swap(resetcnt_, other->resetcnt_);
  std::swap(battletime_, other->battletime_);
  std::swap(resettime_, other->resettime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBCopyItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBCopyItem_descriptor_;
  metadata.reflection = DBCopyItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBCopyItem

// optional uint64 RoleID = 1;
void DBCopyItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBCopyItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.RoleID)
  return roleid_;
}
 void DBCopyItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBCopyItem.RoleID)
}

// optional uint32 CopyID = 2;
void DBCopyItem::clear_copyid() {
  copyid_ = 0u;
}
 ::google::protobuf::uint32 DBCopyItem::copyid() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.CopyID)
  return copyid_;
}
 void DBCopyItem::set_copyid(::google::protobuf::uint32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:DBCopyItem.CopyID)
}

// optional int32 StarNum = 3;
void DBCopyItem::clear_starnum() {
  starnum_ = 0;
}
 ::google::protobuf::int32 DBCopyItem::starnum() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.StarNum)
  return starnum_;
}
 void DBCopyItem::set_starnum(::google::protobuf::int32 value) {
  
  starnum_ = value;
  // @@protoc_insertion_point(field_set:DBCopyItem.StarNum)
}

// optional int32 BattleCnt = 4;
void DBCopyItem::clear_battlecnt() {
  battlecnt_ = 0;
}
 ::google::protobuf::int32 DBCopyItem::battlecnt() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.BattleCnt)
  return battlecnt_;
}
 void DBCopyItem::set_battlecnt(::google::protobuf::int32 value) {
  
  battlecnt_ = value;
  // @@protoc_insertion_point(field_set:DBCopyItem.BattleCnt)
}

// optional int32 ResetCnt = 5;
void DBCopyItem::clear_resetcnt() {
  resetcnt_ = 0;
}
 ::google::protobuf::int32 DBCopyItem::resetcnt() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.ResetCnt)
  return resetcnt_;
}
 void DBCopyItem::set_resetcnt(::google::protobuf::int32 value) {
  
  resetcnt_ = value;
  // @@protoc_insertion_point(field_set:DBCopyItem.ResetCnt)
}

// optional uint64 BattleTime = 6;
void DBCopyItem::clear_battletime() {
  battletime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBCopyItem::battletime() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.BattleTime)
  return battletime_;
}
 void DBCopyItem::set_battletime(::google::protobuf::uint64 value) {
  
  battletime_ = value;
  // @@protoc_insertion_point(field_set:DBCopyItem.BattleTime)
}

// optional uint64 ResetTime = 7;
void DBCopyItem::clear_resettime() {
  resettime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBCopyItem::resettime() const {
  // @@protoc_insertion_point(field_get:DBCopyItem.ResetTime)
  return resettime_;
}
 void DBCopyItem::set_resettime(::google::protobuf::uint64 value) {
  
  resettime_ = value;
  // @@protoc_insertion_point(field_set:DBCopyItem.ResetTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBChapterItem::kRoleIDFieldNumber;
const int DBChapterItem::kCopyTypeFieldNumber;
const int DBChapterItem::kChapterIDFieldNumber;
const int DBChapterItem::kStarAwardFieldNumber;
const int DBChapterItem::kSceneAwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBChapterItem::DBChapterItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBChapterItem)
}

void DBChapterItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBChapterItem::DBChapterItem(const DBChapterItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBChapterItem)
}

void DBChapterItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  copytype_ = 0u;
  chapterid_ = 0u;
  staraward_ = 0u;
  sceneaward_ = 0u;
}

DBChapterItem::~DBChapterItem() {
  // @@protoc_insertion_point(destructor:DBChapterItem)
  SharedDtor();
}

void DBChapterItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBChapterItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBChapterItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBChapterItem_descriptor_;
}

const DBChapterItem& DBChapterItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBChapterItem* DBChapterItem::default_instance_ = NULL;

DBChapterItem* DBChapterItem::New(::google::protobuf::Arena* arena) const {
  DBChapterItem* n = new DBChapterItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBChapterItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBChapterItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBChapterItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBChapterItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, sceneaward_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBChapterItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBChapterItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyType;
        break;
      }

      // optional uint32 CopyType = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copytype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ChapterID;
        break;
      }

      // optional uint32 ChapterID = 3;
      case 3: {
        if (tag == 24) {
         parse_ChapterID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chapterid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StarAward;
        break;
      }

      // optional uint32 StarAward = 4;
      case 4: {
        if (tag == 32) {
         parse_StarAward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &staraward_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SceneAward;
        break;
      }

      // optional uint32 SceneAward = 5;
      case 5: {
        if (tag == 40) {
         parse_SceneAward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sceneaward_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBChapterItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBChapterItem)
  return false;
#undef DO_
}

void DBChapterItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBChapterItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint32 CopyType = 2;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->copytype(), output);
  }

  // optional uint32 ChapterID = 3;
  if (this->chapterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->chapterid(), output);
  }

  // optional uint32 StarAward = 4;
  if (this->staraward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->staraward(), output);
  }

  // optional uint32 SceneAward = 5;
  if (this->sceneaward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sceneaward(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBChapterItem)
}

::google::protobuf::uint8* DBChapterItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBChapterItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint32 CopyType = 2;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->copytype(), target);
  }

  // optional uint32 ChapterID = 3;
  if (this->chapterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->chapterid(), target);
  }

  // optional uint32 StarAward = 4;
  if (this->staraward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->staraward(), target);
  }

  // optional uint32 SceneAward = 5;
  if (this->sceneaward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sceneaward(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBChapterItem)
  return target;
}

int DBChapterItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBChapterItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint32 CopyType = 2;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copytype());
  }

  // optional uint32 ChapterID = 3;
  if (this->chapterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chapterid());
  }

  // optional uint32 StarAward = 4;
  if (this->staraward() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->staraward());
  }

  // optional uint32 SceneAward = 5;
  if (this->sceneaward() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sceneaward());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBChapterItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBChapterItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBChapterItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBChapterItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBChapterItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBChapterItem)
    MergeFrom(*source);
  }
}

void DBChapterItem::MergeFrom(const DBChapterItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBChapterItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.chapterid() != 0) {
    set_chapterid(from.chapterid());
  }
  if (from.staraward() != 0) {
    set_staraward(from.staraward());
  }
  if (from.sceneaward() != 0) {
    set_sceneaward(from.sceneaward());
  }
}

void DBChapterItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBChapterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBChapterItem::CopyFrom(const DBChapterItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBChapterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBChapterItem::IsInitialized() const {

  return true;
}

void DBChapterItem::Swap(DBChapterItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBChapterItem::InternalSwap(DBChapterItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(copytype_, other->copytype_);
  std::swap(chapterid_, other->chapterid_);
  std::swap(staraward_, other->staraward_);
  std::swap(sceneaward_, other->sceneaward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBChapterItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBChapterItem_descriptor_;
  metadata.reflection = DBChapterItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBChapterItem

// optional uint64 RoleID = 1;
void DBChapterItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBChapterItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.RoleID)
  return roleid_;
}
 void DBChapterItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBChapterItem.RoleID)
}

// optional uint32 CopyType = 2;
void DBChapterItem::clear_copytype() {
  copytype_ = 0u;
}
 ::google::protobuf::uint32 DBChapterItem::copytype() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.CopyType)
  return copytype_;
}
 void DBChapterItem::set_copytype(::google::protobuf::uint32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:DBChapterItem.CopyType)
}

// optional uint32 ChapterID = 3;
void DBChapterItem::clear_chapterid() {
  chapterid_ = 0u;
}
 ::google::protobuf::uint32 DBChapterItem::chapterid() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.ChapterID)
  return chapterid_;
}
 void DBChapterItem::set_chapterid(::google::protobuf::uint32 value) {
  
  chapterid_ = value;
  // @@protoc_insertion_point(field_set:DBChapterItem.ChapterID)
}

// optional uint32 StarAward = 4;
void DBChapterItem::clear_staraward() {
  staraward_ = 0u;
}
 ::google::protobuf::uint32 DBChapterItem::staraward() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.StarAward)
  return staraward_;
}
 void DBChapterItem::set_staraward(::google::protobuf::uint32 value) {
  
  staraward_ = value;
  // @@protoc_insertion_point(field_set:DBChapterItem.StarAward)
}

// optional uint32 SceneAward = 5;
void DBChapterItem::clear_sceneaward() {
  sceneaward_ = 0u;
}
 ::google::protobuf::uint32 DBChapterItem::sceneaward() const {
  // @@protoc_insertion_point(field_get:DBChapterItem.SceneAward)
  return sceneaward_;
}
 void DBChapterItem::set_sceneaward(::google::protobuf::uint32 value) {
  
  sceneaward_ = value;
  // @@protoc_insertion_point(field_set:DBChapterItem.SceneAward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBCopyData::kCopyListFieldNumber;
const int DBCopyData::kChapterListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBCopyData::DBCopyData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBCopyData)
}

void DBCopyData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBCopyData::DBCopyData(const DBCopyData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBCopyData)
}

void DBCopyData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBCopyData::~DBCopyData() {
  // @@protoc_insertion_point(destructor:DBCopyData)
  SharedDtor();
}

void DBCopyData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBCopyData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBCopyData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBCopyData_descriptor_;
}

const DBCopyData& DBCopyData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBCopyData* DBCopyData::default_instance_ = NULL;

DBCopyData* DBCopyData::New(::google::protobuf::Arena* arena) const {
  DBCopyData* n = new DBCopyData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBCopyData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBCopyData)
  copylist_.Clear();
  chapterlist_.Clear();
}

bool DBCopyData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBCopyData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBCopyItem CopyList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_CopyList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_copylist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_CopyList;
        if (input->ExpectTag(18)) goto parse_loop_ChapterList;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .DBChapterItem ChapterList = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ChapterList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_chapterlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_ChapterList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBCopyData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBCopyData)
  return false;
#undef DO_
}

void DBCopyData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBCopyData)
  // repeated .DBCopyItem CopyList = 1;
  for (unsigned int i = 0, n = this->copylist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->copylist(i), output);
  }

  // repeated .DBChapterItem ChapterList = 2;
  for (unsigned int i = 0, n = this->chapterlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->chapterlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBCopyData)
}

::google::protobuf::uint8* DBCopyData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBCopyData)
  // repeated .DBCopyItem CopyList = 1;
  for (unsigned int i = 0, n = this->copylist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->copylist(i), false, target);
  }

  // repeated .DBChapterItem ChapterList = 2;
  for (unsigned int i = 0, n = this->chapterlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->chapterlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBCopyData)
  return target;
}

int DBCopyData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBCopyData)
  int total_size = 0;

  // repeated .DBCopyItem CopyList = 1;
  total_size += 1 * this->copylist_size();
  for (int i = 0; i < this->copylist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->copylist(i));
  }

  // repeated .DBChapterItem ChapterList = 2;
  total_size += 1 * this->chapterlist_size();
  for (int i = 0; i < this->chapterlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chapterlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBCopyData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBCopyData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBCopyData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBCopyData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBCopyData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBCopyData)
    MergeFrom(*source);
  }
}

void DBCopyData::MergeFrom(const DBCopyData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBCopyData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  copylist_.MergeFrom(from.copylist_);
  chapterlist_.MergeFrom(from.chapterlist_);
}

void DBCopyData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBCopyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBCopyData::CopyFrom(const DBCopyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBCopyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBCopyData::IsInitialized() const {

  return true;
}

void DBCopyData::Swap(DBCopyData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBCopyData::InternalSwap(DBCopyData* other) {
  copylist_.UnsafeArenaSwap(&other->copylist_);
  chapterlist_.UnsafeArenaSwap(&other->chapterlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBCopyData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBCopyData_descriptor_;
  metadata.reflection = DBCopyData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBCopyData

// repeated .DBCopyItem CopyList = 1;
int DBCopyData::copylist_size() const {
  return copylist_.size();
}
void DBCopyData::clear_copylist() {
  copylist_.Clear();
}
const ::DBCopyItem& DBCopyData::copylist(int index) const {
  // @@protoc_insertion_point(field_get:DBCopyData.CopyList)
  return copylist_.Get(index);
}
::DBCopyItem* DBCopyData::mutable_copylist(int index) {
  // @@protoc_insertion_point(field_mutable:DBCopyData.CopyList)
  return copylist_.Mutable(index);
}
::DBCopyItem* DBCopyData::add_copylist() {
  // @@protoc_insertion_point(field_add:DBCopyData.CopyList)
  return copylist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBCopyItem >*
DBCopyData::mutable_copylist() {
  // @@protoc_insertion_point(field_mutable_list:DBCopyData.CopyList)
  return &copylist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBCopyItem >&
DBCopyData::copylist() const {
  // @@protoc_insertion_point(field_list:DBCopyData.CopyList)
  return copylist_;
}

// repeated .DBChapterItem ChapterList = 2;
int DBCopyData::chapterlist_size() const {
  return chapterlist_.size();
}
void DBCopyData::clear_chapterlist() {
  chapterlist_.Clear();
}
const ::DBChapterItem& DBCopyData::chapterlist(int index) const {
  // @@protoc_insertion_point(field_get:DBCopyData.ChapterList)
  return chapterlist_.Get(index);
}
::DBChapterItem* DBCopyData::mutable_chapterlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBCopyData.ChapterList)
  return chapterlist_.Mutable(index);
}
::DBChapterItem* DBCopyData::add_chapterlist() {
  // @@protoc_insertion_point(field_add:DBCopyData.ChapterList)
  return chapterlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBChapterItem >*
DBCopyData::mutable_chapterlist() {
  // @@protoc_insertion_point(field_mutable_list:DBCopyData.ChapterList)
  return &chapterlist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBChapterItem >&
DBCopyData::chapterlist() const {
  // @@protoc_insertion_point(field_list:DBCopyData.ChapterList)
  return chapterlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBEquipItem::kRoleIDFieldNumber;
const int DBEquipItem::kGuidFieldNumber;
const int DBEquipItem::kEquipIDFieldNumber;
const int DBEquipItem::kStrengthLvlFieldNumber;
const int DBEquipItem::kRefineLevelFieldNumber;
const int DBEquipItem::kStarLevelFieldNumber;
const int DBEquipItem::kRefineExpFieldNumber;
const int DBEquipItem::kStarExpFieldNumber;
const int DBEquipItem::kIsUsingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBEquipItem::DBEquipItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBEquipItem)
}

void DBEquipItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBEquipItem::DBEquipItem(const DBEquipItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBEquipItem)
}

void DBEquipItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  guid_ = GOOGLE_ULONGLONG(0);
  equipid_ = 0;
  strengthlvl_ = 0;
  refinelevel_ = 0;
  starlevel_ = 0;
  refineexp_ = 0;
  starexp_ = 0;
  isusing_ = false;
}

DBEquipItem::~DBEquipItem() {
  // @@protoc_insertion_point(destructor:DBEquipItem)
  SharedDtor();
}

void DBEquipItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBEquipItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBEquipItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBEquipItem_descriptor_;
}

const DBEquipItem& DBEquipItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBEquipItem* DBEquipItem::default_instance_ = NULL;

DBEquipItem* DBEquipItem::New(::google::protobuf::Arena* arena) const {
  DBEquipItem* n = new DBEquipItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBEquipItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBEquipItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBEquipItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBEquipItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, starexp_);
  isusing_ = false;

#undef ZR_HELPER_
#undef ZR_

}

bool DBEquipItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBEquipItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Guid;
        break;
      }

      // optional uint64 Guid = 2;
      case 2: {
        if (tag == 16) {
         parse_Guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_EquipID;
        break;
      }

      // optional int32 EquipID = 3;
      case 3: {
        if (tag == 24) {
         parse_EquipID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equipid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StrengthLvl;
        break;
      }

      // optional int32 StrengthLvl = 4;
      case 4: {
        if (tag == 32) {
         parse_StrengthLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_RefineLevel;
        break;
      }

      // optional int32 RefineLevel = 5;
      case 5: {
        if (tag == 40) {
         parse_RefineLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_StarLevel;
        break;
      }

      // optional int32 StarLevel = 6;
      case 6: {
        if (tag == 48) {
         parse_StarLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RefineExp;
        break;
      }

      // optional int32 RefineExp = 7;
      case 7: {
        if (tag == 56) {
         parse_RefineExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refineexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_StarExp;
        break;
      }

      // optional int32 StarExp = 8;
      case 8: {
        if (tag == 64) {
         parse_StarExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_IsUsing;
        break;
      }

      // optional bool IsUsing = 9;
      case 9: {
        if (tag == 72) {
         parse_IsUsing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isusing_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBEquipItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBEquipItem)
  return false;
#undef DO_
}

void DBEquipItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBEquipItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int32 EquipID = 3;
  if (this->equipid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->equipid(), output);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // optional int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->refineexp(), output);
  }

  // optional int32 StarExp = 8;
  if (this->starexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->starexp(), output);
  }

  // optional bool IsUsing = 9;
  if (this->isusing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isusing(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBEquipItem)
}

::google::protobuf::uint8* DBEquipItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBEquipItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int32 EquipID = 3;
  if (this->equipid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->equipid(), target);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // optional int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->refineexp(), target);
  }

  // optional int32 StarExp = 8;
  if (this->starexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->starexp(), target);
  }

  // optional bool IsUsing = 9;
  if (this->isusing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isusing(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBEquipItem)
  return target;
}

int DBEquipItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBEquipItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // optional int32 EquipID = 3;
  if (this->equipid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->equipid());
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // optional int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refineexp());
  }

  // optional int32 StarExp = 8;
  if (this->starexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starexp());
  }

  // optional bool IsUsing = 9;
  if (this->isusing() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBEquipItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBEquipItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBEquipItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBEquipItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBEquipItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBEquipItem)
    MergeFrom(*source);
  }
}

void DBEquipItem::MergeFrom(const DBEquipItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBEquipItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.equipid() != 0) {
    set_equipid(from.equipid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.refineexp() != 0) {
    set_refineexp(from.refineexp());
  }
  if (from.starexp() != 0) {
    set_starexp(from.starexp());
  }
  if (from.isusing() != 0) {
    set_isusing(from.isusing());
  }
}

void DBEquipItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBEquipItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBEquipItem::CopyFrom(const DBEquipItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBEquipItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBEquipItem::IsInitialized() const {

  return true;
}

void DBEquipItem::Swap(DBEquipItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBEquipItem::InternalSwap(DBEquipItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(guid_, other->guid_);
  std::swap(equipid_, other->equipid_);
  std::swap(strengthlvl_, other->strengthlvl_);
  std::swap(refinelevel_, other->refinelevel_);
  std::swap(starlevel_, other->starlevel_);
  std::swap(refineexp_, other->refineexp_);
  std::swap(starexp_, other->starexp_);
  std::swap(isusing_, other->isusing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBEquipItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBEquipItem_descriptor_;
  metadata.reflection = DBEquipItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBEquipItem

// optional uint64 RoleID = 1;
void DBEquipItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBEquipItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.RoleID)
  return roleid_;
}
 void DBEquipItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBEquipItem.RoleID)
}

// optional uint64 Guid = 2;
void DBEquipItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBEquipItem::guid() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.Guid)
  return guid_;
}
 void DBEquipItem::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:DBEquipItem.Guid)
}

// optional int32 EquipID = 3;
void DBEquipItem::clear_equipid() {
  equipid_ = 0;
}
 ::google::protobuf::int32 DBEquipItem::equipid() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.EquipID)
  return equipid_;
}
 void DBEquipItem::set_equipid(::google::protobuf::int32 value) {
  
  equipid_ = value;
  // @@protoc_insertion_point(field_set:DBEquipItem.EquipID)
}

// optional int32 StrengthLvl = 4;
void DBEquipItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
 ::google::protobuf::int32 DBEquipItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.StrengthLvl)
  return strengthlvl_;
}
 void DBEquipItem::set_strengthlvl(::google::protobuf::int32 value) {
  
  strengthlvl_ = value;
  // @@protoc_insertion_point(field_set:DBEquipItem.StrengthLvl)
}

// optional int32 RefineLevel = 5;
void DBEquipItem::clear_refinelevel() {
  refinelevel_ = 0;
}
 ::google::protobuf::int32 DBEquipItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.RefineLevel)
  return refinelevel_;
}
 void DBEquipItem::set_refinelevel(::google::protobuf::int32 value) {
  
  refinelevel_ = value;
  // @@protoc_insertion_point(field_set:DBEquipItem.RefineLevel)
}

// optional int32 StarLevel = 6;
void DBEquipItem::clear_starlevel() {
  starlevel_ = 0;
}
 ::google::protobuf::int32 DBEquipItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.StarLevel)
  return starlevel_;
}
 void DBEquipItem::set_starlevel(::google::protobuf::int32 value) {
  
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:DBEquipItem.StarLevel)
}

// optional int32 RefineExp = 7;
void DBEquipItem::clear_refineexp() {
  refineexp_ = 0;
}
 ::google::protobuf::int32 DBEquipItem::refineexp() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.RefineExp)
  return refineexp_;
}
 void DBEquipItem::set_refineexp(::google::protobuf::int32 value) {
  
  refineexp_ = value;
  // @@protoc_insertion_point(field_set:DBEquipItem.RefineExp)
}

// optional int32 StarExp = 8;
void DBEquipItem::clear_starexp() {
  starexp_ = 0;
}
 ::google::protobuf::int32 DBEquipItem::starexp() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.StarExp)
  return starexp_;
}
 void DBEquipItem::set_starexp(::google::protobuf::int32 value) {
  
  starexp_ = value;
  // @@protoc_insertion_point(field_set:DBEquipItem.StarExp)
}

// optional bool IsUsing = 9;
void DBEquipItem::clear_isusing() {
  isusing_ = false;
}
 bool DBEquipItem::isusing() const {
  // @@protoc_insertion_point(field_get:DBEquipItem.IsUsing)
  return isusing_;
}
 void DBEquipItem::set_isusing(bool value) {
  
  isusing_ = value;
  // @@protoc_insertion_point(field_set:DBEquipItem.IsUsing)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBEquipData::kEquipListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBEquipData::DBEquipData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBEquipData)
}

void DBEquipData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBEquipData::DBEquipData(const DBEquipData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBEquipData)
}

void DBEquipData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBEquipData::~DBEquipData() {
  // @@protoc_insertion_point(destructor:DBEquipData)
  SharedDtor();
}

void DBEquipData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBEquipData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBEquipData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBEquipData_descriptor_;
}

const DBEquipData& DBEquipData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBEquipData* DBEquipData::default_instance_ = NULL;

DBEquipData* DBEquipData::New(::google::protobuf::Arena* arena) const {
  DBEquipData* n = new DBEquipData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBEquipData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBEquipData)
  equiplist_.Clear();
}

bool DBEquipData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBEquipData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBEquipItem EquipList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_EquipList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_equiplist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_EquipList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBEquipData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBEquipData)
  return false;
#undef DO_
}

void DBEquipData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBEquipData)
  // repeated .DBEquipItem EquipList = 1;
  for (unsigned int i = 0, n = this->equiplist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equiplist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBEquipData)
}

::google::protobuf::uint8* DBEquipData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBEquipData)
  // repeated .DBEquipItem EquipList = 1;
  for (unsigned int i = 0, n = this->equiplist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->equiplist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBEquipData)
  return target;
}

int DBEquipData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBEquipData)
  int total_size = 0;

  // repeated .DBEquipItem EquipList = 1;
  total_size += 1 * this->equiplist_size();
  for (int i = 0; i < this->equiplist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equiplist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBEquipData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBEquipData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBEquipData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBEquipData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBEquipData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBEquipData)
    MergeFrom(*source);
  }
}

void DBEquipData::MergeFrom(const DBEquipData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBEquipData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  equiplist_.MergeFrom(from.equiplist_);
}

void DBEquipData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBEquipData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBEquipData::CopyFrom(const DBEquipData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBEquipData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBEquipData::IsInitialized() const {

  return true;
}

void DBEquipData::Swap(DBEquipData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBEquipData::InternalSwap(DBEquipData* other) {
  equiplist_.UnsafeArenaSwap(&other->equiplist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBEquipData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBEquipData_descriptor_;
  metadata.reflection = DBEquipData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBEquipData

// repeated .DBEquipItem EquipList = 1;
int DBEquipData::equiplist_size() const {
  return equiplist_.size();
}
void DBEquipData::clear_equiplist() {
  equiplist_.Clear();
}
const ::DBEquipItem& DBEquipData::equiplist(int index) const {
  // @@protoc_insertion_point(field_get:DBEquipData.EquipList)
  return equiplist_.Get(index);
}
::DBEquipItem* DBEquipData::mutable_equiplist(int index) {
  // @@protoc_insertion_point(field_mutable:DBEquipData.EquipList)
  return equiplist_.Mutable(index);
}
::DBEquipItem* DBEquipData::add_equiplist() {
  // @@protoc_insertion_point(field_add:DBEquipData.EquipList)
  return equiplist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBEquipItem >*
DBEquipData::mutable_equiplist() {
  // @@protoc_insertion_point(field_mutable_list:DBEquipData.EquipList)
  return &equiplist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBEquipItem >&
DBEquipData::equiplist() const {
  // @@protoc_insertion_point(field_list:DBEquipData.EquipList)
  return equiplist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBGemItem::kRoleIDFieldNumber;
const int DBGemItem::kGuidFieldNumber;
const int DBGemItem::kGemIDFieldNumber;
const int DBGemItem::kStrengthLvlFieldNumber;
const int DBGemItem::kRefineLevelFieldNumber;
const int DBGemItem::kStarLevelFieldNumber;
const int DBGemItem::kRefineExpFieldNumber;
const int DBGemItem::kStarExpFieldNumber;
const int DBGemItem::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBGemItem::DBGemItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBGemItem)
}

void DBGemItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBGemItem::DBGemItem(const DBGemItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBGemItem)
}

void DBGemItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  guid_ = GOOGLE_ULONGLONG(0);
  gemid_ = 0;
  strengthlvl_ = 0;
  refinelevel_ = 0;
  starlevel_ = 0;
  refineexp_ = 0;
  starexp_ = 0;
  pos_ = 0;
}

DBGemItem::~DBGemItem() {
  // @@protoc_insertion_point(destructor:DBGemItem)
  SharedDtor();
}

void DBGemItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBGemItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBGemItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBGemItem_descriptor_;
}

const DBGemItem& DBGemItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBGemItem* DBGemItem::default_instance_ = NULL;

DBGemItem* DBGemItem::New(::google::protobuf::Arena* arena) const {
  DBGemItem* n = new DBGemItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBGemItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBGemItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBGemItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBGemItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, starexp_);
  pos_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool DBGemItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBGemItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Guid;
        break;
      }

      // optional uint64 Guid = 2;
      case 2: {
        if (tag == 16) {
         parse_Guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_GemID;
        break;
      }

      // optional int32 GemID = 3;
      case 3: {
        if (tag == 24) {
         parse_GemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gemid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StrengthLvl;
        break;
      }

      // optional int32 StrengthLvl = 4;
      case 4: {
        if (tag == 32) {
         parse_StrengthLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_RefineLevel;
        break;
      }

      // optional int32 RefineLevel = 5;
      case 5: {
        if (tag == 40) {
         parse_RefineLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_StarLevel;
        break;
      }

      // optional int32 StarLevel = 6;
      case 6: {
        if (tag == 48) {
         parse_StarLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_RefineExp;
        break;
      }

      // optional int32 RefineExp = 7;
      case 7: {
        if (tag == 56) {
         parse_RefineExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refineexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_StarExp;
        break;
      }

      // optional int32 StarExp = 8;
      case 8: {
        if (tag == 64) {
         parse_StarExp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starexp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_Pos;
        break;
      }

      // optional int32 Pos = 9;
      case 9: {
        if (tag == 72) {
         parse_Pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBGemItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBGemItem)
  return false;
#undef DO_
}

void DBGemItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBGemItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int32 GemID = 3;
  if (this->gemid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gemid(), output);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // optional int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->refineexp(), output);
  }

  // optional int32 StarExp = 8;
  if (this->starexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->starexp(), output);
  }

  // optional int32 Pos = 9;
  if (this->pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->pos(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBGemItem)
}

::google::protobuf::uint8* DBGemItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBGemItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int32 GemID = 3;
  if (this->gemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gemid(), target);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // optional int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->refineexp(), target);
  }

  // optional int32 StarExp = 8;
  if (this->starexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->starexp(), target);
  }

  // optional int32 Pos = 9;
  if (this->pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->pos(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBGemItem)
  return target;
}

int DBGemItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBGemItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // optional int32 GemID = 3;
  if (this->gemid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gemid());
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // optional int32 RefineExp = 7;
  if (this->refineexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refineexp());
  }

  // optional int32 StarExp = 8;
  if (this->starexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starexp());
  }

  // optional int32 Pos = 9;
  if (this->pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBGemItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBGemItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBGemItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBGemItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBGemItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBGemItem)
    MergeFrom(*source);
  }
}

void DBGemItem::MergeFrom(const DBGemItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBGemItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.gemid() != 0) {
    set_gemid(from.gemid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.refineexp() != 0) {
    set_refineexp(from.refineexp());
  }
  if (from.starexp() != 0) {
    set_starexp(from.starexp());
  }
  if (from.pos() != 0) {
    set_pos(from.pos());
  }
}

void DBGemItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBGemItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBGemItem::CopyFrom(const DBGemItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBGemItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBGemItem::IsInitialized() const {

  return true;
}

void DBGemItem::Swap(DBGemItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBGemItem::InternalSwap(DBGemItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(guid_, other->guid_);
  std::swap(gemid_, other->gemid_);
  std::swap(strengthlvl_, other->strengthlvl_);
  std::swap(refinelevel_, other->refinelevel_);
  std::swap(starlevel_, other->starlevel_);
  std::swap(refineexp_, other->refineexp_);
  std::swap(starexp_, other->starexp_);
  std::swap(pos_, other->pos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBGemItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBGemItem_descriptor_;
  metadata.reflection = DBGemItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBGemItem

// optional uint64 RoleID = 1;
void DBGemItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBGemItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBGemItem.RoleID)
  return roleid_;
}
 void DBGemItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBGemItem.RoleID)
}

// optional uint64 Guid = 2;
void DBGemItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBGemItem::guid() const {
  // @@protoc_insertion_point(field_get:DBGemItem.Guid)
  return guid_;
}
 void DBGemItem::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:DBGemItem.Guid)
}

// optional int32 GemID = 3;
void DBGemItem::clear_gemid() {
  gemid_ = 0;
}
 ::google::protobuf::int32 DBGemItem::gemid() const {
  // @@protoc_insertion_point(field_get:DBGemItem.GemID)
  return gemid_;
}
 void DBGemItem::set_gemid(::google::protobuf::int32 value) {
  
  gemid_ = value;
  // @@protoc_insertion_point(field_set:DBGemItem.GemID)
}

// optional int32 StrengthLvl = 4;
void DBGemItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
 ::google::protobuf::int32 DBGemItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBGemItem.StrengthLvl)
  return strengthlvl_;
}
 void DBGemItem::set_strengthlvl(::google::protobuf::int32 value) {
  
  strengthlvl_ = value;
  // @@protoc_insertion_point(field_set:DBGemItem.StrengthLvl)
}

// optional int32 RefineLevel = 5;
void DBGemItem::clear_refinelevel() {
  refinelevel_ = 0;
}
 ::google::protobuf::int32 DBGemItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBGemItem.RefineLevel)
  return refinelevel_;
}
 void DBGemItem::set_refinelevel(::google::protobuf::int32 value) {
  
  refinelevel_ = value;
  // @@protoc_insertion_point(field_set:DBGemItem.RefineLevel)
}

// optional int32 StarLevel = 6;
void DBGemItem::clear_starlevel() {
  starlevel_ = 0;
}
 ::google::protobuf::int32 DBGemItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBGemItem.StarLevel)
  return starlevel_;
}
 void DBGemItem::set_starlevel(::google::protobuf::int32 value) {
  
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:DBGemItem.StarLevel)
}

// optional int32 RefineExp = 7;
void DBGemItem::clear_refineexp() {
  refineexp_ = 0;
}
 ::google::protobuf::int32 DBGemItem::refineexp() const {
  // @@protoc_insertion_point(field_get:DBGemItem.RefineExp)
  return refineexp_;
}
 void DBGemItem::set_refineexp(::google::protobuf::int32 value) {
  
  refineexp_ = value;
  // @@protoc_insertion_point(field_set:DBGemItem.RefineExp)
}

// optional int32 StarExp = 8;
void DBGemItem::clear_starexp() {
  starexp_ = 0;
}
 ::google::protobuf::int32 DBGemItem::starexp() const {
  // @@protoc_insertion_point(field_get:DBGemItem.StarExp)
  return starexp_;
}
 void DBGemItem::set_starexp(::google::protobuf::int32 value) {
  
  starexp_ = value;
  // @@protoc_insertion_point(field_set:DBGemItem.StarExp)
}

// optional int32 Pos = 9;
void DBGemItem::clear_pos() {
  pos_ = 0;
}
 ::google::protobuf::int32 DBGemItem::pos() const {
  // @@protoc_insertion_point(field_get:DBGemItem.Pos)
  return pos_;
}
 void DBGemItem::set_pos(::google::protobuf::int32 value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:DBGemItem.Pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBGemData::kGemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBGemData::DBGemData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBGemData)
}

void DBGemData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBGemData::DBGemData(const DBGemData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBGemData)
}

void DBGemData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBGemData::~DBGemData() {
  // @@protoc_insertion_point(destructor:DBGemData)
  SharedDtor();
}

void DBGemData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBGemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBGemData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBGemData_descriptor_;
}

const DBGemData& DBGemData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBGemData* DBGemData::default_instance_ = NULL;

DBGemData* DBGemData::New(::google::protobuf::Arena* arena) const {
  DBGemData* n = new DBGemData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBGemData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBGemData)
  gemlist_.Clear();
}

bool DBGemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBGemData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBGemItem GemList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_GemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_gemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_GemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBGemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBGemData)
  return false;
#undef DO_
}

void DBGemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBGemData)
  // repeated .DBGemItem GemList = 1;
  for (unsigned int i = 0, n = this->gemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gemlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBGemData)
}

::google::protobuf::uint8* DBGemData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBGemData)
  // repeated .DBGemItem GemList = 1;
  for (unsigned int i = 0, n = this->gemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->gemlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBGemData)
  return target;
}

int DBGemData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBGemData)
  int total_size = 0;

  // repeated .DBGemItem GemList = 1;
  total_size += 1 * this->gemlist_size();
  for (int i = 0; i < this->gemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBGemData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBGemData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBGemData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBGemData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBGemData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBGemData)
    MergeFrom(*source);
  }
}

void DBGemData::MergeFrom(const DBGemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBGemData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  gemlist_.MergeFrom(from.gemlist_);
}

void DBGemData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBGemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBGemData::CopyFrom(const DBGemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBGemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBGemData::IsInitialized() const {

  return true;
}

void DBGemData::Swap(DBGemData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBGemData::InternalSwap(DBGemData* other) {
  gemlist_.UnsafeArenaSwap(&other->gemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBGemData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBGemData_descriptor_;
  metadata.reflection = DBGemData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBGemData

// repeated .DBGemItem GemList = 1;
int DBGemData::gemlist_size() const {
  return gemlist_.size();
}
void DBGemData::clear_gemlist() {
  gemlist_.Clear();
}
const ::DBGemItem& DBGemData::gemlist(int index) const {
  // @@protoc_insertion_point(field_get:DBGemData.GemList)
  return gemlist_.Get(index);
}
::DBGemItem* DBGemData::mutable_gemlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBGemData.GemList)
  return gemlist_.Mutable(index);
}
::DBGemItem* DBGemData::add_gemlist() {
  // @@protoc_insertion_point(field_add:DBGemData.GemList)
  return gemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBGemItem >*
DBGemData::mutable_gemlist() {
  // @@protoc_insertion_point(field_mutable_list:DBGemData.GemList)
  return &gemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBGemItem >&
DBGemData::gemlist() const {
  // @@protoc_insertion_point(field_list:DBGemData.GemList)
  return gemlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBSkillItem::kRoleIDFieldNumber;
const int DBSkillItem::kSkillIDFieldNumber;
const int DBSkillItem::kLevelFieldNumber;
const int DBSkillItem::kKeyPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBSkillItem::DBSkillItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBSkillItem)
}

void DBSkillItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBSkillItem::DBSkillItem(const DBSkillItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBSkillItem)
}

void DBSkillItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  skillid_ = 0u;
  level_ = 0;
  keypos_ = 0;
}

DBSkillItem::~DBSkillItem() {
  // @@protoc_insertion_point(destructor:DBSkillItem)
  SharedDtor();
}

void DBSkillItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBSkillItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBSkillItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBSkillItem_descriptor_;
}

const DBSkillItem& DBSkillItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBSkillItem* DBSkillItem::default_instance_ = NULL;

DBSkillItem* DBSkillItem::New(::google::protobuf::Arena* arena) const {
  DBSkillItem* n = new DBSkillItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBSkillItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBSkillItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBSkillItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBSkillItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, keypos_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBSkillItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBSkillItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SkillID;
        break;
      }

      // optional uint32 SkillID = 2;
      case 2: {
        if (tag == 16) {
         parse_SkillID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Level;
        break;
      }

      // optional int32 Level = 3;
      case 3: {
        if (tag == 24) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_KeyPos;
        break;
      }

      // optional int32 KeyPos = 4;
      case 4: {
        if (tag == 32) {
         parse_KeyPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keypos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBSkillItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBSkillItem)
  return false;
#undef DO_
}

void DBSkillItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBSkillItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint32 SkillID = 2;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skillid(), output);
  }

  // optional int32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // optional int32 KeyPos = 4;
  if (this->keypos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->keypos(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBSkillItem)
}

::google::protobuf::uint8* DBSkillItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBSkillItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint32 SkillID = 2;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skillid(), target);
  }

  // optional int32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // optional int32 KeyPos = 4;
  if (this->keypos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->keypos(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBSkillItem)
  return target;
}

int DBSkillItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBSkillItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint32 SkillID = 2;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skillid());
  }

  // optional int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional int32 KeyPos = 4;
  if (this->keypos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->keypos());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBSkillItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBSkillItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBSkillItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBSkillItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBSkillItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBSkillItem)
    MergeFrom(*source);
  }
}

void DBSkillItem::MergeFrom(const DBSkillItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBSkillItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.keypos() != 0) {
    set_keypos(from.keypos());
  }
}

void DBSkillItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBSkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBSkillItem::CopyFrom(const DBSkillItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBSkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBSkillItem::IsInitialized() const {

  return true;
}

void DBSkillItem::Swap(DBSkillItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBSkillItem::InternalSwap(DBSkillItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(skillid_, other->skillid_);
  std::swap(level_, other->level_);
  std::swap(keypos_, other->keypos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBSkillItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBSkillItem_descriptor_;
  metadata.reflection = DBSkillItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBSkillItem

// optional uint64 RoleID = 1;
void DBSkillItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBSkillItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.RoleID)
  return roleid_;
}
 void DBSkillItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBSkillItem.RoleID)
}

// optional uint32 SkillID = 2;
void DBSkillItem::clear_skillid() {
  skillid_ = 0u;
}
 ::google::protobuf::uint32 DBSkillItem::skillid() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.SkillID)
  return skillid_;
}
 void DBSkillItem::set_skillid(::google::protobuf::uint32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:DBSkillItem.SkillID)
}

// optional int32 Level = 3;
void DBSkillItem::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 DBSkillItem::level() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.Level)
  return level_;
}
 void DBSkillItem::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:DBSkillItem.Level)
}

// optional int32 KeyPos = 4;
void DBSkillItem::clear_keypos() {
  keypos_ = 0;
}
 ::google::protobuf::int32 DBSkillItem::keypos() const {
  // @@protoc_insertion_point(field_get:DBSkillItem.KeyPos)
  return keypos_;
}
 void DBSkillItem::set_keypos(::google::protobuf::int32 value) {
  
  keypos_ = value;
  // @@protoc_insertion_point(field_set:DBSkillItem.KeyPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBSkillData::kSkillListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBSkillData::DBSkillData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBSkillData)
}

void DBSkillData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBSkillData::DBSkillData(const DBSkillData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBSkillData)
}

void DBSkillData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBSkillData::~DBSkillData() {
  // @@protoc_insertion_point(destructor:DBSkillData)
  SharedDtor();
}

void DBSkillData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBSkillData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBSkillData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBSkillData_descriptor_;
}

const DBSkillData& DBSkillData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBSkillData* DBSkillData::default_instance_ = NULL;

DBSkillData* DBSkillData::New(::google::protobuf::Arena* arena) const {
  DBSkillData* n = new DBSkillData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBSkillData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBSkillData)
  skilllist_.Clear();
}

bool DBSkillData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBSkillData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBSkillItem SkillList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_SkillList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_skilllist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_SkillList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBSkillData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBSkillData)
  return false;
#undef DO_
}

void DBSkillData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBSkillData)
  // repeated .DBSkillItem SkillList = 1;
  for (unsigned int i = 0, n = this->skilllist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skilllist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBSkillData)
}

::google::protobuf::uint8* DBSkillData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBSkillData)
  // repeated .DBSkillItem SkillList = 1;
  for (unsigned int i = 0, n = this->skilllist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->skilllist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBSkillData)
  return target;
}

int DBSkillData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBSkillData)
  int total_size = 0;

  // repeated .DBSkillItem SkillList = 1;
  total_size += 1 * this->skilllist_size();
  for (int i = 0; i < this->skilllist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skilllist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBSkillData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBSkillData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBSkillData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBSkillData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBSkillData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBSkillData)
    MergeFrom(*source);
  }
}

void DBSkillData::MergeFrom(const DBSkillData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBSkillData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  skilllist_.MergeFrom(from.skilllist_);
}

void DBSkillData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBSkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBSkillData::CopyFrom(const DBSkillData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBSkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBSkillData::IsInitialized() const {

  return true;
}

void DBSkillData::Swap(DBSkillData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBSkillData::InternalSwap(DBSkillData* other) {
  skilllist_.UnsafeArenaSwap(&other->skilllist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBSkillData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBSkillData_descriptor_;
  metadata.reflection = DBSkillData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBSkillData

// repeated .DBSkillItem SkillList = 1;
int DBSkillData::skilllist_size() const {
  return skilllist_.size();
}
void DBSkillData::clear_skilllist() {
  skilllist_.Clear();
}
const ::DBSkillItem& DBSkillData::skilllist(int index) const {
  // @@protoc_insertion_point(field_get:DBSkillData.SkillList)
  return skilllist_.Get(index);
}
::DBSkillItem* DBSkillData::mutable_skilllist(int index) {
  // @@protoc_insertion_point(field_mutable:DBSkillData.SkillList)
  return skilllist_.Mutable(index);
}
::DBSkillItem* DBSkillData::add_skilllist() {
  // @@protoc_insertion_point(field_add:DBSkillData.SkillList)
  return skilllist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBSkillItem >*
DBSkillData::mutable_skilllist() {
  // @@protoc_insertion_point(field_mutable_list:DBSkillData.SkillList)
  return &skilllist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBSkillItem >&
DBSkillData::skilllist() const {
  // @@protoc_insertion_point(field_list:DBSkillData.SkillList)
  return skilllist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPetItem::kRoleIDFieldNumber;
const int DBPetItem::kGuidFieldNumber;
const int DBPetItem::kPetIDFieldNumber;
const int DBPetItem::kStrengthLvlFieldNumber;
const int DBPetItem::kRefineLevelFieldNumber;
const int DBPetItem::kStarLevelFieldNumber;
const int DBPetItem::kIsUsingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPetItem::DBPetItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBPetItem)
}

void DBPetItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBPetItem::DBPetItem(const DBPetItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBPetItem)
}

void DBPetItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  guid_ = GOOGLE_ULONGLONG(0);
  petid_ = 0;
  strengthlvl_ = 0;
  refinelevel_ = 0;
  starlevel_ = 0;
  isusing_ = false;
}

DBPetItem::~DBPetItem() {
  // @@protoc_insertion_point(destructor:DBPetItem)
  SharedDtor();
}

void DBPetItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBPetItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBPetItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBPetItem_descriptor_;
}

const DBPetItem& DBPetItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBPetItem* DBPetItem::default_instance_ = NULL;

DBPetItem* DBPetItem::New(::google::protobuf::Arena* arena) const {
  DBPetItem* n = new DBPetItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBPetItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBPetItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBPetItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBPetItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, isusing_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBPetItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBPetItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Guid;
        break;
      }

      // optional uint64 Guid = 2;
      case 2: {
        if (tag == 16) {
         parse_Guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PetID;
        break;
      }

      // optional int32 PetID = 3;
      case 3: {
        if (tag == 24) {
         parse_PetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &petid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StrengthLvl;
        break;
      }

      // optional int32 StrengthLvl = 4;
      case 4: {
        if (tag == 32) {
         parse_StrengthLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_RefineLevel;
        break;
      }

      // optional int32 RefineLevel = 5;
      case 5: {
        if (tag == 40) {
         parse_RefineLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_StarLevel;
        break;
      }

      // optional int32 StarLevel = 6;
      case 6: {
        if (tag == 48) {
         parse_StarLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_IsUsing;
        break;
      }

      // optional bool IsUsing = 7;
      case 7: {
        if (tag == 56) {
         parse_IsUsing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isusing_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBPetItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBPetItem)
  return false;
#undef DO_
}

void DBPetItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBPetItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int32 PetID = 3;
  if (this->petid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->petid(), output);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // optional bool IsUsing = 7;
  if (this->isusing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isusing(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBPetItem)
}

::google::protobuf::uint8* DBPetItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBPetItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int32 PetID = 3;
  if (this->petid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->petid(), target);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // optional bool IsUsing = 7;
  if (this->isusing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isusing(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBPetItem)
  return target;
}

int DBPetItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBPetItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // optional int32 PetID = 3;
  if (this->petid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->petid());
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // optional bool IsUsing = 7;
  if (this->isusing() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBPetItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBPetItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBPetItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPetItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBPetItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBPetItem)
    MergeFrom(*source);
  }
}

void DBPetItem::MergeFrom(const DBPetItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBPetItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.petid() != 0) {
    set_petid(from.petid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.isusing() != 0) {
    set_isusing(from.isusing());
  }
}

void DBPetItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBPetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPetItem::CopyFrom(const DBPetItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBPetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPetItem::IsInitialized() const {

  return true;
}

void DBPetItem::Swap(DBPetItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPetItem::InternalSwap(DBPetItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(guid_, other->guid_);
  std::swap(petid_, other->petid_);
  std::swap(strengthlvl_, other->strengthlvl_);
  std::swap(refinelevel_, other->refinelevel_);
  std::swap(starlevel_, other->starlevel_);
  std::swap(isusing_, other->isusing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBPetItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBPetItem_descriptor_;
  metadata.reflection = DBPetItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBPetItem

// optional uint64 RoleID = 1;
void DBPetItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBPetItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBPetItem.RoleID)
  return roleid_;
}
 void DBPetItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBPetItem.RoleID)
}

// optional uint64 Guid = 2;
void DBPetItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBPetItem::guid() const {
  // @@protoc_insertion_point(field_get:DBPetItem.Guid)
  return guid_;
}
 void DBPetItem::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:DBPetItem.Guid)
}

// optional int32 PetID = 3;
void DBPetItem::clear_petid() {
  petid_ = 0;
}
 ::google::protobuf::int32 DBPetItem::petid() const {
  // @@protoc_insertion_point(field_get:DBPetItem.PetID)
  return petid_;
}
 void DBPetItem::set_petid(::google::protobuf::int32 value) {
  
  petid_ = value;
  // @@protoc_insertion_point(field_set:DBPetItem.PetID)
}

// optional int32 StrengthLvl = 4;
void DBPetItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
 ::google::protobuf::int32 DBPetItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBPetItem.StrengthLvl)
  return strengthlvl_;
}
 void DBPetItem::set_strengthlvl(::google::protobuf::int32 value) {
  
  strengthlvl_ = value;
  // @@protoc_insertion_point(field_set:DBPetItem.StrengthLvl)
}

// optional int32 RefineLevel = 5;
void DBPetItem::clear_refinelevel() {
  refinelevel_ = 0;
}
 ::google::protobuf::int32 DBPetItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBPetItem.RefineLevel)
  return refinelevel_;
}
 void DBPetItem::set_refinelevel(::google::protobuf::int32 value) {
  
  refinelevel_ = value;
  // @@protoc_insertion_point(field_set:DBPetItem.RefineLevel)
}

// optional int32 StarLevel = 6;
void DBPetItem::clear_starlevel() {
  starlevel_ = 0;
}
 ::google::protobuf::int32 DBPetItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBPetItem.StarLevel)
  return starlevel_;
}
 void DBPetItem::set_starlevel(::google::protobuf::int32 value) {
  
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:DBPetItem.StarLevel)
}

// optional bool IsUsing = 7;
void DBPetItem::clear_isusing() {
  isusing_ = false;
}
 bool DBPetItem::isusing() const {
  // @@protoc_insertion_point(field_get:DBPetItem.IsUsing)
  return isusing_;
}
 void DBPetItem::set_isusing(bool value) {
  
  isusing_ = value;
  // @@protoc_insertion_point(field_set:DBPetItem.IsUsing)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPetData::kPetListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPetData::DBPetData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBPetData)
}

void DBPetData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBPetData::DBPetData(const DBPetData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBPetData)
}

void DBPetData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBPetData::~DBPetData() {
  // @@protoc_insertion_point(destructor:DBPetData)
  SharedDtor();
}

void DBPetData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBPetData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBPetData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBPetData_descriptor_;
}

const DBPetData& DBPetData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBPetData* DBPetData::default_instance_ = NULL;

DBPetData* DBPetData::New(::google::protobuf::Arena* arena) const {
  DBPetData* n = new DBPetData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBPetData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBPetData)
  petlist_.Clear();
}

bool DBPetData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBPetData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBPetItem PetList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_PetList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_petlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_PetList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBPetData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBPetData)
  return false;
#undef DO_
}

void DBPetData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBPetData)
  // repeated .DBPetItem PetList = 1;
  for (unsigned int i = 0, n = this->petlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->petlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBPetData)
}

::google::protobuf::uint8* DBPetData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBPetData)
  // repeated .DBPetItem PetList = 1;
  for (unsigned int i = 0, n = this->petlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->petlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBPetData)
  return target;
}

int DBPetData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBPetData)
  int total_size = 0;

  // repeated .DBPetItem PetList = 1;
  total_size += 1 * this->petlist_size();
  for (int i = 0; i < this->petlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->petlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBPetData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBPetData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBPetData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPetData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBPetData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBPetData)
    MergeFrom(*source);
  }
}

void DBPetData::MergeFrom(const DBPetData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBPetData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  petlist_.MergeFrom(from.petlist_);
}

void DBPetData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBPetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPetData::CopyFrom(const DBPetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBPetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPetData::IsInitialized() const {

  return true;
}

void DBPetData::Swap(DBPetData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPetData::InternalSwap(DBPetData* other) {
  petlist_.UnsafeArenaSwap(&other->petlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBPetData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBPetData_descriptor_;
  metadata.reflection = DBPetData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBPetData

// repeated .DBPetItem PetList = 1;
int DBPetData::petlist_size() const {
  return petlist_.size();
}
void DBPetData::clear_petlist() {
  petlist_.Clear();
}
const ::DBPetItem& DBPetData::petlist(int index) const {
  // @@protoc_insertion_point(field_get:DBPetData.PetList)
  return petlist_.Get(index);
}
::DBPetItem* DBPetData::mutable_petlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBPetData.PetList)
  return petlist_.Mutable(index);
}
::DBPetItem* DBPetData::add_petlist() {
  // @@protoc_insertion_point(field_add:DBPetData.PetList)
  return petlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBPetItem >*
DBPetData::mutable_petlist() {
  // @@protoc_insertion_point(field_mutable_list:DBPetData.PetList)
  return &petlist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBPetItem >&
DBPetData::petlist() const {
  // @@protoc_insertion_point(field_list:DBPetData.PetList)
  return petlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBMountItem::kRoleIDFieldNumber;
const int DBMountItem::kGuidFieldNumber;
const int DBMountItem::kMountIDFieldNumber;
const int DBMountItem::kStrengthLvlFieldNumber;
const int DBMountItem::kRefineLevelFieldNumber;
const int DBMountItem::kStarLevelFieldNumber;
const int DBMountItem::kIsUsingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBMountItem::DBMountItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBMountItem)
}

void DBMountItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBMountItem::DBMountItem(const DBMountItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBMountItem)
}

void DBMountItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  guid_ = GOOGLE_ULONGLONG(0);
  mountid_ = 0;
  strengthlvl_ = 0;
  refinelevel_ = 0;
  starlevel_ = 0;
  isusing_ = false;
}

DBMountItem::~DBMountItem() {
  // @@protoc_insertion_point(destructor:DBMountItem)
  SharedDtor();
}

void DBMountItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBMountItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBMountItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBMountItem_descriptor_;
}

const DBMountItem& DBMountItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBMountItem* DBMountItem::default_instance_ = NULL;

DBMountItem* DBMountItem::New(::google::protobuf::Arena* arena) const {
  DBMountItem* n = new DBMountItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBMountItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBMountItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBMountItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBMountItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, isusing_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBMountItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBMountItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Guid;
        break;
      }

      // optional uint64 Guid = 2;
      case 2: {
        if (tag == 16) {
         parse_Guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MountID;
        break;
      }

      // optional int32 MountID = 3;
      case 3: {
        if (tag == 24) {
         parse_MountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StrengthLvl;
        break;
      }

      // optional int32 StrengthLvl = 4;
      case 4: {
        if (tag == 32) {
         parse_StrengthLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_RefineLevel;
        break;
      }

      // optional int32 RefineLevel = 5;
      case 5: {
        if (tag == 40) {
         parse_RefineLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_StarLevel;
        break;
      }

      // optional int32 StarLevel = 6;
      case 6: {
        if (tag == 48) {
         parse_StarLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_IsUsing;
        break;
      }

      // optional bool IsUsing = 7;
      case 7: {
        if (tag == 56) {
         parse_IsUsing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isusing_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBMountItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBMountItem)
  return false;
#undef DO_
}

void DBMountItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBMountItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int32 MountID = 3;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mountid(), output);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // optional bool IsUsing = 7;
  if (this->isusing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isusing(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBMountItem)
}

::google::protobuf::uint8* DBMountItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBMountItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int32 MountID = 3;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mountid(), target);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // optional bool IsUsing = 7;
  if (this->isusing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isusing(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBMountItem)
  return target;
}

int DBMountItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBMountItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // optional int32 MountID = 3;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mountid());
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // optional bool IsUsing = 7;
  if (this->isusing() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBMountItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBMountItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBMountItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBMountItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBMountItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBMountItem)
    MergeFrom(*source);
  }
}

void DBMountItem::MergeFrom(const DBMountItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBMountItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.isusing() != 0) {
    set_isusing(from.isusing());
  }
}

void DBMountItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBMountItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBMountItem::CopyFrom(const DBMountItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBMountItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBMountItem::IsInitialized() const {

  return true;
}

void DBMountItem::Swap(DBMountItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBMountItem::InternalSwap(DBMountItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(guid_, other->guid_);
  std::swap(mountid_, other->mountid_);
  std::swap(strengthlvl_, other->strengthlvl_);
  std::swap(refinelevel_, other->refinelevel_);
  std::swap(starlevel_, other->starlevel_);
  std::swap(isusing_, other->isusing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBMountItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBMountItem_descriptor_;
  metadata.reflection = DBMountItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBMountItem

// optional uint64 RoleID = 1;
void DBMountItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBMountItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBMountItem.RoleID)
  return roleid_;
}
 void DBMountItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBMountItem.RoleID)
}

// optional uint64 Guid = 2;
void DBMountItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBMountItem::guid() const {
  // @@protoc_insertion_point(field_get:DBMountItem.Guid)
  return guid_;
}
 void DBMountItem::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:DBMountItem.Guid)
}

// optional int32 MountID = 3;
void DBMountItem::clear_mountid() {
  mountid_ = 0;
}
 ::google::protobuf::int32 DBMountItem::mountid() const {
  // @@protoc_insertion_point(field_get:DBMountItem.MountID)
  return mountid_;
}
 void DBMountItem::set_mountid(::google::protobuf::int32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:DBMountItem.MountID)
}

// optional int32 StrengthLvl = 4;
void DBMountItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
 ::google::protobuf::int32 DBMountItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBMountItem.StrengthLvl)
  return strengthlvl_;
}
 void DBMountItem::set_strengthlvl(::google::protobuf::int32 value) {
  
  strengthlvl_ = value;
  // @@protoc_insertion_point(field_set:DBMountItem.StrengthLvl)
}

// optional int32 RefineLevel = 5;
void DBMountItem::clear_refinelevel() {
  refinelevel_ = 0;
}
 ::google::protobuf::int32 DBMountItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBMountItem.RefineLevel)
  return refinelevel_;
}
 void DBMountItem::set_refinelevel(::google::protobuf::int32 value) {
  
  refinelevel_ = value;
  // @@protoc_insertion_point(field_set:DBMountItem.RefineLevel)
}

// optional int32 StarLevel = 6;
void DBMountItem::clear_starlevel() {
  starlevel_ = 0;
}
 ::google::protobuf::int32 DBMountItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBMountItem.StarLevel)
  return starlevel_;
}
 void DBMountItem::set_starlevel(::google::protobuf::int32 value) {
  
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:DBMountItem.StarLevel)
}

// optional bool IsUsing = 7;
void DBMountItem::clear_isusing() {
  isusing_ = false;
}
 bool DBMountItem::isusing() const {
  // @@protoc_insertion_point(field_get:DBMountItem.IsUsing)
  return isusing_;
}
 void DBMountItem::set_isusing(bool value) {
  
  isusing_ = value;
  // @@protoc_insertion_point(field_set:DBMountItem.IsUsing)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBMountData::kMountListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBMountData::DBMountData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBMountData)
}

void DBMountData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBMountData::DBMountData(const DBMountData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBMountData)
}

void DBMountData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBMountData::~DBMountData() {
  // @@protoc_insertion_point(destructor:DBMountData)
  SharedDtor();
}

void DBMountData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBMountData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBMountData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBMountData_descriptor_;
}

const DBMountData& DBMountData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBMountData* DBMountData::default_instance_ = NULL;

DBMountData* DBMountData::New(::google::protobuf::Arena* arena) const {
  DBMountData* n = new DBMountData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBMountData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBMountData)
  mountlist_.Clear();
}

bool DBMountData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBMountData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBMountItem MountList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_MountList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mountlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_MountList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBMountData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBMountData)
  return false;
#undef DO_
}

void DBMountData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBMountData)
  // repeated .DBMountItem MountList = 1;
  for (unsigned int i = 0, n = this->mountlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mountlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBMountData)
}

::google::protobuf::uint8* DBMountData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBMountData)
  // repeated .DBMountItem MountList = 1;
  for (unsigned int i = 0, n = this->mountlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->mountlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBMountData)
  return target;
}

int DBMountData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBMountData)
  int total_size = 0;

  // repeated .DBMountItem MountList = 1;
  total_size += 1 * this->mountlist_size();
  for (int i = 0; i < this->mountlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mountlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBMountData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBMountData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBMountData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBMountData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBMountData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBMountData)
    MergeFrom(*source);
  }
}

void DBMountData::MergeFrom(const DBMountData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBMountData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  mountlist_.MergeFrom(from.mountlist_);
}

void DBMountData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBMountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBMountData::CopyFrom(const DBMountData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBMountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBMountData::IsInitialized() const {

  return true;
}

void DBMountData::Swap(DBMountData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBMountData::InternalSwap(DBMountData* other) {
  mountlist_.UnsafeArenaSwap(&other->mountlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBMountData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBMountData_descriptor_;
  metadata.reflection = DBMountData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBMountData

// repeated .DBMountItem MountList = 1;
int DBMountData::mountlist_size() const {
  return mountlist_.size();
}
void DBMountData::clear_mountlist() {
  mountlist_.Clear();
}
const ::DBMountItem& DBMountData::mountlist(int index) const {
  // @@protoc_insertion_point(field_get:DBMountData.MountList)
  return mountlist_.Get(index);
}
::DBMountItem* DBMountData::mutable_mountlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBMountData.MountList)
  return mountlist_.Mutable(index);
}
::DBMountItem* DBMountData::add_mountlist() {
  // @@protoc_insertion_point(field_add:DBMountData.MountList)
  return mountlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBMountItem >*
DBMountData::mutable_mountlist() {
  // @@protoc_insertion_point(field_mutable_list:DBMountData.MountList)
  return &mountlist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBMountItem >&
DBMountData::mountlist() const {
  // @@protoc_insertion_point(field_list:DBMountData.MountList)
  return mountlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPartnerItem::kRoleIDFieldNumber;
const int DBPartnerItem::kGuidFieldNumber;
const int DBPartnerItem::kPartnerIDFieldNumber;
const int DBPartnerItem::kStrengthLvlFieldNumber;
const int DBPartnerItem::kRefineLevelFieldNumber;
const int DBPartnerItem::kStarLevelFieldNumber;
const int DBPartnerItem::kSetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPartnerItem::DBPartnerItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBPartnerItem)
}

void DBPartnerItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBPartnerItem::DBPartnerItem(const DBPartnerItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBPartnerItem)
}

void DBPartnerItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  guid_ = GOOGLE_ULONGLONG(0);
  partnerid_ = 0;
  strengthlvl_ = 0;
  refinelevel_ = 0;
  starlevel_ = 0;
  setpos_ = 0;
}

DBPartnerItem::~DBPartnerItem() {
  // @@protoc_insertion_point(destructor:DBPartnerItem)
  SharedDtor();
}

void DBPartnerItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBPartnerItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBPartnerItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBPartnerItem_descriptor_;
}

const DBPartnerItem& DBPartnerItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBPartnerItem* DBPartnerItem::default_instance_ = NULL;

DBPartnerItem* DBPartnerItem::New(::google::protobuf::Arena* arena) const {
  DBPartnerItem* n = new DBPartnerItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBPartnerItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBPartnerItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBPartnerItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBPartnerItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, setpos_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBPartnerItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBPartnerItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Guid;
        break;
      }

      // optional uint64 Guid = 2;
      case 2: {
        if (tag == 16) {
         parse_Guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PartnerID;
        break;
      }

      // optional int32 PartnerID = 3;
      case 3: {
        if (tag == 24) {
         parse_PartnerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partnerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_StrengthLvl;
        break;
      }

      // optional int32 StrengthLvl = 4;
      case 4: {
        if (tag == 32) {
         parse_StrengthLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthlvl_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_RefineLevel;
        break;
      }

      // optional int32 RefineLevel = 5;
      case 5: {
        if (tag == 40) {
         parse_RefineLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refinelevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_StarLevel;
        break;
      }

      // optional int32 StarLevel = 6;
      case 6: {
        if (tag == 48) {
         parse_StarLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &starlevel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_SetPos;
        break;
      }

      // optional int32 SetPos = 7;
      case 7: {
        if (tag == 56) {
         parse_SetPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &setpos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBPartnerItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBPartnerItem)
  return false;
#undef DO_
}

void DBPartnerItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBPartnerItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int32 PartnerID = 3;
  if (this->partnerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->partnerid(), output);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->strengthlvl(), output);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refinelevel(), output);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->starlevel(), output);
  }

  // optional int32 SetPos = 7;
  if (this->setpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->setpos(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBPartnerItem)
}

::google::protobuf::uint8* DBPartnerItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBPartnerItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int32 PartnerID = 3;
  if (this->partnerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->partnerid(), target);
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->strengthlvl(), target);
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refinelevel(), target);
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->starlevel(), target);
  }

  // optional int32 SetPos = 7;
  if (this->setpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->setpos(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBPartnerItem)
  return target;
}

int DBPartnerItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBPartnerItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // optional int32 PartnerID = 3;
  if (this->partnerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->partnerid());
  }

  // optional int32 StrengthLvl = 4;
  if (this->strengthlvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->strengthlvl());
  }

  // optional int32 RefineLevel = 5;
  if (this->refinelevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refinelevel());
  }

  // optional int32 StarLevel = 6;
  if (this->starlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->starlevel());
  }

  // optional int32 SetPos = 7;
  if (this->setpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->setpos());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBPartnerItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBPartnerItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBPartnerItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPartnerItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBPartnerItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBPartnerItem)
    MergeFrom(*source);
  }
}

void DBPartnerItem::MergeFrom(const DBPartnerItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBPartnerItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.partnerid() != 0) {
    set_partnerid(from.partnerid());
  }
  if (from.strengthlvl() != 0) {
    set_strengthlvl(from.strengthlvl());
  }
  if (from.refinelevel() != 0) {
    set_refinelevel(from.refinelevel());
  }
  if (from.starlevel() != 0) {
    set_starlevel(from.starlevel());
  }
  if (from.setpos() != 0) {
    set_setpos(from.setpos());
  }
}

void DBPartnerItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBPartnerItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPartnerItem::CopyFrom(const DBPartnerItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBPartnerItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPartnerItem::IsInitialized() const {

  return true;
}

void DBPartnerItem::Swap(DBPartnerItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPartnerItem::InternalSwap(DBPartnerItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(guid_, other->guid_);
  std::swap(partnerid_, other->partnerid_);
  std::swap(strengthlvl_, other->strengthlvl_);
  std::swap(refinelevel_, other->refinelevel_);
  std::swap(starlevel_, other->starlevel_);
  std::swap(setpos_, other->setpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBPartnerItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBPartnerItem_descriptor_;
  metadata.reflection = DBPartnerItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBPartnerItem

// optional uint64 RoleID = 1;
void DBPartnerItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBPartnerItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.RoleID)
  return roleid_;
}
 void DBPartnerItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBPartnerItem.RoleID)
}

// optional uint64 Guid = 2;
void DBPartnerItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBPartnerItem::guid() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.Guid)
  return guid_;
}
 void DBPartnerItem::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:DBPartnerItem.Guid)
}

// optional int32 PartnerID = 3;
void DBPartnerItem::clear_partnerid() {
  partnerid_ = 0;
}
 ::google::protobuf::int32 DBPartnerItem::partnerid() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.PartnerID)
  return partnerid_;
}
 void DBPartnerItem::set_partnerid(::google::protobuf::int32 value) {
  
  partnerid_ = value;
  // @@protoc_insertion_point(field_set:DBPartnerItem.PartnerID)
}

// optional int32 StrengthLvl = 4;
void DBPartnerItem::clear_strengthlvl() {
  strengthlvl_ = 0;
}
 ::google::protobuf::int32 DBPartnerItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.StrengthLvl)
  return strengthlvl_;
}
 void DBPartnerItem::set_strengthlvl(::google::protobuf::int32 value) {
  
  strengthlvl_ = value;
  // @@protoc_insertion_point(field_set:DBPartnerItem.StrengthLvl)
}

// optional int32 RefineLevel = 5;
void DBPartnerItem::clear_refinelevel() {
  refinelevel_ = 0;
}
 ::google::protobuf::int32 DBPartnerItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.RefineLevel)
  return refinelevel_;
}
 void DBPartnerItem::set_refinelevel(::google::protobuf::int32 value) {
  
  refinelevel_ = value;
  // @@protoc_insertion_point(field_set:DBPartnerItem.RefineLevel)
}

// optional int32 StarLevel = 6;
void DBPartnerItem::clear_starlevel() {
  starlevel_ = 0;
}
 ::google::protobuf::int32 DBPartnerItem::starlevel() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.StarLevel)
  return starlevel_;
}
 void DBPartnerItem::set_starlevel(::google::protobuf::int32 value) {
  
  starlevel_ = value;
  // @@protoc_insertion_point(field_set:DBPartnerItem.StarLevel)
}

// optional int32 SetPos = 7;
void DBPartnerItem::clear_setpos() {
  setpos_ = 0;
}
 ::google::protobuf::int32 DBPartnerItem::setpos() const {
  // @@protoc_insertion_point(field_get:DBPartnerItem.SetPos)
  return setpos_;
}
 void DBPartnerItem::set_setpos(::google::protobuf::int32 value) {
  
  setpos_ = value;
  // @@protoc_insertion_point(field_set:DBPartnerItem.SetPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBPartnerData::kPartnerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBPartnerData::DBPartnerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBPartnerData)
}

void DBPartnerData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBPartnerData::DBPartnerData(const DBPartnerData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBPartnerData)
}

void DBPartnerData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBPartnerData::~DBPartnerData() {
  // @@protoc_insertion_point(destructor:DBPartnerData)
  SharedDtor();
}

void DBPartnerData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBPartnerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBPartnerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBPartnerData_descriptor_;
}

const DBPartnerData& DBPartnerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBPartnerData* DBPartnerData::default_instance_ = NULL;

DBPartnerData* DBPartnerData::New(::google::protobuf::Arena* arena) const {
  DBPartnerData* n = new DBPartnerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBPartnerData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBPartnerData)
  partnerlist_.Clear();
}

bool DBPartnerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBPartnerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBPartnerItem PartnerList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_PartnerList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_partnerlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_PartnerList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBPartnerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBPartnerData)
  return false;
#undef DO_
}

void DBPartnerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBPartnerData)
  // repeated .DBPartnerItem PartnerList = 1;
  for (unsigned int i = 0, n = this->partnerlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->partnerlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBPartnerData)
}

::google::protobuf::uint8* DBPartnerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBPartnerData)
  // repeated .DBPartnerItem PartnerList = 1;
  for (unsigned int i = 0, n = this->partnerlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->partnerlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBPartnerData)
  return target;
}

int DBPartnerData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBPartnerData)
  int total_size = 0;

  // repeated .DBPartnerItem PartnerList = 1;
  total_size += 1 * this->partnerlist_size();
  for (int i = 0; i < this->partnerlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->partnerlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBPartnerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBPartnerData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBPartnerData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBPartnerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBPartnerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBPartnerData)
    MergeFrom(*source);
  }
}

void DBPartnerData::MergeFrom(const DBPartnerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBPartnerData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  partnerlist_.MergeFrom(from.partnerlist_);
}

void DBPartnerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBPartnerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBPartnerData::CopyFrom(const DBPartnerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBPartnerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBPartnerData::IsInitialized() const {

  return true;
}

void DBPartnerData::Swap(DBPartnerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBPartnerData::InternalSwap(DBPartnerData* other) {
  partnerlist_.UnsafeArenaSwap(&other->partnerlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBPartnerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBPartnerData_descriptor_;
  metadata.reflection = DBPartnerData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBPartnerData

// repeated .DBPartnerItem PartnerList = 1;
int DBPartnerData::partnerlist_size() const {
  return partnerlist_.size();
}
void DBPartnerData::clear_partnerlist() {
  partnerlist_.Clear();
}
const ::DBPartnerItem& DBPartnerData::partnerlist(int index) const {
  // @@protoc_insertion_point(field_get:DBPartnerData.PartnerList)
  return partnerlist_.Get(index);
}
::DBPartnerItem* DBPartnerData::mutable_partnerlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBPartnerData.PartnerList)
  return partnerlist_.Mutable(index);
}
::DBPartnerItem* DBPartnerData::add_partnerlist() {
  // @@protoc_insertion_point(field_add:DBPartnerData.PartnerList)
  return partnerlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBPartnerItem >*
DBPartnerData::mutable_partnerlist() {
  // @@protoc_insertion_point(field_mutable_list:DBPartnerData.PartnerList)
  return &partnerlist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBPartnerItem >&
DBPartnerData::partnerlist() const {
  // @@protoc_insertion_point(field_list:DBPartnerData.PartnerList)
  return partnerlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBTaskItem::kRoleIDFieldNumber;
const int DBTaskItem::kTaskIDFieldNumber;
const int DBTaskItem::kStatusFieldNumber;
const int DBTaskItem::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBTaskItem::DBTaskItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBTaskItem)
}

void DBTaskItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBTaskItem::DBTaskItem(const DBTaskItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBTaskItem)
}

void DBTaskItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  taskid_ = 0u;
  status_ = 0;
  progress_ = 0;
}

DBTaskItem::~DBTaskItem() {
  // @@protoc_insertion_point(destructor:DBTaskItem)
  SharedDtor();
}

void DBTaskItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBTaskItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBTaskItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBTaskItem_descriptor_;
}

const DBTaskItem& DBTaskItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBTaskItem* DBTaskItem::default_instance_ = NULL;

DBTaskItem* DBTaskItem::New(::google::protobuf::Arena* arena) const {
  DBTaskItem* n = new DBTaskItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBTaskItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBTaskItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBTaskItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBTaskItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, progress_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBTaskItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBTaskItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TaskID;
        break;
      }

      // optional uint32 TaskID = 2;
      case 2: {
        if (tag == 16) {
         parse_TaskID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taskid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Status;
        break;
      }

      // optional int32 Status = 3;
      case 3: {
        if (tag == 24) {
         parse_Status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Progress;
        break;
      }

      // optional int32 Progress = 4;
      case 4: {
        if (tag == 32) {
         parse_Progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &progress_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBTaskItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBTaskItem)
  return false;
#undef DO_
}

void DBTaskItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBTaskItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint32 TaskID = 2;
  if (this->taskid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->taskid(), output);
  }

  // optional int32 Status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // optional int32 Progress = 4;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->progress(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBTaskItem)
}

::google::protobuf::uint8* DBTaskItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBTaskItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint32 TaskID = 2;
  if (this->taskid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->taskid(), target);
  }

  // optional int32 Status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // optional int32 Progress = 4;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->progress(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBTaskItem)
  return target;
}

int DBTaskItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBTaskItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint32 TaskID = 2;
  if (this->taskid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->taskid());
  }

  // optional int32 Status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // optional int32 Progress = 4;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->progress());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBTaskItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBTaskItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBTaskItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBTaskItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBTaskItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBTaskItem)
    MergeFrom(*source);
  }
}

void DBTaskItem::MergeFrom(const DBTaskItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBTaskItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.taskid() != 0) {
    set_taskid(from.taskid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void DBTaskItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBTaskItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBTaskItem::CopyFrom(const DBTaskItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBTaskItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBTaskItem::IsInitialized() const {

  return true;
}

void DBTaskItem::Swap(DBTaskItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBTaskItem::InternalSwap(DBTaskItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(taskid_, other->taskid_);
  std::swap(status_, other->status_);
  std::swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBTaskItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBTaskItem_descriptor_;
  metadata.reflection = DBTaskItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBTaskItem

// optional uint64 RoleID = 1;
void DBTaskItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBTaskItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.RoleID)
  return roleid_;
}
 void DBTaskItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBTaskItem.RoleID)
}

// optional uint32 TaskID = 2;
void DBTaskItem::clear_taskid() {
  taskid_ = 0u;
}
 ::google::protobuf::uint32 DBTaskItem::taskid() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.TaskID)
  return taskid_;
}
 void DBTaskItem::set_taskid(::google::protobuf::uint32 value) {
  
  taskid_ = value;
  // @@protoc_insertion_point(field_set:DBTaskItem.TaskID)
}

// optional int32 Status = 3;
void DBTaskItem::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 DBTaskItem::status() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.Status)
  return status_;
}
 void DBTaskItem::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:DBTaskItem.Status)
}

// optional int32 Progress = 4;
void DBTaskItem::clear_progress() {
  progress_ = 0;
}
 ::google::protobuf::int32 DBTaskItem::progress() const {
  // @@protoc_insertion_point(field_get:DBTaskItem.Progress)
  return progress_;
}
 void DBTaskItem::set_progress(::google::protobuf::int32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:DBTaskItem.Progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBTaskData::kTaskListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBTaskData::DBTaskData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBTaskData)
}

void DBTaskData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBTaskData::DBTaskData(const DBTaskData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBTaskData)
}

void DBTaskData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBTaskData::~DBTaskData() {
  // @@protoc_insertion_point(destructor:DBTaskData)
  SharedDtor();
}

void DBTaskData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBTaskData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBTaskData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBTaskData_descriptor_;
}

const DBTaskData& DBTaskData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBTaskData* DBTaskData::default_instance_ = NULL;

DBTaskData* DBTaskData::New(::google::protobuf::Arena* arena) const {
  DBTaskData* n = new DBTaskData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBTaskData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBTaskData)
  tasklist_.Clear();
}

bool DBTaskData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBTaskData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBTaskItem TaskList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_TaskList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tasklist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_TaskList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBTaskData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBTaskData)
  return false;
#undef DO_
}

void DBTaskData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBTaskData)
  // repeated .DBTaskItem TaskList = 1;
  for (unsigned int i = 0, n = this->tasklist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tasklist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBTaskData)
}

::google::protobuf::uint8* DBTaskData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBTaskData)
  // repeated .DBTaskItem TaskList = 1;
  for (unsigned int i = 0, n = this->tasklist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->tasklist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBTaskData)
  return target;
}

int DBTaskData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBTaskData)
  int total_size = 0;

  // repeated .DBTaskItem TaskList = 1;
  total_size += 1 * this->tasklist_size();
  for (int i = 0; i < this->tasklist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tasklist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBTaskData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBTaskData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBTaskData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBTaskData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBTaskData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBTaskData)
    MergeFrom(*source);
  }
}

void DBTaskData::MergeFrom(const DBTaskData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBTaskData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  tasklist_.MergeFrom(from.tasklist_);
}

void DBTaskData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBTaskData::CopyFrom(const DBTaskData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBTaskData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBTaskData::IsInitialized() const {

  return true;
}

void DBTaskData::Swap(DBTaskData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBTaskData::InternalSwap(DBTaskData* other) {
  tasklist_.UnsafeArenaSwap(&other->tasklist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBTaskData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBTaskData_descriptor_;
  metadata.reflection = DBTaskData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBTaskData

// repeated .DBTaskItem TaskList = 1;
int DBTaskData::tasklist_size() const {
  return tasklist_.size();
}
void DBTaskData::clear_tasklist() {
  tasklist_.Clear();
}
const ::DBTaskItem& DBTaskData::tasklist(int index) const {
  // @@protoc_insertion_point(field_get:DBTaskData.TaskList)
  return tasklist_.Get(index);
}
::DBTaskItem* DBTaskData::mutable_tasklist(int index) {
  // @@protoc_insertion_point(field_mutable:DBTaskData.TaskList)
  return tasklist_.Mutable(index);
}
::DBTaskItem* DBTaskData::add_tasklist() {
  // @@protoc_insertion_point(field_add:DBTaskData.TaskList)
  return tasklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBTaskItem >*
DBTaskData::mutable_tasklist() {
  // @@protoc_insertion_point(field_mutable_list:DBTaskData.TaskList)
  return &tasklist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBTaskItem >&
DBTaskData::tasklist() const {
  // @@protoc_insertion_point(field_list:DBTaskData.TaskList)
  return tasklist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBMailItem::kRoleIDFieldNumber;
const int DBMailItem::kGuidFieldNumber;
const int DBMailItem::kGroupIDFieldNumber;
const int DBMailItem::kTimeFieldNumber;
const int DBMailItem::kSenderIDFieldNumber;
const int DBMailItem::kSenderFieldNumber;
const int DBMailItem::kTitleFieldNumber;
const int DBMailItem::kContentFieldNumber;
const int DBMailItem::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBMailItem::DBMailItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBMailItem)
}

void DBMailItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBMailItem::DBMailItem(const DBMailItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBMailItem)
}

void DBMailItem::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  guid_ = GOOGLE_ULONGLONG(0);
  groupid_ = 0;
  time_ = GOOGLE_ULONGLONG(0);
  senderid_ = GOOGLE_ULONGLONG(0);
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DBMailItem::~DBMailItem() {
  // @@protoc_insertion_point(destructor:DBMailItem)
  SharedDtor();
}

void DBMailItem::SharedDtor() {
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DBMailItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBMailItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBMailItem_descriptor_;
}

const DBMailItem& DBMailItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBMailItem* DBMailItem::default_instance_ = NULL;

DBMailItem* DBMailItem::New(::google::protobuf::Arena* arena) const {
  DBMailItem* n = new DBMailItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBMailItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBMailItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBMailItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBMailItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, senderid_);
  groupid_ = 0;
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  items_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool DBMailItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBMailItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Guid;
        break;
      }

      // optional uint64 Guid = 2;
      case 2: {
        if (tag == 16) {
         parse_Guid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_GroupID;
        break;
      }

      // optional int32 GroupID = 3;
      case 3: {
        if (tag == 24) {
         parse_GroupID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &groupid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Time;
        break;
      }

      // optional uint64 Time = 4;
      case 4: {
        if (tag == 32) {
         parse_Time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SenderID;
        break;
      }

      // optional uint64 SenderID = 5;
      case 5: {
        if (tag == 40) {
         parse_SenderID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &senderid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Sender;
        break;
      }

      // optional string Sender = 6;
      case 6: {
        if (tag == 50) {
         parse_Sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBMailItem.Sender"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Title;
        break;
      }

      // optional string Title = 7;
      case 7: {
        if (tag == 58) {
         parse_Title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBMailItem.Title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Content;
        break;
      }

      // optional string Content = 8;
      case 8: {
        if (tag == 66) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBMailItem.Content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Items;
        break;
      }

      // optional bytes Items = 9;
      case 9: {
        if (tag == 74) {
         parse_Items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBMailItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBMailItem)
  return false;
#undef DO_
}

void DBMailItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBMailItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // optional int32 GroupID = 3;
  if (this->groupid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->groupid(), output);
  }

  // optional uint64 Time = 4;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->time(), output);
  }

  // optional uint64 SenderID = 5;
  if (this->senderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->senderid(), output);
  }

  // optional string Sender = 6;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sender(), output);
  }

  // optional string Title = 7;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->title(), output);
  }

  // optional string Content = 8;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->content(), output);
  }

  // optional bytes Items = 9;
  if (this->items().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->items(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBMailItem)
}

::google::protobuf::uint8* DBMailItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBMailItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // optional int32 GroupID = 3;
  if (this->groupid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->groupid(), target);
  }

  // optional uint64 Time = 4;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->time(), target);
  }

  // optional uint64 SenderID = 5;
  if (this->senderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->senderid(), target);
  }

  // optional string Sender = 6;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sender(), target);
  }

  // optional string Title = 7;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->title(), target);
  }

  // optional string Content = 8;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBMailItem.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->content(), target);
  }

  // optional bytes Items = 9;
  if (this->items().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->items(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBMailItem)
  return target;
}

int DBMailItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBMailItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 Guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // optional int32 GroupID = 3;
  if (this->groupid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->groupid());
  }

  // optional uint64 Time = 4;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  // optional uint64 SenderID = 5;
  if (this->senderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->senderid());
  }

  // optional string Sender = 6;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // optional string Title = 7;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // optional string Content = 8;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // optional bytes Items = 9;
  if (this->items().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->items());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBMailItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBMailItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBMailItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBMailItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBMailItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBMailItem)
    MergeFrom(*source);
  }
}

void DBMailItem::MergeFrom(const DBMailItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBMailItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.groupid() != 0) {
    set_groupid(from.groupid());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.senderid() != 0) {
    set_senderid(from.senderid());
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.items().size() > 0) {

    items_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.items_);
  }
}

void DBMailItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBMailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBMailItem::CopyFrom(const DBMailItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBMailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBMailItem::IsInitialized() const {

  return true;
}

void DBMailItem::Swap(DBMailItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBMailItem::InternalSwap(DBMailItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(guid_, other->guid_);
  std::swap(groupid_, other->groupid_);
  std::swap(time_, other->time_);
  std::swap(senderid_, other->senderid_);
  sender_.Swap(&other->sender_);
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  items_.Swap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBMailItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBMailItem_descriptor_;
  metadata.reflection = DBMailItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBMailItem

// optional uint64 RoleID = 1;
void DBMailItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBMailItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBMailItem.RoleID)
  return roleid_;
}
 void DBMailItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBMailItem.RoleID)
}

// optional uint64 Guid = 2;
void DBMailItem::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBMailItem::guid() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Guid)
  return guid_;
}
 void DBMailItem::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:DBMailItem.Guid)
}

// optional int32 GroupID = 3;
void DBMailItem::clear_groupid() {
  groupid_ = 0;
}
 ::google::protobuf::int32 DBMailItem::groupid() const {
  // @@protoc_insertion_point(field_get:DBMailItem.GroupID)
  return groupid_;
}
 void DBMailItem::set_groupid(::google::protobuf::int32 value) {
  
  groupid_ = value;
  // @@protoc_insertion_point(field_set:DBMailItem.GroupID)
}

// optional uint64 Time = 4;
void DBMailItem::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBMailItem::time() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Time)
  return time_;
}
 void DBMailItem::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:DBMailItem.Time)
}

// optional uint64 SenderID = 5;
void DBMailItem::clear_senderid() {
  senderid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBMailItem::senderid() const {
  // @@protoc_insertion_point(field_get:DBMailItem.SenderID)
  return senderid_;
}
 void DBMailItem::set_senderid(::google::protobuf::uint64 value) {
  
  senderid_ = value;
  // @@protoc_insertion_point(field_set:DBMailItem.SenderID)
}

// optional string Sender = 6;
void DBMailItem::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DBMailItem::sender() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBMailItem::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBMailItem.Sender)
}
 void DBMailItem::set_sender(const char* value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBMailItem.Sender)
}
 void DBMailItem::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBMailItem.Sender)
}
 ::std::string* DBMailItem::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:DBMailItem.Sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBMailItem::release_sender() {
  // @@protoc_insertion_point(field_release:DBMailItem.Sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBMailItem::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.Sender)
}

// optional string Title = 7;
void DBMailItem::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DBMailItem::title() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBMailItem::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBMailItem.Title)
}
 void DBMailItem::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBMailItem.Title)
}
 void DBMailItem::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBMailItem.Title)
}
 ::std::string* DBMailItem::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:DBMailItem.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBMailItem::release_title() {
  // @@protoc_insertion_point(field_release:DBMailItem.Title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBMailItem::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.Title)
}

// optional string Content = 8;
void DBMailItem::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DBMailItem::content() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBMailItem::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBMailItem.Content)
}
 void DBMailItem::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBMailItem.Content)
}
 void DBMailItem::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBMailItem.Content)
}
 ::std::string* DBMailItem::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:DBMailItem.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBMailItem::release_content() {
  // @@protoc_insertion_point(field_release:DBMailItem.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBMailItem::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.Content)
}

// optional bytes Items = 9;
void DBMailItem::clear_items() {
  items_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DBMailItem::items() const {
  // @@protoc_insertion_point(field_get:DBMailItem.Items)
  return items_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBMailItem::set_items(const ::std::string& value) {
  
  items_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBMailItem.Items)
}
 void DBMailItem::set_items(const char* value) {
  
  items_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBMailItem.Items)
}
 void DBMailItem::set_items(const void* value, size_t size) {
  
  items_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBMailItem.Items)
}
 ::std::string* DBMailItem::mutable_items() {
  
  // @@protoc_insertion_point(field_mutable:DBMailItem.Items)
  return items_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBMailItem::release_items() {
  // @@protoc_insertion_point(field_release:DBMailItem.Items)
  
  return items_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBMailItem::set_allocated_items(::std::string* items) {
  if (items != NULL) {
    
  } else {
    
  }
  items_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), items);
  // @@protoc_insertion_point(field_set_allocated:DBMailItem.Items)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBMailData::kMailListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBMailData::DBMailData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBMailData)
}

void DBMailData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBMailData::DBMailData(const DBMailData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBMailData)
}

void DBMailData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBMailData::~DBMailData() {
  // @@protoc_insertion_point(destructor:DBMailData)
  SharedDtor();
}

void DBMailData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBMailData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBMailData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBMailData_descriptor_;
}

const DBMailData& DBMailData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBMailData* DBMailData::default_instance_ = NULL;

DBMailData* DBMailData::New(::google::protobuf::Arena* arena) const {
  DBMailData* n = new DBMailData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBMailData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBMailData)
  maillist_.Clear();
}

bool DBMailData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBMailData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBMailItem MailList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_MailList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_maillist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_MailList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBMailData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBMailData)
  return false;
#undef DO_
}

void DBMailData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBMailData)
  // repeated .DBMailItem MailList = 1;
  for (unsigned int i = 0, n = this->maillist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->maillist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBMailData)
}

::google::protobuf::uint8* DBMailData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBMailData)
  // repeated .DBMailItem MailList = 1;
  for (unsigned int i = 0, n = this->maillist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->maillist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBMailData)
  return target;
}

int DBMailData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBMailData)
  int total_size = 0;

  // repeated .DBMailItem MailList = 1;
  total_size += 1 * this->maillist_size();
  for (int i = 0; i < this->maillist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maillist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBMailData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBMailData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBMailData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBMailData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBMailData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBMailData)
    MergeFrom(*source);
  }
}

void DBMailData::MergeFrom(const DBMailData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBMailData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  maillist_.MergeFrom(from.maillist_);
}

void DBMailData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBMailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBMailData::CopyFrom(const DBMailData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBMailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBMailData::IsInitialized() const {

  return true;
}

void DBMailData::Swap(DBMailData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBMailData::InternalSwap(DBMailData* other) {
  maillist_.UnsafeArenaSwap(&other->maillist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBMailData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBMailData_descriptor_;
  metadata.reflection = DBMailData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBMailData

// repeated .DBMailItem MailList = 1;
int DBMailData::maillist_size() const {
  return maillist_.size();
}
void DBMailData::clear_maillist() {
  maillist_.Clear();
}
const ::DBMailItem& DBMailData::maillist(int index) const {
  // @@protoc_insertion_point(field_get:DBMailData.MailList)
  return maillist_.Get(index);
}
::DBMailItem* DBMailData::mutable_maillist(int index) {
  // @@protoc_insertion_point(field_mutable:DBMailData.MailList)
  return maillist_.Mutable(index);
}
::DBMailItem* DBMailData::add_maillist() {
  // @@protoc_insertion_point(field_add:DBMailData.MailList)
  return maillist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBMailItem >*
DBMailData::mutable_maillist() {
  // @@protoc_insertion_point(field_mutable_list:DBMailData.MailList)
  return &maillist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBMailItem >&
DBMailData::maillist() const {
  // @@protoc_insertion_point(field_list:DBMailData.MailList)
  return maillist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBActivityItem::kRoleIDFieldNumber;
const int DBActivityItem::kActivityIDFieldNumber;
const int DBActivityItem::kActivityTypeFieldNumber;
const int DBActivityItem::kJoinTimeFieldNumber;
const int DBActivityItem::kDataLenFieldNumber;
const int DBActivityItem::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBActivityItem::DBActivityItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBActivityItem)
}

void DBActivityItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBActivityItem::DBActivityItem(const DBActivityItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBActivityItem)
}

void DBActivityItem::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  activityid_ = 0u;
  activitytype_ = 0u;
  jointime_ = 0u;
  datalen_ = 0u;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DBActivityItem::~DBActivityItem() {
  // @@protoc_insertion_point(destructor:DBActivityItem)
  SharedDtor();
}

void DBActivityItem::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DBActivityItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBActivityItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBActivityItem_descriptor_;
}

const DBActivityItem& DBActivityItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBActivityItem* DBActivityItem::default_instance_ = NULL;

DBActivityItem* DBActivityItem::New(::google::protobuf::Arena* arena) const {
  DBActivityItem* n = new DBActivityItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBActivityItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBActivityItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBActivityItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBActivityItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, datalen_);
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool DBActivityItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBActivityItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ActivityID;
        break;
      }

      // optional uint32 ActivityID = 2;
      case 2: {
        if (tag == 16) {
         parse_ActivityID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activityid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ActivityType;
        break;
      }

      // optional uint32 ActivityType = 3;
      case 3: {
        if (tag == 24) {
         parse_ActivityType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &activitytype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_JoinTime;
        break;
      }

      // optional uint32 JoinTime = 4;
      case 4: {
        if (tag == 32) {
         parse_JoinTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &jointime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_DataLen;
        break;
      }

      // optional uint32 DataLen = 5;
      case 5: {
        if (tag == 40) {
         parse_DataLen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &datalen_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Data;
        break;
      }

      // optional bytes Data = 6;
      case 6: {
        if (tag == 50) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBActivityItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBActivityItem)
  return false;
#undef DO_
}

void DBActivityItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBActivityItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint32 ActivityID = 2;
  if (this->activityid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->activityid(), output);
  }

  // optional uint32 ActivityType = 3;
  if (this->activitytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->activitytype(), output);
  }

  // optional uint32 JoinTime = 4;
  if (this->jointime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->jointime(), output);
  }

  // optional uint32 DataLen = 5;
  if (this->datalen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->datalen(), output);
  }

  // optional bytes Data = 6;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBActivityItem)
}

::google::protobuf::uint8* DBActivityItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBActivityItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint32 ActivityID = 2;
  if (this->activityid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->activityid(), target);
  }

  // optional uint32 ActivityType = 3;
  if (this->activitytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->activitytype(), target);
  }

  // optional uint32 JoinTime = 4;
  if (this->jointime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->jointime(), target);
  }

  // optional uint32 DataLen = 5;
  if (this->datalen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->datalen(), target);
  }

  // optional bytes Data = 6;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBActivityItem)
  return target;
}

int DBActivityItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBActivityItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint32 ActivityID = 2;
  if (this->activityid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activityid());
  }

  // optional uint32 ActivityType = 3;
  if (this->activitytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->activitytype());
  }

  // optional uint32 JoinTime = 4;
  if (this->jointime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->jointime());
  }

  // optional uint32 DataLen = 5;
  if (this->datalen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->datalen());
  }

  // optional bytes Data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBActivityItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBActivityItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBActivityItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBActivityItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBActivityItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBActivityItem)
    MergeFrom(*source);
  }
}

void DBActivityItem::MergeFrom(const DBActivityItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBActivityItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.activityid() != 0) {
    set_activityid(from.activityid());
  }
  if (from.activitytype() != 0) {
    set_activitytype(from.activitytype());
  }
  if (from.jointime() != 0) {
    set_jointime(from.jointime());
  }
  if (from.datalen() != 0) {
    set_datalen(from.datalen());
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void DBActivityItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBActivityItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBActivityItem::CopyFrom(const DBActivityItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBActivityItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBActivityItem::IsInitialized() const {

  return true;
}

void DBActivityItem::Swap(DBActivityItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBActivityItem::InternalSwap(DBActivityItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(activityid_, other->activityid_);
  std::swap(activitytype_, other->activitytype_);
  std::swap(jointime_, other->jointime_);
  std::swap(datalen_, other->datalen_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBActivityItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBActivityItem_descriptor_;
  metadata.reflection = DBActivityItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBActivityItem

// optional uint64 RoleID = 1;
void DBActivityItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBActivityItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.RoleID)
  return roleid_;
}
 void DBActivityItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBActivityItem.RoleID)
}

// optional uint32 ActivityID = 2;
void DBActivityItem::clear_activityid() {
  activityid_ = 0u;
}
 ::google::protobuf::uint32 DBActivityItem::activityid() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.ActivityID)
  return activityid_;
}
 void DBActivityItem::set_activityid(::google::protobuf::uint32 value) {
  
  activityid_ = value;
  // @@protoc_insertion_point(field_set:DBActivityItem.ActivityID)
}

// optional uint32 ActivityType = 3;
void DBActivityItem::clear_activitytype() {
  activitytype_ = 0u;
}
 ::google::protobuf::uint32 DBActivityItem::activitytype() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.ActivityType)
  return activitytype_;
}
 void DBActivityItem::set_activitytype(::google::protobuf::uint32 value) {
  
  activitytype_ = value;
  // @@protoc_insertion_point(field_set:DBActivityItem.ActivityType)
}

// optional uint32 JoinTime = 4;
void DBActivityItem::clear_jointime() {
  jointime_ = 0u;
}
 ::google::protobuf::uint32 DBActivityItem::jointime() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.JoinTime)
  return jointime_;
}
 void DBActivityItem::set_jointime(::google::protobuf::uint32 value) {
  
  jointime_ = value;
  // @@protoc_insertion_point(field_set:DBActivityItem.JoinTime)
}

// optional uint32 DataLen = 5;
void DBActivityItem::clear_datalen() {
  datalen_ = 0u;
}
 ::google::protobuf::uint32 DBActivityItem::datalen() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.DataLen)
  return datalen_;
}
 void DBActivityItem::set_datalen(::google::protobuf::uint32 value) {
  
  datalen_ = value;
  // @@protoc_insertion_point(field_set:DBActivityItem.DataLen)
}

// optional bytes Data = 6;
void DBActivityItem::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& DBActivityItem::data() const {
  // @@protoc_insertion_point(field_get:DBActivityItem.Data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBActivityItem::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DBActivityItem.Data)
}
 void DBActivityItem::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DBActivityItem.Data)
}
 void DBActivityItem::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DBActivityItem.Data)
}
 ::std::string* DBActivityItem::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:DBActivityItem.Data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DBActivityItem::release_data() {
  // @@protoc_insertion_point(field_release:DBActivityItem.Data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DBActivityItem::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:DBActivityItem.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBActivityData::kActivityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBActivityData::DBActivityData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBActivityData)
}

void DBActivityData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBActivityData::DBActivityData(const DBActivityData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBActivityData)
}

void DBActivityData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBActivityData::~DBActivityData() {
  // @@protoc_insertion_point(destructor:DBActivityData)
  SharedDtor();
}

void DBActivityData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBActivityData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBActivityData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBActivityData_descriptor_;
}

const DBActivityData& DBActivityData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBActivityData* DBActivityData::default_instance_ = NULL;

DBActivityData* DBActivityData::New(::google::protobuf::Arena* arena) const {
  DBActivityData* n = new DBActivityData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBActivityData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBActivityData)
  activitylist_.Clear();
}

bool DBActivityData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBActivityData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBActivityItem ActivityList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ActivityList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_activitylist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ActivityList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBActivityData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBActivityData)
  return false;
#undef DO_
}

void DBActivityData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBActivityData)
  // repeated .DBActivityItem ActivityList = 1;
  for (unsigned int i = 0, n = this->activitylist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activitylist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBActivityData)
}

::google::protobuf::uint8* DBActivityData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBActivityData)
  // repeated .DBActivityItem ActivityList = 1;
  for (unsigned int i = 0, n = this->activitylist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->activitylist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBActivityData)
  return target;
}

int DBActivityData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBActivityData)
  int total_size = 0;

  // repeated .DBActivityItem ActivityList = 1;
  total_size += 1 * this->activitylist_size();
  for (int i = 0; i < this->activitylist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activitylist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBActivityData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBActivityData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBActivityData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBActivityData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBActivityData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBActivityData)
    MergeFrom(*source);
  }
}

void DBActivityData::MergeFrom(const DBActivityData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBActivityData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  activitylist_.MergeFrom(from.activitylist_);
}

void DBActivityData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBActivityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBActivityData::CopyFrom(const DBActivityData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBActivityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBActivityData::IsInitialized() const {

  return true;
}

void DBActivityData::Swap(DBActivityData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBActivityData::InternalSwap(DBActivityData* other) {
  activitylist_.UnsafeArenaSwap(&other->activitylist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBActivityData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBActivityData_descriptor_;
  metadata.reflection = DBActivityData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBActivityData

// repeated .DBActivityItem ActivityList = 1;
int DBActivityData::activitylist_size() const {
  return activitylist_.size();
}
void DBActivityData::clear_activitylist() {
  activitylist_.Clear();
}
const ::DBActivityItem& DBActivityData::activitylist(int index) const {
  // @@protoc_insertion_point(field_get:DBActivityData.ActivityList)
  return activitylist_.Get(index);
}
::DBActivityItem* DBActivityData::mutable_activitylist(int index) {
  // @@protoc_insertion_point(field_mutable:DBActivityData.ActivityList)
  return activitylist_.Mutable(index);
}
::DBActivityItem* DBActivityData::add_activitylist() {
  // @@protoc_insertion_point(field_add:DBActivityData.ActivityList)
  return activitylist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBActivityItem >*
DBActivityData::mutable_activitylist() {
  // @@protoc_insertion_point(field_mutable_list:DBActivityData.ActivityList)
  return &activitylist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBActivityItem >&
DBActivityData::activitylist() const {
  // @@protoc_insertion_point(field_list:DBActivityData.ActivityList)
  return activitylist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBCounterItem::kRoleIDFieldNumber;
const int DBCounterItem::kCounterIDFieldNumber;
const int DBCounterItem::kIndexFieldNumber;
const int DBCounterItem::kValueFieldNumber;
const int DBCounterItem::kTimeFieldNumber;
const int DBCounterItem::kParam1FieldNumber;
const int DBCounterItem::kParam2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBCounterItem::DBCounterItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBCounterItem)
}

void DBCounterItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBCounterItem::DBCounterItem(const DBCounterItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBCounterItem)
}

void DBCounterItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  counterid_ = GOOGLE_ULONGLONG(0);
  index_ = 0u;
  value_ = 0u;
  time_ = 0u;
  param1_ = 0u;
  param2_ = 0u;
}

DBCounterItem::~DBCounterItem() {
  // @@protoc_insertion_point(destructor:DBCounterItem)
  SharedDtor();
}

void DBCounterItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBCounterItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBCounterItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBCounterItem_descriptor_;
}

const DBCounterItem& DBCounterItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBCounterItem* DBCounterItem::default_instance_ = NULL;

DBCounterItem* DBCounterItem::New(::google::protobuf::Arena* arena) const {
  DBCounterItem* n = new DBCounterItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBCounterItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBCounterItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBCounterItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBCounterItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, param2_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBCounterItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBCounterItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CounterID;
        break;
      }

      // optional uint64 CounterID = 2;
      case 2: {
        if (tag == 16) {
         parse_CounterID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &counterid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Index;
        break;
      }

      // optional uint32 Index = 3;
      case 3: {
        if (tag == 24) {
         parse_Index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Value;
        break;
      }

      // optional uint32 Value = 4;
      case 4: {
        if (tag == 32) {
         parse_Value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Time;
        break;
      }

      // optional uint32 Time = 5;
      case 5: {
        if (tag == 40) {
         parse_Time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Param1;
        break;
      }

      // optional uint32 Param1 = 6;
      case 6: {
        if (tag == 48) {
         parse_Param1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Param2;
        break;
      }

      // optional uint32 Param2 = 7;
      case 7: {
        if (tag == 56) {
         parse_Param2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBCounterItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBCounterItem)
  return false;
#undef DO_
}

void DBCounterItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBCounterItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 CounterID = 2;
  if (this->counterid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->counterid(), output);
  }

  // optional uint32 Index = 3;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->index(), output);
  }

  // optional uint32 Value = 4;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->value(), output);
  }

  // optional uint32 Time = 5;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time(), output);
  }

  // optional uint32 Param1 = 6;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->param1(), output);
  }

  // optional uint32 Param2 = 7;
  if (this->param2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->param2(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBCounterItem)
}

::google::protobuf::uint8* DBCounterItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBCounterItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 CounterID = 2;
  if (this->counterid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->counterid(), target);
  }

  // optional uint32 Index = 3;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->index(), target);
  }

  // optional uint32 Value = 4;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->value(), target);
  }

  // optional uint32 Time = 5;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time(), target);
  }

  // optional uint32 Param1 = 6;
  if (this->param1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->param1(), target);
  }

  // optional uint32 Param2 = 7;
  if (this->param2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->param2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBCounterItem)
  return target;
}

int DBCounterItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBCounterItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 CounterID = 2;
  if (this->counterid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->counterid());
  }

  // optional uint32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // optional uint32 Value = 4;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->value());
  }

  // optional uint32 Time = 5;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time());
  }

  // optional uint32 Param1 = 6;
  if (this->param1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param1());
  }

  // optional uint32 Param2 = 7;
  if (this->param2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param2());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBCounterItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBCounterItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBCounterItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBCounterItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBCounterItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBCounterItem)
    MergeFrom(*source);
  }
}

void DBCounterItem::MergeFrom(const DBCounterItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBCounterItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.counterid() != 0) {
    set_counterid(from.counterid());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.param1() != 0) {
    set_param1(from.param1());
  }
  if (from.param2() != 0) {
    set_param2(from.param2());
  }
}

void DBCounterItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBCounterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBCounterItem::CopyFrom(const DBCounterItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBCounterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBCounterItem::IsInitialized() const {

  return true;
}

void DBCounterItem::Swap(DBCounterItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBCounterItem::InternalSwap(DBCounterItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(counterid_, other->counterid_);
  std::swap(index_, other->index_);
  std::swap(value_, other->value_);
  std::swap(time_, other->time_);
  std::swap(param1_, other->param1_);
  std::swap(param2_, other->param2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBCounterItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBCounterItem_descriptor_;
  metadata.reflection = DBCounterItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBCounterItem

// optional uint64 RoleID = 1;
void DBCounterItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBCounterItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.RoleID)
  return roleid_;
}
 void DBCounterItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBCounterItem.RoleID)
}

// optional uint64 CounterID = 2;
void DBCounterItem::clear_counterid() {
  counterid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBCounterItem::counterid() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.CounterID)
  return counterid_;
}
 void DBCounterItem::set_counterid(::google::protobuf::uint64 value) {
  
  counterid_ = value;
  // @@protoc_insertion_point(field_set:DBCounterItem.CounterID)
}

// optional uint32 Index = 3;
void DBCounterItem::clear_index() {
  index_ = 0u;
}
 ::google::protobuf::uint32 DBCounterItem::index() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Index)
  return index_;
}
 void DBCounterItem::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:DBCounterItem.Index)
}

// optional uint32 Value = 4;
void DBCounterItem::clear_value() {
  value_ = 0u;
}
 ::google::protobuf::uint32 DBCounterItem::value() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Value)
  return value_;
}
 void DBCounterItem::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:DBCounterItem.Value)
}

// optional uint32 Time = 5;
void DBCounterItem::clear_time() {
  time_ = 0u;
}
 ::google::protobuf::uint32 DBCounterItem::time() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Time)
  return time_;
}
 void DBCounterItem::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:DBCounterItem.Time)
}

// optional uint32 Param1 = 6;
void DBCounterItem::clear_param1() {
  param1_ = 0u;
}
 ::google::protobuf::uint32 DBCounterItem::param1() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Param1)
  return param1_;
}
 void DBCounterItem::set_param1(::google::protobuf::uint32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:DBCounterItem.Param1)
}

// optional uint32 Param2 = 7;
void DBCounterItem::clear_param2() {
  param2_ = 0u;
}
 ::google::protobuf::uint32 DBCounterItem::param2() const {
  // @@protoc_insertion_point(field_get:DBCounterItem.Param2)
  return param2_;
}
 void DBCounterItem::set_param2(::google::protobuf::uint32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:DBCounterItem.Param2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBCounterData::kCounterListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBCounterData::DBCounterData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBCounterData)
}

void DBCounterData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBCounterData::DBCounterData(const DBCounterData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBCounterData)
}

void DBCounterData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBCounterData::~DBCounterData() {
  // @@protoc_insertion_point(destructor:DBCounterData)
  SharedDtor();
}

void DBCounterData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBCounterData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBCounterData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBCounterData_descriptor_;
}

const DBCounterData& DBCounterData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBCounterData* DBCounterData::default_instance_ = NULL;

DBCounterData* DBCounterData::New(::google::protobuf::Arena* arena) const {
  DBCounterData* n = new DBCounterData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBCounterData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBCounterData)
  counterlist_.Clear();
}

bool DBCounterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBCounterData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBCounterItem CounterList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_CounterList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_counterlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_CounterList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBCounterData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBCounterData)
  return false;
#undef DO_
}

void DBCounterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBCounterData)
  // repeated .DBCounterItem CounterList = 1;
  for (unsigned int i = 0, n = this->counterlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->counterlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBCounterData)
}

::google::protobuf::uint8* DBCounterData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBCounterData)
  // repeated .DBCounterItem CounterList = 1;
  for (unsigned int i = 0, n = this->counterlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->counterlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBCounterData)
  return target;
}

int DBCounterData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBCounterData)
  int total_size = 0;

  // repeated .DBCounterItem CounterList = 1;
  total_size += 1 * this->counterlist_size();
  for (int i = 0; i < this->counterlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->counterlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBCounterData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBCounterData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBCounterData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBCounterData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBCounterData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBCounterData)
    MergeFrom(*source);
  }
}

void DBCounterData::MergeFrom(const DBCounterData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBCounterData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  counterlist_.MergeFrom(from.counterlist_);
}

void DBCounterData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBCounterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBCounterData::CopyFrom(const DBCounterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBCounterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBCounterData::IsInitialized() const {

  return true;
}

void DBCounterData::Swap(DBCounterData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBCounterData::InternalSwap(DBCounterData* other) {
  counterlist_.UnsafeArenaSwap(&other->counterlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBCounterData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBCounterData_descriptor_;
  metadata.reflection = DBCounterData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBCounterData

// repeated .DBCounterItem CounterList = 1;
int DBCounterData::counterlist_size() const {
  return counterlist_.size();
}
void DBCounterData::clear_counterlist() {
  counterlist_.Clear();
}
const ::DBCounterItem& DBCounterData::counterlist(int index) const {
  // @@protoc_insertion_point(field_get:DBCounterData.CounterList)
  return counterlist_.Get(index);
}
::DBCounterItem* DBCounterData::mutable_counterlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBCounterData.CounterList)
  return counterlist_.Mutable(index);
}
::DBCounterItem* DBCounterData::add_counterlist() {
  // @@protoc_insertion_point(field_add:DBCounterData.CounterList)
  return counterlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBCounterItem >*
DBCounterData::mutable_counterlist() {
  // @@protoc_insertion_point(field_mutable_list:DBCounterData.CounterList)
  return &counterlist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBCounterItem >&
DBCounterData::counterlist() const {
  // @@protoc_insertion_point(field_list:DBCounterData.CounterList)
  return counterlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBFriendItem::kRoleIDFieldNumber;
const int DBFriendItem::kFriendIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBFriendItem::DBFriendItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBFriendItem)
}

void DBFriendItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBFriendItem::DBFriendItem(const DBFriendItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBFriendItem)
}

void DBFriendItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  friendid_ = GOOGLE_ULONGLONG(0);
}

DBFriendItem::~DBFriendItem() {
  // @@protoc_insertion_point(destructor:DBFriendItem)
  SharedDtor();
}

void DBFriendItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBFriendItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBFriendItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBFriendItem_descriptor_;
}

const DBFriendItem& DBFriendItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBFriendItem* DBFriendItem::default_instance_ = NULL;

DBFriendItem* DBFriendItem::New(::google::protobuf::Arena* arena) const {
  DBFriendItem* n = new DBFriendItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBFriendItem::Clear() {
// @@protoc_insertion_point(message_clear_start:DBFriendItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DBFriendItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DBFriendItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, friendid_);

#undef ZR_HELPER_
#undef ZR_

}

bool DBFriendItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBFriendItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_FriendID;
        break;
      }

      // optional uint64 FriendID = 2;
      case 2: {
        if (tag == 16) {
         parse_FriendID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friendid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBFriendItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBFriendItem)
  return false;
#undef DO_
}

void DBFriendItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBFriendItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional uint64 FriendID = 2;
  if (this->friendid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->friendid(), output);
  }

  // @@protoc_insertion_point(serialize_end:DBFriendItem)
}

::google::protobuf::uint8* DBFriendItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBFriendItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional uint64 FriendID = 2;
  if (this->friendid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->friendid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBFriendItem)
  return target;
}

int DBFriendItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBFriendItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional uint64 FriendID = 2;
  if (this->friendid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friendid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBFriendItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBFriendItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBFriendItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBFriendItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBFriendItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBFriendItem)
    MergeFrom(*source);
  }
}

void DBFriendItem::MergeFrom(const DBFriendItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBFriendItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.friendid() != 0) {
    set_friendid(from.friendid());
  }
}

void DBFriendItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBFriendItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBFriendItem::CopyFrom(const DBFriendItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBFriendItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBFriendItem::IsInitialized() const {

  return true;
}

void DBFriendItem::Swap(DBFriendItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBFriendItem::InternalSwap(DBFriendItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(friendid_, other->friendid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBFriendItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBFriendItem_descriptor_;
  metadata.reflection = DBFriendItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBFriendItem

// optional uint64 RoleID = 1;
void DBFriendItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBFriendItem::roleid() const {
  // @@protoc_insertion_point(field_get:DBFriendItem.RoleID)
  return roleid_;
}
 void DBFriendItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBFriendItem.RoleID)
}

// optional uint64 FriendID = 2;
void DBFriendItem::clear_friendid() {
  friendid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBFriendItem::friendid() const {
  // @@protoc_insertion_point(field_get:DBFriendItem.FriendID)
  return friendid_;
}
 void DBFriendItem::set_friendid(::google::protobuf::uint64 value) {
  
  friendid_ = value;
  // @@protoc_insertion_point(field_set:DBFriendItem.FriendID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBFriendData::kFriendListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBFriendData::DBFriendData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBFriendData)
}

void DBFriendData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

DBFriendData::DBFriendData(const DBFriendData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBFriendData)
}

void DBFriendData::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

DBFriendData::~DBFriendData() {
  // @@protoc_insertion_point(destructor:DBFriendData)
  SharedDtor();
}

void DBFriendData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DBFriendData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBFriendData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBFriendData_descriptor_;
}

const DBFriendData& DBFriendData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBFriendData* DBFriendData::default_instance_ = NULL;

DBFriendData* DBFriendData::New(::google::protobuf::Arena* arena) const {
  DBFriendData* n = new DBFriendData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBFriendData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBFriendData)
  friendlist_.Clear();
}

bool DBFriendData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBFriendData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DBFriendItem FriendList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_FriendList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_friendlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_FriendList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBFriendData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBFriendData)
  return false;
#undef DO_
}

void DBFriendData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBFriendData)
  // repeated .DBFriendItem FriendList = 1;
  for (unsigned int i = 0, n = this->friendlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friendlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DBFriendData)
}

::google::protobuf::uint8* DBFriendData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBFriendData)
  // repeated .DBFriendItem FriendList = 1;
  for (unsigned int i = 0, n = this->friendlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friendlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBFriendData)
  return target;
}

int DBFriendData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBFriendData)
  int total_size = 0;

  // repeated .DBFriendItem FriendList = 1;
  total_size += 1 * this->friendlist_size();
  for (int i = 0; i < this->friendlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friendlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBFriendData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBFriendData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBFriendData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBFriendData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBFriendData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBFriendData)
    MergeFrom(*source);
  }
}

void DBFriendData::MergeFrom(const DBFriendData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBFriendData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  friendlist_.MergeFrom(from.friendlist_);
}

void DBFriendData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBFriendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBFriendData::CopyFrom(const DBFriendData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBFriendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBFriendData::IsInitialized() const {

  return true;
}

void DBFriendData::Swap(DBFriendData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBFriendData::InternalSwap(DBFriendData* other) {
  friendlist_.UnsafeArenaSwap(&other->friendlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBFriendData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBFriendData_descriptor_;
  metadata.reflection = DBFriendData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBFriendData

// repeated .DBFriendItem FriendList = 1;
int DBFriendData::friendlist_size() const {
  return friendlist_.size();
}
void DBFriendData::clear_friendlist() {
  friendlist_.Clear();
}
const ::DBFriendItem& DBFriendData::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:DBFriendData.FriendList)
  return friendlist_.Get(index);
}
::DBFriendItem* DBFriendData::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:DBFriendData.FriendList)
  return friendlist_.Mutable(index);
}
::DBFriendItem* DBFriendData::add_friendlist() {
  // @@protoc_insertion_point(field_add:DBFriendData.FriendList)
  return friendlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::DBFriendItem >*
DBFriendData::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:DBFriendData.FriendList)
  return &friendlist_;
}
const ::google::protobuf::RepeatedPtrField< ::DBFriendItem >&
DBFriendData::friendlist() const {
  // @@protoc_insertion_point(field_list:DBFriendData.FriendList)
  return friendlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBRoleLoginAck::kRetCodeFieldNumber;
const int DBRoleLoginAck::kRoleIDFieldNumber;
const int DBRoleLoginAck::kRoleDataFieldNumber;
const int DBRoleLoginAck::kBagDataFieldNumber;
const int DBRoleLoginAck::kCopyDataFieldNumber;
const int DBRoleLoginAck::kEquipDataFieldNumber;
const int DBRoleLoginAck::kGemDataFieldNumber;
const int DBRoleLoginAck::kPetDataFieldNumber;
const int DBRoleLoginAck::kPartnerDataFieldNumber;
const int DBRoleLoginAck::kTaskDataFieldNumber;
const int DBRoleLoginAck::kMailDataFieldNumber;
const int DBRoleLoginAck::kMountDataFieldNumber;
const int DBRoleLoginAck::kActivityDataFieldNumber;
const int DBRoleLoginAck::kCounterDataFieldNumber;
const int DBRoleLoginAck::kFriendDataFieldNumber;
const int DBRoleLoginAck::kSkillDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBRoleLoginAck::DBRoleLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBRoleLoginAck)
}

void DBRoleLoginAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  roledata_ = const_cast< ::DBRoleData*>(&::DBRoleData::default_instance());
  bagdata_ = const_cast< ::DBBagData*>(&::DBBagData::default_instance());
  copydata_ = const_cast< ::DBCopyData*>(&::DBCopyData::default_instance());
  equipdata_ = const_cast< ::DBEquipData*>(&::DBEquipData::default_instance());
  gemdata_ = const_cast< ::DBGemData*>(&::DBGemData::default_instance());
  petdata_ = const_cast< ::DBPetData*>(&::DBPetData::default_instance());
  partnerdata_ = const_cast< ::DBPartnerData*>(&::DBPartnerData::default_instance());
  taskdata_ = const_cast< ::DBTaskData*>(&::DBTaskData::default_instance());
  maildata_ = const_cast< ::DBMailData*>(&::DBMailData::default_instance());
  mountdata_ = const_cast< ::DBMountData*>(&::DBMountData::default_instance());
  activitydata_ = const_cast< ::DBActivityData*>(&::DBActivityData::default_instance());
  counterdata_ = const_cast< ::DBCounterData*>(&::DBCounterData::default_instance());
  frienddata_ = const_cast< ::DBFriendData*>(&::DBFriendData::default_instance());
  skilldata_ = const_cast< ::DBSkillData*>(&::DBSkillData::default_instance());
}

DBRoleLoginAck::DBRoleLoginAck(const DBRoleLoginAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DBRoleLoginAck)
}

void DBRoleLoginAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  roleid_ = GOOGLE_ULONGLONG(0);
  roledata_ = NULL;
  bagdata_ = NULL;
  copydata_ = NULL;
  equipdata_ = NULL;
  gemdata_ = NULL;
  petdata_ = NULL;
  partnerdata_ = NULL;
  taskdata_ = NULL;
  maildata_ = NULL;
  mountdata_ = NULL;
  activitydata_ = NULL;
  counterdata_ = NULL;
  frienddata_ = NULL;
  skilldata_ = NULL;
}

DBRoleLoginAck::~DBRoleLoginAck() {
  // @@protoc_insertion_point(destructor:DBRoleLoginAck)
  SharedDtor();
}

void DBRoleLoginAck::SharedDtor() {
  if (this != default_instance_) {
    delete roledata_;
    delete bagdata_;
    delete copydata_;
    delete equipdata_;
    delete gemdata_;
    delete petdata_;
    delete partnerdata_;
    delete taskdata_;
    delete maildata_;
    delete mountdata_;
    delete activitydata_;
    delete counterdata_;
    delete frienddata_;
    delete skilldata_;
  }
}

void DBRoleLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBRoleLoginAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DBRoleLoginAck_descriptor_;
}

const DBRoleLoginAck& DBRoleLoginAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fLoginDBData_2eproto();
  return *default_instance_;
}

DBRoleLoginAck* DBRoleLoginAck::default_instance_ = NULL;

DBRoleLoginAck* DBRoleLoginAck::New(::google::protobuf::Arena* arena) const {
  DBRoleLoginAck* n = new DBRoleLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBRoleLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:DBRoleLoginAck)
  retcode_ = 0u;
  roleid_ = GOOGLE_ULONGLONG(0);
  if (GetArenaNoVirtual() == NULL && roledata_ != NULL) delete roledata_;
  roledata_ = NULL;
  if (GetArenaNoVirtual() == NULL && bagdata_ != NULL) delete bagdata_;
  bagdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && copydata_ != NULL) delete copydata_;
  copydata_ = NULL;
  if (GetArenaNoVirtual() == NULL && equipdata_ != NULL) delete equipdata_;
  equipdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && gemdata_ != NULL) delete gemdata_;
  gemdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && petdata_ != NULL) delete petdata_;
  petdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && partnerdata_ != NULL) delete partnerdata_;
  partnerdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && taskdata_ != NULL) delete taskdata_;
  taskdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && maildata_ != NULL) delete maildata_;
  maildata_ = NULL;
  if (GetArenaNoVirtual() == NULL && mountdata_ != NULL) delete mountdata_;
  mountdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && activitydata_ != NULL) delete activitydata_;
  activitydata_ = NULL;
  if (GetArenaNoVirtual() == NULL && counterdata_ != NULL) delete counterdata_;
  counterdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && frienddata_ != NULL) delete frienddata_;
  frienddata_ = NULL;
  if (GetArenaNoVirtual() == NULL && skilldata_ != NULL) delete skilldata_;
  skilldata_ = NULL;
}

bool DBRoleLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBRoleLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }

      // optional uint64 RoleID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RoleData;
        break;
      }

      // optional .DBRoleData RoleData = 3;
      case 3: {
        if (tag == 26) {
         parse_RoleData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roledata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_BagData;
        break;
      }

      // optional .DBBagData BagData = 4;
      case 4: {
        if (tag == 34) {
         parse_BagData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bagdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_CopyData;
        break;
      }

      // optional .DBCopyData CopyData = 5;
      case 5: {
        if (tag == 42) {
         parse_CopyData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_copydata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_EquipData;
        break;
      }

      // optional .DBEquipData EquipData = 6;
      case 6: {
        if (tag == 50) {
         parse_EquipData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_GemData;
        break;
      }

      // optional .DBGemData GemData = 7;
      case 7: {
        if (tag == 58) {
         parse_GemData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gemdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_PetData;
        break;
      }

      // optional .DBPetData PetData = 8;
      case 8: {
        if (tag == 66) {
         parse_PetData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_petdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_PartnerData;
        break;
      }

      // optional .DBPartnerData PartnerData = 9;
      case 9: {
        if (tag == 74) {
         parse_PartnerData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_partnerdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_TaskData;
        break;
      }

      // optional .DBTaskData TaskData = 10;
      case 10: {
        if (tag == 82) {
         parse_TaskData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_taskdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_MailData;
        break;
      }

      // optional .DBMailData MailData = 11;
      case 11: {
        if (tag == 90) {
         parse_MailData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_maildata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_MountData;
        break;
      }

      // optional .DBMountData MountData = 12;
      case 12: {
        if (tag == 98) {
         parse_MountData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mountdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_ActivityData;
        break;
      }

      // optional .DBActivityData ActivityData = 13;
      case 13: {
        if (tag == 106) {
         parse_ActivityData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activitydata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_CounterData;
        break;
      }

      // optional .DBCounterData CounterData = 14;
      case 14: {
        if (tag == 114) {
         parse_CounterData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_counterdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_FriendData;
        break;
      }

      // optional .DBFriendData FriendData = 15;
      case 15: {
        if (tag == 122) {
         parse_FriendData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_frienddata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_SkillData;
        break;
      }

      // optional .DBSkillData SkillData = 16;
      case 16: {
        if (tag == 130) {
         parse_SkillData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skilldata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBRoleLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBRoleLoginAck)
  return false;
#undef DO_
}

void DBRoleLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBRoleLoginAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // optional .DBRoleData RoleData = 3;
  if (this->has_roledata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->roledata_, output);
  }

  // optional .DBBagData BagData = 4;
  if (this->has_bagdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->bagdata_, output);
  }

  // optional .DBCopyData CopyData = 5;
  if (this->has_copydata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->copydata_, output);
  }

  // optional .DBEquipData EquipData = 6;
  if (this->has_equipdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->equipdata_, output);
  }

  // optional .DBGemData GemData = 7;
  if (this->has_gemdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->gemdata_, output);
  }

  // optional .DBPetData PetData = 8;
  if (this->has_petdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->petdata_, output);
  }

  // optional .DBPartnerData PartnerData = 9;
  if (this->has_partnerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->partnerdata_, output);
  }

  // optional .DBTaskData TaskData = 10;
  if (this->has_taskdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->taskdata_, output);
  }

  // optional .DBMailData MailData = 11;
  if (this->has_maildata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->maildata_, output);
  }

  // optional .DBMountData MountData = 12;
  if (this->has_mountdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->mountdata_, output);
  }

  // optional .DBActivityData ActivityData = 13;
  if (this->has_activitydata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->activitydata_, output);
  }

  // optional .DBCounterData CounterData = 14;
  if (this->has_counterdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->counterdata_, output);
  }

  // optional .DBFriendData FriendData = 15;
  if (this->has_frienddata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->frienddata_, output);
  }

  // optional .DBSkillData SkillData = 16;
  if (this->has_skilldata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->skilldata_, output);
  }

  // @@protoc_insertion_point(serialize_end:DBRoleLoginAck)
}

::google::protobuf::uint8* DBRoleLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBRoleLoginAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // optional .DBRoleData RoleData = 3;
  if (this->has_roledata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->roledata_, false, target);
  }

  // optional .DBBagData BagData = 4;
  if (this->has_bagdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->bagdata_, false, target);
  }

  // optional .DBCopyData CopyData = 5;
  if (this->has_copydata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->copydata_, false, target);
  }

  // optional .DBEquipData EquipData = 6;
  if (this->has_equipdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->equipdata_, false, target);
  }

  // optional .DBGemData GemData = 7;
  if (this->has_gemdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->gemdata_, false, target);
  }

  // optional .DBPetData PetData = 8;
  if (this->has_petdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->petdata_, false, target);
  }

  // optional .DBPartnerData PartnerData = 9;
  if (this->has_partnerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->partnerdata_, false, target);
  }

  // optional .DBTaskData TaskData = 10;
  if (this->has_taskdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->taskdata_, false, target);
  }

  // optional .DBMailData MailData = 11;
  if (this->has_maildata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->maildata_, false, target);
  }

  // optional .DBMountData MountData = 12;
  if (this->has_mountdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->mountdata_, false, target);
  }

  // optional .DBActivityData ActivityData = 13;
  if (this->has_activitydata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->activitydata_, false, target);
  }

  // optional .DBCounterData CounterData = 14;
  if (this->has_counterdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->counterdata_, false, target);
  }

  // optional .DBFriendData FriendData = 15;
  if (this->has_frienddata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->frienddata_, false, target);
  }

  // optional .DBSkillData SkillData = 16;
  if (this->has_skilldata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->skilldata_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DBRoleLoginAck)
  return target;
}

int DBRoleLoginAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DBRoleLoginAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional .DBRoleData RoleData = 3;
  if (this->has_roledata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roledata_);
  }

  // optional .DBBagData BagData = 4;
  if (this->has_bagdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->bagdata_);
  }

  // optional .DBCopyData CopyData = 5;
  if (this->has_copydata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->copydata_);
  }

  // optional .DBEquipData EquipData = 6;
  if (this->has_equipdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->equipdata_);
  }

  // optional .DBGemData GemData = 7;
  if (this->has_gemdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gemdata_);
  }

  // optional .DBPetData PetData = 8;
  if (this->has_petdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->petdata_);
  }

  // optional .DBPartnerData PartnerData = 9;
  if (this->has_partnerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->partnerdata_);
  }

  // optional .DBTaskData TaskData = 10;
  if (this->has_taskdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->taskdata_);
  }

  // optional .DBMailData MailData = 11;
  if (this->has_maildata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->maildata_);
  }

  // optional .DBMountData MountData = 12;
  if (this->has_mountdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mountdata_);
  }

  // optional .DBActivityData ActivityData = 13;
  if (this->has_activitydata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->activitydata_);
  }

  // optional .DBCounterData CounterData = 14;
  if (this->has_counterdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->counterdata_);
  }

  // optional .DBFriendData FriendData = 15;
  if (this->has_frienddata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->frienddata_);
  }

  // optional .DBSkillData SkillData = 16;
  if (this->has_skilldata()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->skilldata_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBRoleLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBRoleLoginAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DBRoleLoginAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DBRoleLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBRoleLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBRoleLoginAck)
    MergeFrom(*source);
  }
}

void DBRoleLoginAck::MergeFrom(const DBRoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBRoleLoginAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.has_roledata()) {
    mutable_roledata()->::DBRoleData::MergeFrom(from.roledata());
  }
  if (from.has_bagdata()) {
    mutable_bagdata()->::DBBagData::MergeFrom(from.bagdata());
  }
  if (from.has_copydata()) {
    mutable_copydata()->::DBCopyData::MergeFrom(from.copydata());
  }
  if (from.has_equipdata()) {
    mutable_equipdata()->::DBEquipData::MergeFrom(from.equipdata());
  }
  if (from.has_gemdata()) {
    mutable_gemdata()->::DBGemData::MergeFrom(from.gemdata());
  }
  if (from.has_petdata()) {
    mutable_petdata()->::DBPetData::MergeFrom(from.petdata());
  }
  if (from.has_partnerdata()) {
    mutable_partnerdata()->::DBPartnerData::MergeFrom(from.partnerdata());
  }
  if (from.has_taskdata()) {
    mutable_taskdata()->::DBTaskData::MergeFrom(from.taskdata());
  }
  if (from.has_maildata()) {
    mutable_maildata()->::DBMailData::MergeFrom(from.maildata());
  }
  if (from.has_mountdata()) {
    mutable_mountdata()->::DBMountData::MergeFrom(from.mountdata());
  }
  if (from.has_activitydata()) {
    mutable_activitydata()->::DBActivityData::MergeFrom(from.activitydata());
  }
  if (from.has_counterdata()) {
    mutable_counterdata()->::DBCounterData::MergeFrom(from.counterdata());
  }
  if (from.has_frienddata()) {
    mutable_frienddata()->::DBFriendData::MergeFrom(from.frienddata());
  }
  if (from.has_skilldata()) {
    mutable_skilldata()->::DBSkillData::MergeFrom(from.skilldata());
  }
}

void DBRoleLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBRoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBRoleLoginAck::CopyFrom(const DBRoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBRoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleLoginAck::IsInitialized() const {

  return true;
}

void DBRoleLoginAck::Swap(DBRoleLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBRoleLoginAck::InternalSwap(DBRoleLoginAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(roleid_, other->roleid_);
  std::swap(roledata_, other->roledata_);
  std::swap(bagdata_, other->bagdata_);
  std::swap(copydata_, other->copydata_);
  std::swap(equipdata_, other->equipdata_);
  std::swap(gemdata_, other->gemdata_);
  std::swap(petdata_, other->petdata_);
  std::swap(partnerdata_, other->partnerdata_);
  std::swap(taskdata_, other->taskdata_);
  std::swap(maildata_, other->maildata_);
  std::swap(mountdata_, other->mountdata_);
  std::swap(activitydata_, other->activitydata_);
  std::swap(counterdata_, other->counterdata_);
  std::swap(frienddata_, other->frienddata_);
  std::swap(skilldata_, other->skilldata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBRoleLoginAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DBRoleLoginAck_descriptor_;
  metadata.reflection = DBRoleLoginAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBRoleLoginAck

// optional uint32 RetCode = 1;
void DBRoleLoginAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 DBRoleLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.RetCode)
  return retcode_;
}
 void DBRoleLoginAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:DBRoleLoginAck.RetCode)
}

// optional uint64 RoleID = 2;
void DBRoleLoginAck::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 DBRoleLoginAck::roleid() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.RoleID)
  return roleid_;
}
 void DBRoleLoginAck::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:DBRoleLoginAck.RoleID)
}

// optional .DBRoleData RoleData = 3;
bool DBRoleLoginAck::has_roledata() const {
  return !_is_default_instance_ && roledata_ != NULL;
}
void DBRoleLoginAck::clear_roledata() {
  if (GetArenaNoVirtual() == NULL && roledata_ != NULL) delete roledata_;
  roledata_ = NULL;
}
const ::DBRoleData& DBRoleLoginAck::roledata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.RoleData)
  return roledata_ != NULL ? *roledata_ : *default_instance_->roledata_;
}
::DBRoleData* DBRoleLoginAck::mutable_roledata() {
  
  if (roledata_ == NULL) {
    roledata_ = new ::DBRoleData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.RoleData)
  return roledata_;
}
::DBRoleData* DBRoleLoginAck::release_roledata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.RoleData)
  
  ::DBRoleData* temp = roledata_;
  roledata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_roledata(::DBRoleData* roledata) {
  delete roledata_;
  roledata_ = roledata;
  if (roledata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.RoleData)
}

// optional .DBBagData BagData = 4;
bool DBRoleLoginAck::has_bagdata() const {
  return !_is_default_instance_ && bagdata_ != NULL;
}
void DBRoleLoginAck::clear_bagdata() {
  if (GetArenaNoVirtual() == NULL && bagdata_ != NULL) delete bagdata_;
  bagdata_ = NULL;
}
const ::DBBagData& DBRoleLoginAck::bagdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.BagData)
  return bagdata_ != NULL ? *bagdata_ : *default_instance_->bagdata_;
}
::DBBagData* DBRoleLoginAck::mutable_bagdata() {
  
  if (bagdata_ == NULL) {
    bagdata_ = new ::DBBagData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.BagData)
  return bagdata_;
}
::DBBagData* DBRoleLoginAck::release_bagdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.BagData)
  
  ::DBBagData* temp = bagdata_;
  bagdata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_bagdata(::DBBagData* bagdata) {
  delete bagdata_;
  bagdata_ = bagdata;
  if (bagdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.BagData)
}

// optional .DBCopyData CopyData = 5;
bool DBRoleLoginAck::has_copydata() const {
  return !_is_default_instance_ && copydata_ != NULL;
}
void DBRoleLoginAck::clear_copydata() {
  if (GetArenaNoVirtual() == NULL && copydata_ != NULL) delete copydata_;
  copydata_ = NULL;
}
const ::DBCopyData& DBRoleLoginAck::copydata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.CopyData)
  return copydata_ != NULL ? *copydata_ : *default_instance_->copydata_;
}
::DBCopyData* DBRoleLoginAck::mutable_copydata() {
  
  if (copydata_ == NULL) {
    copydata_ = new ::DBCopyData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.CopyData)
  return copydata_;
}
::DBCopyData* DBRoleLoginAck::release_copydata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.CopyData)
  
  ::DBCopyData* temp = copydata_;
  copydata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_copydata(::DBCopyData* copydata) {
  delete copydata_;
  copydata_ = copydata;
  if (copydata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.CopyData)
}

// optional .DBEquipData EquipData = 6;
bool DBRoleLoginAck::has_equipdata() const {
  return !_is_default_instance_ && equipdata_ != NULL;
}
void DBRoleLoginAck::clear_equipdata() {
  if (GetArenaNoVirtual() == NULL && equipdata_ != NULL) delete equipdata_;
  equipdata_ = NULL;
}
const ::DBEquipData& DBRoleLoginAck::equipdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.EquipData)
  return equipdata_ != NULL ? *equipdata_ : *default_instance_->equipdata_;
}
::DBEquipData* DBRoleLoginAck::mutable_equipdata() {
  
  if (equipdata_ == NULL) {
    equipdata_ = new ::DBEquipData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.EquipData)
  return equipdata_;
}
::DBEquipData* DBRoleLoginAck::release_equipdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.EquipData)
  
  ::DBEquipData* temp = equipdata_;
  equipdata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_equipdata(::DBEquipData* equipdata) {
  delete equipdata_;
  equipdata_ = equipdata;
  if (equipdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.EquipData)
}

// optional .DBGemData GemData = 7;
bool DBRoleLoginAck::has_gemdata() const {
  return !_is_default_instance_ && gemdata_ != NULL;
}
void DBRoleLoginAck::clear_gemdata() {
  if (GetArenaNoVirtual() == NULL && gemdata_ != NULL) delete gemdata_;
  gemdata_ = NULL;
}
const ::DBGemData& DBRoleLoginAck::gemdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.GemData)
  return gemdata_ != NULL ? *gemdata_ : *default_instance_->gemdata_;
}
::DBGemData* DBRoleLoginAck::mutable_gemdata() {
  
  if (gemdata_ == NULL) {
    gemdata_ = new ::DBGemData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.GemData)
  return gemdata_;
}
::DBGemData* DBRoleLoginAck::release_gemdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.GemData)
  
  ::DBGemData* temp = gemdata_;
  gemdata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_gemdata(::DBGemData* gemdata) {
  delete gemdata_;
  gemdata_ = gemdata;
  if (gemdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.GemData)
}

// optional .DBPetData PetData = 8;
bool DBRoleLoginAck::has_petdata() const {
  return !_is_default_instance_ && petdata_ != NULL;
}
void DBRoleLoginAck::clear_petdata() {
  if (GetArenaNoVirtual() == NULL && petdata_ != NULL) delete petdata_;
  petdata_ = NULL;
}
const ::DBPetData& DBRoleLoginAck::petdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.PetData)
  return petdata_ != NULL ? *petdata_ : *default_instance_->petdata_;
}
::DBPetData* DBRoleLoginAck::mutable_petdata() {
  
  if (petdata_ == NULL) {
    petdata_ = new ::DBPetData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.PetData)
  return petdata_;
}
::DBPetData* DBRoleLoginAck::release_petdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.PetData)
  
  ::DBPetData* temp = petdata_;
  petdata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_petdata(::DBPetData* petdata) {
  delete petdata_;
  petdata_ = petdata;
  if (petdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.PetData)
}

// optional .DBPartnerData PartnerData = 9;
bool DBRoleLoginAck::has_partnerdata() const {
  return !_is_default_instance_ && partnerdata_ != NULL;
}
void DBRoleLoginAck::clear_partnerdata() {
  if (GetArenaNoVirtual() == NULL && partnerdata_ != NULL) delete partnerdata_;
  partnerdata_ = NULL;
}
const ::DBPartnerData& DBRoleLoginAck::partnerdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.PartnerData)
  return partnerdata_ != NULL ? *partnerdata_ : *default_instance_->partnerdata_;
}
::DBPartnerData* DBRoleLoginAck::mutable_partnerdata() {
  
  if (partnerdata_ == NULL) {
    partnerdata_ = new ::DBPartnerData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.PartnerData)
  return partnerdata_;
}
::DBPartnerData* DBRoleLoginAck::release_partnerdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.PartnerData)
  
  ::DBPartnerData* temp = partnerdata_;
  partnerdata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_partnerdata(::DBPartnerData* partnerdata) {
  delete partnerdata_;
  partnerdata_ = partnerdata;
  if (partnerdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.PartnerData)
}

// optional .DBTaskData TaskData = 10;
bool DBRoleLoginAck::has_taskdata() const {
  return !_is_default_instance_ && taskdata_ != NULL;
}
void DBRoleLoginAck::clear_taskdata() {
  if (GetArenaNoVirtual() == NULL && taskdata_ != NULL) delete taskdata_;
  taskdata_ = NULL;
}
const ::DBTaskData& DBRoleLoginAck::taskdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.TaskData)
  return taskdata_ != NULL ? *taskdata_ : *default_instance_->taskdata_;
}
::DBTaskData* DBRoleLoginAck::mutable_taskdata() {
  
  if (taskdata_ == NULL) {
    taskdata_ = new ::DBTaskData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.TaskData)
  return taskdata_;
}
::DBTaskData* DBRoleLoginAck::release_taskdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.TaskData)
  
  ::DBTaskData* temp = taskdata_;
  taskdata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_taskdata(::DBTaskData* taskdata) {
  delete taskdata_;
  taskdata_ = taskdata;
  if (taskdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.TaskData)
}

// optional .DBMailData MailData = 11;
bool DBRoleLoginAck::has_maildata() const {
  return !_is_default_instance_ && maildata_ != NULL;
}
void DBRoleLoginAck::clear_maildata() {
  if (GetArenaNoVirtual() == NULL && maildata_ != NULL) delete maildata_;
  maildata_ = NULL;
}
const ::DBMailData& DBRoleLoginAck::maildata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.MailData)
  return maildata_ != NULL ? *maildata_ : *default_instance_->maildata_;
}
::DBMailData* DBRoleLoginAck::mutable_maildata() {
  
  if (maildata_ == NULL) {
    maildata_ = new ::DBMailData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.MailData)
  return maildata_;
}
::DBMailData* DBRoleLoginAck::release_maildata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.MailData)
  
  ::DBMailData* temp = maildata_;
  maildata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_maildata(::DBMailData* maildata) {
  delete maildata_;
  maildata_ = maildata;
  if (maildata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.MailData)
}

// optional .DBMountData MountData = 12;
bool DBRoleLoginAck::has_mountdata() const {
  return !_is_default_instance_ && mountdata_ != NULL;
}
void DBRoleLoginAck::clear_mountdata() {
  if (GetArenaNoVirtual() == NULL && mountdata_ != NULL) delete mountdata_;
  mountdata_ = NULL;
}
const ::DBMountData& DBRoleLoginAck::mountdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.MountData)
  return mountdata_ != NULL ? *mountdata_ : *default_instance_->mountdata_;
}
::DBMountData* DBRoleLoginAck::mutable_mountdata() {
  
  if (mountdata_ == NULL) {
    mountdata_ = new ::DBMountData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.MountData)
  return mountdata_;
}
::DBMountData* DBRoleLoginAck::release_mountdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.MountData)
  
  ::DBMountData* temp = mountdata_;
  mountdata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_mountdata(::DBMountData* mountdata) {
  delete mountdata_;
  mountdata_ = mountdata;
  if (mountdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.MountData)
}

// optional .DBActivityData ActivityData = 13;
bool DBRoleLoginAck::has_activitydata() const {
  return !_is_default_instance_ && activitydata_ != NULL;
}
void DBRoleLoginAck::clear_activitydata() {
  if (GetArenaNoVirtual() == NULL && activitydata_ != NULL) delete activitydata_;
  activitydata_ = NULL;
}
const ::DBActivityData& DBRoleLoginAck::activitydata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.ActivityData)
  return activitydata_ != NULL ? *activitydata_ : *default_instance_->activitydata_;
}
::DBActivityData* DBRoleLoginAck::mutable_activitydata() {
  
  if (activitydata_ == NULL) {
    activitydata_ = new ::DBActivityData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.ActivityData)
  return activitydata_;
}
::DBActivityData* DBRoleLoginAck::release_activitydata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.ActivityData)
  
  ::DBActivityData* temp = activitydata_;
  activitydata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_activitydata(::DBActivityData* activitydata) {
  delete activitydata_;
  activitydata_ = activitydata;
  if (activitydata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.ActivityData)
}

// optional .DBCounterData CounterData = 14;
bool DBRoleLoginAck::has_counterdata() const {
  return !_is_default_instance_ && counterdata_ != NULL;
}
void DBRoleLoginAck::clear_counterdata() {
  if (GetArenaNoVirtual() == NULL && counterdata_ != NULL) delete counterdata_;
  counterdata_ = NULL;
}
const ::DBCounterData& DBRoleLoginAck::counterdata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.CounterData)
  return counterdata_ != NULL ? *counterdata_ : *default_instance_->counterdata_;
}
::DBCounterData* DBRoleLoginAck::mutable_counterdata() {
  
  if (counterdata_ == NULL) {
    counterdata_ = new ::DBCounterData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.CounterData)
  return counterdata_;
}
::DBCounterData* DBRoleLoginAck::release_counterdata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.CounterData)
  
  ::DBCounterData* temp = counterdata_;
  counterdata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_counterdata(::DBCounterData* counterdata) {
  delete counterdata_;
  counterdata_ = counterdata;
  if (counterdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.CounterData)
}

// optional .DBFriendData FriendData = 15;
bool DBRoleLoginAck::has_frienddata() const {
  return !_is_default_instance_ && frienddata_ != NULL;
}
void DBRoleLoginAck::clear_frienddata() {
  if (GetArenaNoVirtual() == NULL && frienddata_ != NULL) delete frienddata_;
  frienddata_ = NULL;
}
const ::DBFriendData& DBRoleLoginAck::frienddata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.FriendData)
  return frienddata_ != NULL ? *frienddata_ : *default_instance_->frienddata_;
}
::DBFriendData* DBRoleLoginAck::mutable_frienddata() {
  
  if (frienddata_ == NULL) {
    frienddata_ = new ::DBFriendData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.FriendData)
  return frienddata_;
}
::DBFriendData* DBRoleLoginAck::release_frienddata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.FriendData)
  
  ::DBFriendData* temp = frienddata_;
  frienddata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_frienddata(::DBFriendData* frienddata) {
  delete frienddata_;
  frienddata_ = frienddata;
  if (frienddata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.FriendData)
}

// optional .DBSkillData SkillData = 16;
bool DBRoleLoginAck::has_skilldata() const {
  return !_is_default_instance_ && skilldata_ != NULL;
}
void DBRoleLoginAck::clear_skilldata() {
  if (GetArenaNoVirtual() == NULL && skilldata_ != NULL) delete skilldata_;
  skilldata_ = NULL;
}
const ::DBSkillData& DBRoleLoginAck::skilldata() const {
  // @@protoc_insertion_point(field_get:DBRoleLoginAck.SkillData)
  return skilldata_ != NULL ? *skilldata_ : *default_instance_->skilldata_;
}
::DBSkillData* DBRoleLoginAck::mutable_skilldata() {
  
  if (skilldata_ == NULL) {
    skilldata_ = new ::DBSkillData;
  }
  // @@protoc_insertion_point(field_mutable:DBRoleLoginAck.SkillData)
  return skilldata_;
}
::DBSkillData* DBRoleLoginAck::release_skilldata() {
  // @@protoc_insertion_point(field_release:DBRoleLoginAck.SkillData)
  
  ::DBSkillData* temp = skilldata_;
  skilldata_ = NULL;
  return temp;
}
void DBRoleLoginAck::set_allocated_skilldata(::DBSkillData* skilldata) {
  delete skilldata_;
  skilldata_ = skilldata;
  if (skilldata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DBRoleLoginAck.SkillData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
