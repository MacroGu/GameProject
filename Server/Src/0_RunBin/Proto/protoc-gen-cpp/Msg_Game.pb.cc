// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Game.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Msg_Game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SkillItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SkillItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* GmStopServerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GmStopServerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GmStopServerAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GmStopServerAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckVersionReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckVersionReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckVersionAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckVersionAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountLog_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountLog_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountRegReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountRegReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountRegAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountRegAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountLoginAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountLoginAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientServerListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientServerListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientServerNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientServerNode_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientServerListAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientServerListAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* SvrRegToSvrReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SvrRegToSvrReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SvrRegToSvrAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SvrRegToSvrAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* SelectServerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SelectServerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SelectServerAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SelectServerAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleListReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleListReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleListAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleListAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleCreateReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleCreateReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleCreateAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleCreateAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleDeleteReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleDeleteReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleDeleteAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleDeleteAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleLogoutReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleLogoutReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleLogoutAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleLogoutAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleDisconnectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleDisconnectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleDisconnectAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleDisconnectAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleReconnectReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleReconnectReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoleReconnectAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoleReconnectAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveConnectNty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveConnectNty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateNewSceneReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateNewSceneReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreateNewSceneAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreateNewSceneAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnterSceneReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterSceneReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* EnterSceneAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EnterSceneAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* BackToCityReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BackToCityReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* BackToCityAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BackToCityAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveSceneReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveSceneReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LeaveSceneAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LeaveSceneAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* AbortSceneReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AbortSceneReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* AbortSceneAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AbortSceneAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* AbortSceneNty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AbortSceneNty_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransRoleData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransRoleData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransPetData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransPetData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransPartnerData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransPartnerData_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferDataItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferDataItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferDataReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferDataReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferDataAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferDataAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* NotifyIntoScene_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NotifyIntoScene_reflection_ = NULL;
const ::google::protobuf::Descriptor* NearByRoleItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NearByRoleItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CopyInsItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CopyInsItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* CopyReportReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CopyReportReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseHpBottleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseHpBottleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseHpBottleAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseHpBottleAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseMpBottleReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseMpBottleReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseMpBottleAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseMpBottleAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatMessageReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatMessageReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatMessageAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatMessageAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChatMessageNty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChatMessageNty_reflection_ = NULL;
const ::google::protobuf::Descriptor* SealAccountReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SealAccountReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SealAccountAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SealAccountAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetLastServerNty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetLastServerNty_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommonReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommonReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* CommonAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommonAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* BroadMessageNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BroadMessageNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogicRegToLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogicRegToLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogicRegToLoginAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogicRegToLoginAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogicUpdateInfoReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogicUpdateInfoReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogicUpdateInfoAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogicUpdateInfoAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* WatchHeartBeatReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WatchHeartBeatReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* WatchHeartBeatAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WatchHeartBeatAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupEquipAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupEquipAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetEquipReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetEquipReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetEquipAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetEquipAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupGemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupGemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupGemAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupGemAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetGemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetGemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetGemAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetGemAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupPartnerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupPartnerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupPartnerAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupPartnerAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetPartnerReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetPartnerReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetPartnerAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetPartnerAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupMountReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupMountReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupMountAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupMountAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetMountReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetMountReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetMountAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetMountAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupPetReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupPetReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetupPetAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupPetAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetPetReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetPetReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnsetPetAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnsetPetAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreBuyReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreBuyReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreBuyAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreBuyAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectChangeNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectChangeNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* HitEffectItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HitEffectItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* HitEffectNtf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HitEffectNtf_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseItemReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseItemReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseItemAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseItemAck_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgGetRandomNameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgGetRandomNameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* MsgGetRandomNameAck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MsgGetRandomNameAck_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Msg_5fGame_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Msg_5fGame_2eproto() {
  protobuf_AddDesc_Msg_5fGame_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Msg_Game.proto");
  GOOGLE_CHECK(file != NULL);
  SkillItem_descriptor_ = file->message_type(0);
  static const int SkillItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillItem, skillid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillItem, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillItem, keypos_),
  };
  SkillItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SkillItem_descriptor_,
      SkillItem::default_instance_,
      SkillItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(SkillItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkillItem, _is_default_instance_));
  GmStopServerReq_descriptor_ = file->message_type(1);
  static const int GmStopServerReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmStopServerReq, data_),
  };
  GmStopServerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GmStopServerReq_descriptor_,
      GmStopServerReq::default_instance_,
      GmStopServerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(GmStopServerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmStopServerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmStopServerReq, _is_default_instance_));
  GmStopServerAck_descriptor_ = file->message_type(2);
  static const int GmStopServerAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmStopServerAck, retcode_),
  };
  GmStopServerAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GmStopServerAck_descriptor_,
      GmStopServerAck::default_instance_,
      GmStopServerAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(GmStopServerAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmStopServerAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmStopServerAck, _is_default_instance_));
  CheckVersionReq_descriptor_ = file->message_type(3);
  static const int CheckVersionReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, clientverion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, channel_),
  };
  CheckVersionReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CheckVersionReq_descriptor_,
      CheckVersionReq::default_instance_,
      CheckVersionReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CheckVersionReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionReq, _is_default_instance_));
  CheckVersionAck_descriptor_ = file->message_type(4);
  static const int CheckVersionAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, clientverion_),
  };
  CheckVersionAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CheckVersionAck_descriptor_,
      CheckVersionAck::default_instance_,
      CheckVersionAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(CheckVersionAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckVersionAck, _is_default_instance_));
  AccountLog_descriptor_ = file->message_type(5);
  static const int AccountLog_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, idfa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, nettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, imodel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, imei_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, resolution_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, phonecpu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, macaddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, ipaddr_),
  };
  AccountLog_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountLog_descriptor_,
      AccountLog::default_instance_,
      AccountLog_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccountLog),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLog, _is_default_instance_));
  AccountRegReq_descriptor_ = file->message_type(6);
  static const int AccountRegReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, reglog_),
  };
  AccountRegReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountRegReq_descriptor_,
      AccountRegReq::default_instance_,
      AccountRegReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccountRegReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegReq, _is_default_instance_));
  AccountRegAck_descriptor_ = file->message_type(7);
  static const int AccountRegAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, accountid_),
  };
  AccountRegAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountRegAck_descriptor_,
      AccountRegAck::default_instance_,
      AccountRegAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccountRegAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountRegAck, _is_default_instance_));
  AccountLoginReq_descriptor_ = file->message_type(8);
  static const int AccountLoginReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, fromchannel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, loginlog_),
  };
  AccountLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountLoginReq_descriptor_,
      AccountLoginReq::default_instance_,
      AccountLoginReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccountLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginReq, _is_default_instance_));
  AccountLoginAck_descriptor_ = file->message_type(9);
  static const int AccountLoginAck_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, lastsvrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, lastsvrname_),
  };
  AccountLoginAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AccountLoginAck_descriptor_,
      AccountLoginAck::default_instance_,
      AccountLoginAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(AccountLoginAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountLoginAck, _is_default_instance_));
  ClientServerListReq_descriptor_ = file->message_type(10);
  static const int ClientServerListReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, clientversion_),
  };
  ClientServerListReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientServerListReq_descriptor_,
      ClientServerListReq::default_instance_,
      ClientServerListReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientServerListReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListReq, _is_default_instance_));
  ClientServerNode_descriptor_ = file->message_type(11);
  static const int ClientServerNode_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svrflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, cornermark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, svropentime_),
  };
  ClientServerNode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientServerNode_descriptor_,
      ClientServerNode::default_instance_,
      ClientServerNode_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientServerNode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerNode, _is_default_instance_));
  ClientServerListAck_descriptor_ = file->message_type(12);
  static const int ClientServerListAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, svrnode_),
  };
  ClientServerListAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientServerListAck_descriptor_,
      ClientServerListAck::default_instance_,
      ClientServerListAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientServerListAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientServerListAck, _is_default_instance_));
  SvrRegToSvrReq_descriptor_ = file->message_type(13);
  static const int SvrRegToSvrReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrReq, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrReq, servername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrReq, serverip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrReq, serverport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrReq, httpport_),
  };
  SvrRegToSvrReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SvrRegToSvrReq_descriptor_,
      SvrRegToSvrReq::default_instance_,
      SvrRegToSvrReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SvrRegToSvrReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrReq, _is_default_instance_));
  SvrRegToSvrAck_descriptor_ = file->message_type(14);
  static const int SvrRegToSvrAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrAck, newsvrname_),
  };
  SvrRegToSvrAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SvrRegToSvrAck_descriptor_,
      SvrRegToSvrAck::default_instance_,
      SvrRegToSvrAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(SvrRegToSvrAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SvrRegToSvrAck, _is_default_instance_));
  SelectServerReq_descriptor_ = file->message_type(15);
  static const int SelectServerReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerReq, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerReq, serverid_),
  };
  SelectServerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SelectServerReq_descriptor_,
      SelectServerReq::default_instance_,
      SelectServerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SelectServerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerReq, _is_default_instance_));
  SelectServerAck_descriptor_ = file->message_type(16);
  static const int SelectServerAck_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, serveraddr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, serverport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, logincode_),
  };
  SelectServerAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SelectServerAck_descriptor_,
      SelectServerAck::default_instance_,
      SelectServerAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(SelectServerAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectServerAck, _is_default_instance_));
  RoleItem_descriptor_ = file->message_type(17);
  static const int RoleItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, carrer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, level_),
  };
  RoleItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleItem_descriptor_,
      RoleItem::default_instance_,
      RoleItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleItem, _is_default_instance_));
  RoleListReq_descriptor_ = file->message_type(18);
  static const int RoleListReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, logincode_),
  };
  RoleListReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleListReq_descriptor_,
      RoleListReq::default_instance_,
      RoleListReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleListReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListReq, _is_default_instance_));
  RoleListAck_descriptor_ = file->message_type(19);
  static const int RoleListAck_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, rolelist_),
  };
  RoleListAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleListAck_descriptor_,
      RoleListAck::default_instance_,
      RoleListAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleListAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleListAck, _is_default_instance_));
  RoleCreateReq_descriptor_ = file->message_type(20);
  static const int RoleCreateReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, carrer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, channel_),
  };
  RoleCreateReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleCreateReq_descriptor_,
      RoleCreateReq::default_instance_,
      RoleCreateReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleCreateReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateReq, _is_default_instance_));
  RoleCreateAck_descriptor_ = file->message_type(21);
  static const int RoleCreateAck_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, carrer_),
  };
  RoleCreateAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleCreateAck_descriptor_,
      RoleCreateAck::default_instance_,
      RoleCreateAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleCreateAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleCreateAck, _is_default_instance_));
  RoleDeleteReq_descriptor_ = file->message_type(22);
  static const int RoleDeleteReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, roleid_),
  };
  RoleDeleteReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleDeleteReq_descriptor_,
      RoleDeleteReq::default_instance_,
      RoleDeleteReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleDeleteReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteReq, _is_default_instance_));
  RoleDeleteAck_descriptor_ = file->message_type(23);
  static const int RoleDeleteAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteAck, retcode_),
  };
  RoleDeleteAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleDeleteAck_descriptor_,
      RoleDeleteAck::default_instance_,
      RoleDeleteAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleDeleteAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDeleteAck, _is_default_instance_));
  RoleLoginReq_descriptor_ = file->message_type(24);
  static const int RoleLoginReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, logincode_),
  };
  RoleLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleLoginReq_descriptor_,
      RoleLoginReq::default_instance_,
      RoleLoginReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginReq, _is_default_instance_));
  RoleLogoutReq_descriptor_ = file->message_type(25);
  static const int RoleLogoutReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutReq, accountid_),
  };
  RoleLogoutReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleLogoutReq_descriptor_,
      RoleLogoutReq::default_instance_,
      RoleLogoutReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleLogoutReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutReq, _is_default_instance_));
  RoleLogoutAck_descriptor_ = file->message_type(26);
  static const int RoleLogoutAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutAck, retcode_),
  };
  RoleLogoutAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleLogoutAck_descriptor_,
      RoleLogoutAck::default_instance_,
      RoleLogoutAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleLogoutAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLogoutAck, _is_default_instance_));
  RoleDisconnectReq_descriptor_ = file->message_type(27);
  static const int RoleDisconnectReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectReq, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectReq, logincode_),
  };
  RoleDisconnectReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleDisconnectReq_descriptor_,
      RoleDisconnectReq::default_instance_,
      RoleDisconnectReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleDisconnectReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectReq, _is_default_instance_));
  RoleDisconnectAck_descriptor_ = file->message_type(28);
  static const int RoleDisconnectAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectAck, retcode_),
  };
  RoleDisconnectAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleDisconnectAck_descriptor_,
      RoleDisconnectAck::default_instance_,
      RoleDisconnectAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleDisconnectAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleDisconnectAck, _is_default_instance_));
  RoleReconnectReq_descriptor_ = file->message_type(29);
  static const int RoleReconnectReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleReconnectReq, roleid_),
  };
  RoleReconnectReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleReconnectReq_descriptor_,
      RoleReconnectReq::default_instance_,
      RoleReconnectReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleReconnectReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleReconnectReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleReconnectReq, _is_default_instance_));
  RoleReconnectAck_descriptor_ = file->message_type(30);
  static const int RoleReconnectAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleReconnectAck, retcode_),
  };
  RoleReconnectAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoleReconnectAck_descriptor_,
      RoleReconnectAck::default_instance_,
      RoleReconnectAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(RoleReconnectAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleReconnectAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleReconnectAck, _is_default_instance_));
  RemoveConnectNty_descriptor_ = file->message_type(31);
  static const int RemoveConnectNty_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveConnectNty, roleid_),
  };
  RemoveConnectNty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RemoveConnectNty_descriptor_,
      RemoveConnectNty::default_instance_,
      RemoveConnectNty_offsets_,
      -1,
      -1,
      -1,
      sizeof(RemoveConnectNty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveConnectNty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveConnectNty, _is_default_instance_));
  CreateNewSceneReq_descriptor_ = file->message_type(32);
  static const int CreateNewSceneReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, copytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, playernum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, createparam_),
  };
  CreateNewSceneReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateNewSceneReq_descriptor_,
      CreateNewSceneReq::default_instance_,
      CreateNewSceneReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateNewSceneReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneReq, _is_default_instance_));
  CreateNewSceneAck_descriptor_ = file->message_type(33);
  static const int CreateNewSceneAck_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, copyguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, createparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, copytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, playernum_),
  };
  CreateNewSceneAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreateNewSceneAck_descriptor_,
      CreateNewSceneAck::default_instance_,
      CreateNewSceneAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(CreateNewSceneAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateNewSceneAck, _is_default_instance_));
  EnterSceneReq_descriptor_ = file->message_type(34);
  static const int EnterSceneReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReq, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReq, copyguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReq, copyid_),
  };
  EnterSceneReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterSceneReq_descriptor_,
      EnterSceneReq::default_instance_,
      EnterSceneReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(EnterSceneReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReq, _is_default_instance_));
  EnterSceneAck_descriptor_ = file->message_type(35);
  static const int EnterSceneAck_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, copyguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, carrer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, ft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, mp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, hpmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, mpmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, equips_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, skills_),
  };
  EnterSceneAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EnterSceneAck_descriptor_,
      EnterSceneAck::default_instance_,
      EnterSceneAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(EnterSceneAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneAck, _is_default_instance_));
  BackToCityReq_descriptor_ = file->message_type(36);
  static const int BackToCityReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackToCityReq, param_),
  };
  BackToCityReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BackToCityReq_descriptor_,
      BackToCityReq::default_instance_,
      BackToCityReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(BackToCityReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackToCityReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackToCityReq, _is_default_instance_));
  BackToCityAck_descriptor_ = file->message_type(37);
  static const int BackToCityAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackToCityAck, retcode_),
  };
  BackToCityAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BackToCityAck_descriptor_,
      BackToCityAck::default_instance_,
      BackToCityAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(BackToCityAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackToCityAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackToCityAck, _is_default_instance_));
  LeaveSceneReq_descriptor_ = file->message_type(38);
  static const int LeaveSceneReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneReq, reason_),
  };
  LeaveSceneReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LeaveSceneReq_descriptor_,
      LeaveSceneReq::default_instance_,
      LeaveSceneReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LeaveSceneReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneReq, _is_default_instance_));
  LeaveSceneAck_descriptor_ = file->message_type(39);
  static const int LeaveSceneAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneAck, retcode_),
  };
  LeaveSceneAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LeaveSceneAck_descriptor_,
      LeaveSceneAck::default_instance_,
      LeaveSceneAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(LeaveSceneAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneAck, _is_default_instance_));
  AbortSceneReq_descriptor_ = file->message_type(40);
  static const int AbortSceneReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneReq, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneReq, reason_),
  };
  AbortSceneReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AbortSceneReq_descriptor_,
      AbortSceneReq::default_instance_,
      AbortSceneReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(AbortSceneReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneReq, _is_default_instance_));
  AbortSceneAck_descriptor_ = file->message_type(41);
  static const int AbortSceneAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneAck, retcode_),
  };
  AbortSceneAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AbortSceneAck_descriptor_,
      AbortSceneAck::default_instance_,
      AbortSceneAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(AbortSceneAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneAck, _is_default_instance_));
  AbortSceneNty_descriptor_ = file->message_type(42);
  static const int AbortSceneNty_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneNty, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneNty, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneNty, copyguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneNty, copytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneNty, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneNty, param_),
  };
  AbortSceneNty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AbortSceneNty_descriptor_,
      AbortSceneNty::default_instance_,
      AbortSceneNty_offsets_,
      -1,
      -1,
      -1,
      sizeof(AbortSceneNty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneNty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortSceneNty, _is_default_instance_));
  TransRoleData_descriptor_ = file->message_type(43);
  static const int TransRoleData_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, carrerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, mountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, robot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, equips_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, propertys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, skills_),
  };
  TransRoleData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransRoleData_descriptor_,
      TransRoleData::default_instance_,
      TransRoleData_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransRoleData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransRoleData, _is_default_instance_));
  TransPetData_descriptor_ = file->message_type(44);
  static const int TransPetData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPetData, petguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPetData, petid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPetData, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPetData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPetData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPetData, propertys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPetData, skills_),
  };
  TransPetData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransPetData_descriptor_,
      TransPetData::default_instance_,
      TransPetData_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransPetData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPetData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPetData, _is_default_instance_));
  TransPartnerData_descriptor_ = file->message_type(45);
  static const int TransPartnerData_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPartnerData, partnerguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPartnerData, partnerid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPartnerData, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPartnerData, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPartnerData, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPartnerData, propertys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPartnerData, skills_),
  };
  TransPartnerData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransPartnerData_descriptor_,
      TransPartnerData::default_instance_,
      TransPartnerData_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransPartnerData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPartnerData, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransPartnerData, _is_default_instance_));
  TransferDataItem_descriptor_ = file->message_type(46);
  static const int TransferDataItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataItem, camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataItem, roledata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataItem, petdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataItem, partnerdata_),
  };
  TransferDataItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferDataItem_descriptor_,
      TransferDataItem::default_instance_,
      TransferDataItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransferDataItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataItem, _is_default_instance_));
  TransferDataReq_descriptor_ = file->message_type(47);
  static const int TransferDataReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataReq, transdatas_),
  };
  TransferDataReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferDataReq_descriptor_,
      TransferDataReq::default_instance_,
      TransferDataReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransferDataReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataReq, _is_default_instance_));
  TransferDataAck_descriptor_ = file->message_type(48);
  static const int TransferDataAck_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataAck, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataAck, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataAck, copyguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataAck, serverid_),
  };
  TransferDataAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferDataAck_descriptor_,
      TransferDataAck::default_instance_,
      TransferDataAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransferDataAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferDataAck, _is_default_instance_));
  NotifyIntoScene_descriptor_ = file->message_type(49);
  static const int NotifyIntoScene_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, copyguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, serverid_),
  };
  NotifyIntoScene_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NotifyIntoScene_descriptor_,
      NotifyIntoScene::default_instance_,
      NotifyIntoScene_offsets_,
      -1,
      -1,
      -1,
      sizeof(NotifyIntoScene),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotifyIntoScene, _is_default_instance_));
  NearByRoleItem_descriptor_ = file->message_type(50);
  static const int NearByRoleItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, actorid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, name_),
  };
  NearByRoleItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NearByRoleItem_descriptor_,
      NearByRoleItem::default_instance_,
      NearByRoleItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(NearByRoleItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NearByRoleItem, _is_default_instance_));
  CopyInsItem_descriptor_ = file->message_type(51);
  static const int CopyInsItem_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyInsItem, copyguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyInsItem, copyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyInsItem, copytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyInsItem, serverid_),
  };
  CopyInsItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CopyInsItem_descriptor_,
      CopyInsItem::default_instance_,
      CopyInsItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(CopyInsItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyInsItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyInsItem, _is_default_instance_));
  CopyReportReq_descriptor_ = file->message_type(52);
  static const int CopyReportReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyReportReq, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyReportReq, copylist_),
  };
  CopyReportReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CopyReportReq_descriptor_,
      CopyReportReq::default_instance_,
      CopyReportReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CopyReportReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyReportReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CopyReportReq, _is_default_instance_));
  UseHpBottleReq_descriptor_ = file->message_type(53);
  static const int UseHpBottleReq_offsets_[1] = {
  };
  UseHpBottleReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UseHpBottleReq_descriptor_,
      UseHpBottleReq::default_instance_,
      UseHpBottleReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UseHpBottleReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHpBottleReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHpBottleReq, _is_default_instance_));
  UseHpBottleAck_descriptor_ = file->message_type(54);
  static const int UseHpBottleAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHpBottleAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHpBottleAck, count_),
  };
  UseHpBottleAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UseHpBottleAck_descriptor_,
      UseHpBottleAck::default_instance_,
      UseHpBottleAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(UseHpBottleAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHpBottleAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseHpBottleAck, _is_default_instance_));
  UseMpBottleReq_descriptor_ = file->message_type(55);
  static const int UseMpBottleReq_offsets_[1] = {
  };
  UseMpBottleReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UseMpBottleReq_descriptor_,
      UseMpBottleReq::default_instance_,
      UseMpBottleReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UseMpBottleReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMpBottleReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMpBottleReq, _is_default_instance_));
  UseMpBottleAck_descriptor_ = file->message_type(56);
  static const int UseMpBottleAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMpBottleAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMpBottleAck, count_),
  };
  UseMpBottleAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UseMpBottleAck_descriptor_,
      UseMpBottleAck::default_instance_,
      UseMpBottleAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(UseMpBottleAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMpBottleAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseMpBottleAck, _is_default_instance_));
  ChatMessageReq_descriptor_ = file->message_type(57);
  static const int ChatMessageReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageReq, srcname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageReq, srcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageReq, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageReq, guildid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageReq, content_),
  };
  ChatMessageReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatMessageReq_descriptor_,
      ChatMessageReq::default_instance_,
      ChatMessageReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChatMessageReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageReq, _is_default_instance_));
  ChatMessageAck_descriptor_ = file->message_type(58);
  static const int ChatMessageAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageAck, retcode_),
  };
  ChatMessageAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatMessageAck_descriptor_,
      ChatMessageAck::default_instance_,
      ChatMessageAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChatMessageAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageAck, _is_default_instance_));
  ChatMessageNty_descriptor_ = file->message_type(59);
  static const int ChatMessageNty_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageNty, srcname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageNty, srcid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageNty, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageNty, guildid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageNty, content_),
  };
  ChatMessageNty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChatMessageNty_descriptor_,
      ChatMessageNty::default_instance_,
      ChatMessageNty_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChatMessageNty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageNty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMessageNty, _is_default_instance_));
  SealAccountReq_descriptor_ = file->message_type(60);
  static const int SealAccountReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountReq, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountReq, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountReq, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountReq, sealtime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountReq, seal_),
  };
  SealAccountReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SealAccountReq_descriptor_,
      SealAccountReq::default_instance_,
      SealAccountReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SealAccountReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountReq, _is_default_instance_));
  SealAccountAck_descriptor_ = file->message_type(61);
  static const int SealAccountAck_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountAck, accountname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountAck, accountid_),
  };
  SealAccountAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SealAccountAck_descriptor_,
      SealAccountAck::default_instance_,
      SealAccountAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(SealAccountAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealAccountAck, _is_default_instance_));
  SetLastServerNty_descriptor_ = file->message_type(62);
  static const int SetLastServerNty_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLastServerNty, accountid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLastServerNty, serverid_),
  };
  SetLastServerNty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetLastServerNty_descriptor_,
      SetLastServerNty::default_instance_,
      SetLastServerNty_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetLastServerNty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLastServerNty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLastServerNty, _is_default_instance_));
  CommonReq_descriptor_ = file->message_type(63);
  static const int CommonReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonReq, param1_),
  };
  CommonReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommonReq_descriptor_,
      CommonReq::default_instance_,
      CommonReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommonReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonReq, _is_default_instance_));
  CommonAck_descriptor_ = file->message_type(64);
  static const int CommonAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAck, retcode_),
  };
  CommonAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommonAck_descriptor_,
      CommonAck::default_instance_,
      CommonAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(CommonAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAck, _is_default_instance_));
  BroadMessageNotify_descriptor_ = file->message_type(65);
  static const int BroadMessageNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadMessageNotify, msgid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadMessageNotify, connid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadMessageNotify, msgdata_),
  };
  BroadMessageNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BroadMessageNotify_descriptor_,
      BroadMessageNotify::default_instance_,
      BroadMessageNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(BroadMessageNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadMessageNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BroadMessageNotify, _is_default_instance_));
  LogicRegToLoginReq_descriptor_ = file->message_type(66);
  static const int LogicRegToLoginReq_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginReq, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginReq, servername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginReq, svrinnerip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginReq, serverport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginReq, httpport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginReq, watchport_),
  };
  LogicRegToLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogicRegToLoginReq_descriptor_,
      LogicRegToLoginReq::default_instance_,
      LogicRegToLoginReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LogicRegToLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginReq, _is_default_instance_));
  LogicRegToLoginAck_descriptor_ = file->message_type(67);
  static const int LogicRegToLoginAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginAck, newsvrname_),
  };
  LogicRegToLoginAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogicRegToLoginAck_descriptor_,
      LogicRegToLoginAck::default_instance_,
      LogicRegToLoginAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(LogicRegToLoginAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicRegToLoginAck, _is_default_instance_));
  LogicUpdateInfoReq_descriptor_ = file->message_type(68);
  static const int LogicUpdateInfoReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoReq, serverid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoReq, servername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoReq, maxonline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoReq, curonline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoReq, totalnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoReq, cachenum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoReq, status_),
  };
  LogicUpdateInfoReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogicUpdateInfoReq_descriptor_,
      LogicUpdateInfoReq::default_instance_,
      LogicUpdateInfoReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LogicUpdateInfoReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoReq, _is_default_instance_));
  LogicUpdateInfoAck_descriptor_ = file->message_type(69);
  static const int LogicUpdateInfoAck_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoAck, svropentime_),
  };
  LogicUpdateInfoAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogicUpdateInfoAck_descriptor_,
      LogicUpdateInfoAck::default_instance_,
      LogicUpdateInfoAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(LogicUpdateInfoAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicUpdateInfoAck, _is_default_instance_));
  WatchHeartBeatReq_descriptor_ = file->message_type(70);
  static const int WatchHeartBeatReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WatchHeartBeatReq, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WatchHeartBeatReq, processid_),
  };
  WatchHeartBeatReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WatchHeartBeatReq_descriptor_,
      WatchHeartBeatReq::default_instance_,
      WatchHeartBeatReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(WatchHeartBeatReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WatchHeartBeatReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WatchHeartBeatReq, _is_default_instance_));
  WatchHeartBeatAck_descriptor_ = file->message_type(71);
  static const int WatchHeartBeatAck_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WatchHeartBeatAck, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WatchHeartBeatAck, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WatchHeartBeatAck, processid_),
  };
  WatchHeartBeatAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WatchHeartBeatAck_descriptor_,
      WatchHeartBeatAck::default_instance_,
      WatchHeartBeatAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(WatchHeartBeatAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WatchHeartBeatAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WatchHeartBeatAck, _is_default_instance_));
  SetupEquipReq_descriptor_ = file->message_type(72);
  static const int SetupEquipReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupEquipReq, equipguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupEquipReq, bagguid_),
  };
  SetupEquipReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupEquipReq_descriptor_,
      SetupEquipReq::default_instance_,
      SetupEquipReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupEquipReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupEquipReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupEquipReq, _is_default_instance_));
  SetupEquipAck_descriptor_ = file->message_type(73);
  static const int SetupEquipAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupEquipAck, retcode_),
  };
  SetupEquipAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupEquipAck_descriptor_,
      SetupEquipAck::default_instance_,
      SetupEquipAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupEquipAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupEquipAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupEquipAck, _is_default_instance_));
  UnsetEquipReq_descriptor_ = file->message_type(74);
  static const int UnsetEquipReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetEquipReq, equipguid_),
  };
  UnsetEquipReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetEquipReq_descriptor_,
      UnsetEquipReq::default_instance_,
      UnsetEquipReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetEquipReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetEquipReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetEquipReq, _is_default_instance_));
  UnsetEquipAck_descriptor_ = file->message_type(75);
  static const int UnsetEquipAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetEquipAck, retcode_),
  };
  UnsetEquipAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetEquipAck_descriptor_,
      UnsetEquipAck::default_instance_,
      UnsetEquipAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetEquipAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetEquipAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetEquipAck, _is_default_instance_));
  SetupGemReq_descriptor_ = file->message_type(76);
  static const int SetupGemReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupGemReq, gemguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupGemReq, bagguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupGemReq, targetpos_),
  };
  SetupGemReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupGemReq_descriptor_,
      SetupGemReq::default_instance_,
      SetupGemReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupGemReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupGemReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupGemReq, _is_default_instance_));
  SetupGemAck_descriptor_ = file->message_type(77);
  static const int SetupGemAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupGemAck, retcode_),
  };
  SetupGemAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupGemAck_descriptor_,
      SetupGemAck::default_instance_,
      SetupGemAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupGemAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupGemAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupGemAck, _is_default_instance_));
  UnsetGemReq_descriptor_ = file->message_type(78);
  static const int UnsetGemReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetGemReq, gemguid_),
  };
  UnsetGemReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetGemReq_descriptor_,
      UnsetGemReq::default_instance_,
      UnsetGemReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetGemReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetGemReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetGemReq, _is_default_instance_));
  UnsetGemAck_descriptor_ = file->message_type(79);
  static const int UnsetGemAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetGemAck, retcode_),
  };
  UnsetGemAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetGemAck_descriptor_,
      UnsetGemAck::default_instance_,
      UnsetGemAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetGemAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetGemAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetGemAck, _is_default_instance_));
  SetupPartnerReq_descriptor_ = file->message_type(80);
  static const int SetupPartnerReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPartnerReq, partnerguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPartnerReq, targetpos_),
  };
  SetupPartnerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupPartnerReq_descriptor_,
      SetupPartnerReq::default_instance_,
      SetupPartnerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupPartnerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPartnerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPartnerReq, _is_default_instance_));
  SetupPartnerAck_descriptor_ = file->message_type(81);
  static const int SetupPartnerAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPartnerAck, retcode_),
  };
  SetupPartnerAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupPartnerAck_descriptor_,
      SetupPartnerAck::default_instance_,
      SetupPartnerAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupPartnerAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPartnerAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPartnerAck, _is_default_instance_));
  UnsetPartnerReq_descriptor_ = file->message_type(82);
  static const int UnsetPartnerReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPartnerReq, targetpos_),
  };
  UnsetPartnerReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetPartnerReq_descriptor_,
      UnsetPartnerReq::default_instance_,
      UnsetPartnerReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetPartnerReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPartnerReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPartnerReq, _is_default_instance_));
  UnsetPartnerAck_descriptor_ = file->message_type(83);
  static const int UnsetPartnerAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPartnerAck, retcode_),
  };
  UnsetPartnerAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetPartnerAck_descriptor_,
      UnsetPartnerAck::default_instance_,
      UnsetPartnerAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetPartnerAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPartnerAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPartnerAck, _is_default_instance_));
  SetupMountReq_descriptor_ = file->message_type(84);
  static const int SetupMountReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMountReq, mountguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMountReq, targetpos_),
  };
  SetupMountReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupMountReq_descriptor_,
      SetupMountReq::default_instance_,
      SetupMountReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupMountReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMountReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMountReq, _is_default_instance_));
  SetupMountAck_descriptor_ = file->message_type(85);
  static const int SetupMountAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMountAck, retcode_),
  };
  SetupMountAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupMountAck_descriptor_,
      SetupMountAck::default_instance_,
      SetupMountAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupMountAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMountAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMountAck, _is_default_instance_));
  UnsetMountReq_descriptor_ = file->message_type(86);
  static const int UnsetMountReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetMountReq, mountguid_),
  };
  UnsetMountReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetMountReq_descriptor_,
      UnsetMountReq::default_instance_,
      UnsetMountReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetMountReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetMountReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetMountReq, _is_default_instance_));
  UnsetMountAck_descriptor_ = file->message_type(87);
  static const int UnsetMountAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetMountAck, retcode_),
  };
  UnsetMountAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetMountAck_descriptor_,
      UnsetMountAck::default_instance_,
      UnsetMountAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetMountAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetMountAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetMountAck, _is_default_instance_));
  SetupPetReq_descriptor_ = file->message_type(88);
  static const int SetupPetReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPetReq, petguid_),
  };
  SetupPetReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupPetReq_descriptor_,
      SetupPetReq::default_instance_,
      SetupPetReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupPetReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPetReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPetReq, _is_default_instance_));
  SetupPetAck_descriptor_ = file->message_type(89);
  static const int SetupPetAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPetAck, retcode_),
  };
  SetupPetAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupPetAck_descriptor_,
      SetupPetAck::default_instance_,
      SetupPetAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupPetAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPetAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupPetAck, _is_default_instance_));
  UnsetPetReq_descriptor_ = file->message_type(90);
  static const int UnsetPetReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPetReq, petguid_),
  };
  UnsetPetReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetPetReq_descriptor_,
      UnsetPetReq::default_instance_,
      UnsetPetReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetPetReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPetReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPetReq, _is_default_instance_));
  UnsetPetAck_descriptor_ = file->message_type(91);
  static const int UnsetPetAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPetAck, retcode_),
  };
  UnsetPetAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnsetPetAck_descriptor_,
      UnsetPetAck::default_instance_,
      UnsetPetAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnsetPetAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPetAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnsetPetAck, _is_default_instance_));
  StoreBuyReq_descriptor_ = file->message_type(92);
  static const int StoreBuyReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreBuyReq, storetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreBuyReq, storeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreBuyReq, buynum_),
  };
  StoreBuyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StoreBuyReq_descriptor_,
      StoreBuyReq::default_instance_,
      StoreBuyReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(StoreBuyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreBuyReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreBuyReq, _is_default_instance_));
  StoreBuyAck_descriptor_ = file->message_type(93);
  static const int StoreBuyAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreBuyAck, retcode_),
  };
  StoreBuyAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StoreBuyAck_descriptor_,
      StoreBuyAck::default_instance_,
      StoreBuyAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(StoreBuyAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreBuyAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreBuyAck, _is_default_instance_));
  ObjectChangeNotify_descriptor_ = file->message_type(94);
  static const int ObjectChangeNotify_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectChangeNotify, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectChangeNotify, changetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectChangeNotify, intvalue1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectChangeNotify, intvalue2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectChangeNotify, strvalue_),
  };
  ObjectChangeNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ObjectChangeNotify_descriptor_,
      ObjectChangeNotify::default_instance_,
      ObjectChangeNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(ObjectChangeNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectChangeNotify, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectChangeNotify, _is_default_instance_));
  HitEffectItem_descriptor_ = file->message_type(95);
  static const int HitEffectItem_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectItem, castguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectItem, targetguid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectItem, hurtvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectItem, crit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectItem, hitactionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectItem, hiteffectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectItem, hitdistance_),
  };
  HitEffectItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HitEffectItem_descriptor_,
      HitEffectItem::default_instance_,
      HitEffectItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(HitEffectItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectItem, _is_default_instance_));
  HitEffectNtf_descriptor_ = file->message_type(96);
  static const int HitEffectNtf_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectNtf, itemlist_),
  };
  HitEffectNtf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HitEffectNtf_descriptor_,
      HitEffectNtf::default_instance_,
      HitEffectNtf_offsets_,
      -1,
      -1,
      -1,
      sizeof(HitEffectNtf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectNtf, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitEffectNtf, _is_default_instance_));
  UseItemReq_descriptor_ = file->message_type(97);
  static const int UseItemReq_offsets_[1] = {
  };
  UseItemReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UseItemReq_descriptor_,
      UseItemReq::default_instance_,
      UseItemReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UseItemReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemReq, _is_default_instance_));
  UseItemAck_descriptor_ = file->message_type(98);
  static const int UseItemAck_offsets_[1] = {
  };
  UseItemAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UseItemAck_descriptor_,
      UseItemAck::default_instance_,
      UseItemAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(UseItemAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemAck, _is_default_instance_));
  MsgGetRandomNameReq_descriptor_ = file->message_type(99);
  static const int MsgGetRandomNameReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetRandomNameReq, sex_),
  };
  MsgGetRandomNameReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgGetRandomNameReq_descriptor_,
      MsgGetRandomNameReq::default_instance_,
      MsgGetRandomNameReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgGetRandomNameReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetRandomNameReq, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetRandomNameReq, _is_default_instance_));
  MsgGetRandomNameAck_descriptor_ = file->message_type(100);
  static const int MsgGetRandomNameAck_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetRandomNameAck, name_),
  };
  MsgGetRandomNameAck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MsgGetRandomNameAck_descriptor_,
      MsgGetRandomNameAck::default_instance_,
      MsgGetRandomNameAck_offsets_,
      -1,
      -1,
      -1,
      sizeof(MsgGetRandomNameAck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetRandomNameAck, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetRandomNameAck, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Msg_5fGame_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SkillItem_descriptor_, &SkillItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GmStopServerReq_descriptor_, &GmStopServerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GmStopServerAck_descriptor_, &GmStopServerAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CheckVersionReq_descriptor_, &CheckVersionReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CheckVersionAck_descriptor_, &CheckVersionAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountLog_descriptor_, &AccountLog::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountRegReq_descriptor_, &AccountRegReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountRegAck_descriptor_, &AccountRegAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountLoginReq_descriptor_, &AccountLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AccountLoginAck_descriptor_, &AccountLoginAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientServerListReq_descriptor_, &ClientServerListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientServerNode_descriptor_, &ClientServerNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientServerListAck_descriptor_, &ClientServerListAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SvrRegToSvrReq_descriptor_, &SvrRegToSvrReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SvrRegToSvrAck_descriptor_, &SvrRegToSvrAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SelectServerReq_descriptor_, &SelectServerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SelectServerAck_descriptor_, &SelectServerAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleItem_descriptor_, &RoleItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleListReq_descriptor_, &RoleListReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleListAck_descriptor_, &RoleListAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleCreateReq_descriptor_, &RoleCreateReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleCreateAck_descriptor_, &RoleCreateAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleDeleteReq_descriptor_, &RoleDeleteReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleDeleteAck_descriptor_, &RoleDeleteAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleLoginReq_descriptor_, &RoleLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleLogoutReq_descriptor_, &RoleLogoutReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleLogoutAck_descriptor_, &RoleLogoutAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleDisconnectReq_descriptor_, &RoleDisconnectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleDisconnectAck_descriptor_, &RoleDisconnectAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleReconnectReq_descriptor_, &RoleReconnectReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoleReconnectAck_descriptor_, &RoleReconnectAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RemoveConnectNty_descriptor_, &RemoveConnectNty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateNewSceneReq_descriptor_, &CreateNewSceneReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreateNewSceneAck_descriptor_, &CreateNewSceneAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterSceneReq_descriptor_, &EnterSceneReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EnterSceneAck_descriptor_, &EnterSceneAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BackToCityReq_descriptor_, &BackToCityReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BackToCityAck_descriptor_, &BackToCityAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LeaveSceneReq_descriptor_, &LeaveSceneReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LeaveSceneAck_descriptor_, &LeaveSceneAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AbortSceneReq_descriptor_, &AbortSceneReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AbortSceneAck_descriptor_, &AbortSceneAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AbortSceneNty_descriptor_, &AbortSceneNty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransRoleData_descriptor_, &TransRoleData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransPetData_descriptor_, &TransPetData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransPartnerData_descriptor_, &TransPartnerData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferDataItem_descriptor_, &TransferDataItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferDataReq_descriptor_, &TransferDataReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferDataAck_descriptor_, &TransferDataAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NotifyIntoScene_descriptor_, &NotifyIntoScene::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NearByRoleItem_descriptor_, &NearByRoleItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CopyInsItem_descriptor_, &CopyInsItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CopyReportReq_descriptor_, &CopyReportReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UseHpBottleReq_descriptor_, &UseHpBottleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UseHpBottleAck_descriptor_, &UseHpBottleAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UseMpBottleReq_descriptor_, &UseMpBottleReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UseMpBottleAck_descriptor_, &UseMpBottleAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatMessageReq_descriptor_, &ChatMessageReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatMessageAck_descriptor_, &ChatMessageAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChatMessageNty_descriptor_, &ChatMessageNty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SealAccountReq_descriptor_, &SealAccountReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SealAccountAck_descriptor_, &SealAccountAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetLastServerNty_descriptor_, &SetLastServerNty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommonReq_descriptor_, &CommonReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommonAck_descriptor_, &CommonAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BroadMessageNotify_descriptor_, &BroadMessageNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogicRegToLoginReq_descriptor_, &LogicRegToLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogicRegToLoginAck_descriptor_, &LogicRegToLoginAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogicUpdateInfoReq_descriptor_, &LogicUpdateInfoReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogicUpdateInfoAck_descriptor_, &LogicUpdateInfoAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WatchHeartBeatReq_descriptor_, &WatchHeartBeatReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WatchHeartBeatAck_descriptor_, &WatchHeartBeatAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupEquipReq_descriptor_, &SetupEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupEquipAck_descriptor_, &SetupEquipAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetEquipReq_descriptor_, &UnsetEquipReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetEquipAck_descriptor_, &UnsetEquipAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupGemReq_descriptor_, &SetupGemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupGemAck_descriptor_, &SetupGemAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetGemReq_descriptor_, &UnsetGemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetGemAck_descriptor_, &UnsetGemAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupPartnerReq_descriptor_, &SetupPartnerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupPartnerAck_descriptor_, &SetupPartnerAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetPartnerReq_descriptor_, &UnsetPartnerReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetPartnerAck_descriptor_, &UnsetPartnerAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupMountReq_descriptor_, &SetupMountReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupMountAck_descriptor_, &SetupMountAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetMountReq_descriptor_, &UnsetMountReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetMountAck_descriptor_, &UnsetMountAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupPetReq_descriptor_, &SetupPetReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupPetAck_descriptor_, &SetupPetAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetPetReq_descriptor_, &UnsetPetReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnsetPetAck_descriptor_, &UnsetPetAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StoreBuyReq_descriptor_, &StoreBuyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StoreBuyAck_descriptor_, &StoreBuyAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ObjectChangeNotify_descriptor_, &ObjectChangeNotify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HitEffectItem_descriptor_, &HitEffectItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HitEffectNtf_descriptor_, &HitEffectNtf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UseItemReq_descriptor_, &UseItemReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UseItemAck_descriptor_, &UseItemAck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgGetRandomNameReq_descriptor_, &MsgGetRandomNameReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MsgGetRandomNameAck_descriptor_, &MsgGetRandomNameAck::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Msg_5fGame_2eproto() {
  delete SkillItem::default_instance_;
  delete SkillItem_reflection_;
  delete GmStopServerReq::default_instance_;
  delete GmStopServerReq_reflection_;
  delete GmStopServerAck::default_instance_;
  delete GmStopServerAck_reflection_;
  delete CheckVersionReq::default_instance_;
  delete CheckVersionReq_reflection_;
  delete CheckVersionAck::default_instance_;
  delete CheckVersionAck_reflection_;
  delete AccountLog::default_instance_;
  delete AccountLog_reflection_;
  delete AccountRegReq::default_instance_;
  delete AccountRegReq_reflection_;
  delete AccountRegAck::default_instance_;
  delete AccountRegAck_reflection_;
  delete AccountLoginReq::default_instance_;
  delete AccountLoginReq_reflection_;
  delete AccountLoginAck::default_instance_;
  delete AccountLoginAck_reflection_;
  delete ClientServerListReq::default_instance_;
  delete ClientServerListReq_reflection_;
  delete ClientServerNode::default_instance_;
  delete ClientServerNode_reflection_;
  delete ClientServerListAck::default_instance_;
  delete ClientServerListAck_reflection_;
  delete SvrRegToSvrReq::default_instance_;
  delete SvrRegToSvrReq_reflection_;
  delete SvrRegToSvrAck::default_instance_;
  delete SvrRegToSvrAck_reflection_;
  delete SelectServerReq::default_instance_;
  delete SelectServerReq_reflection_;
  delete SelectServerAck::default_instance_;
  delete SelectServerAck_reflection_;
  delete RoleItem::default_instance_;
  delete RoleItem_reflection_;
  delete RoleListReq::default_instance_;
  delete RoleListReq_reflection_;
  delete RoleListAck::default_instance_;
  delete RoleListAck_reflection_;
  delete RoleCreateReq::default_instance_;
  delete RoleCreateReq_reflection_;
  delete RoleCreateAck::default_instance_;
  delete RoleCreateAck_reflection_;
  delete RoleDeleteReq::default_instance_;
  delete RoleDeleteReq_reflection_;
  delete RoleDeleteAck::default_instance_;
  delete RoleDeleteAck_reflection_;
  delete RoleLoginReq::default_instance_;
  delete RoleLoginReq_reflection_;
  delete RoleLogoutReq::default_instance_;
  delete RoleLogoutReq_reflection_;
  delete RoleLogoutAck::default_instance_;
  delete RoleLogoutAck_reflection_;
  delete RoleDisconnectReq::default_instance_;
  delete RoleDisconnectReq_reflection_;
  delete RoleDisconnectAck::default_instance_;
  delete RoleDisconnectAck_reflection_;
  delete RoleReconnectReq::default_instance_;
  delete RoleReconnectReq_reflection_;
  delete RoleReconnectAck::default_instance_;
  delete RoleReconnectAck_reflection_;
  delete RemoveConnectNty::default_instance_;
  delete RemoveConnectNty_reflection_;
  delete CreateNewSceneReq::default_instance_;
  delete CreateNewSceneReq_reflection_;
  delete CreateNewSceneAck::default_instance_;
  delete CreateNewSceneAck_reflection_;
  delete EnterSceneReq::default_instance_;
  delete EnterSceneReq_reflection_;
  delete EnterSceneAck::default_instance_;
  delete EnterSceneAck_reflection_;
  delete BackToCityReq::default_instance_;
  delete BackToCityReq_reflection_;
  delete BackToCityAck::default_instance_;
  delete BackToCityAck_reflection_;
  delete LeaveSceneReq::default_instance_;
  delete LeaveSceneReq_reflection_;
  delete LeaveSceneAck::default_instance_;
  delete LeaveSceneAck_reflection_;
  delete AbortSceneReq::default_instance_;
  delete AbortSceneReq_reflection_;
  delete AbortSceneAck::default_instance_;
  delete AbortSceneAck_reflection_;
  delete AbortSceneNty::default_instance_;
  delete AbortSceneNty_reflection_;
  delete TransRoleData::default_instance_;
  delete TransRoleData_reflection_;
  delete TransPetData::default_instance_;
  delete TransPetData_reflection_;
  delete TransPartnerData::default_instance_;
  delete TransPartnerData_reflection_;
  delete TransferDataItem::default_instance_;
  delete TransferDataItem_reflection_;
  delete TransferDataReq::default_instance_;
  delete TransferDataReq_reflection_;
  delete TransferDataAck::default_instance_;
  delete TransferDataAck_reflection_;
  delete NotifyIntoScene::default_instance_;
  delete NotifyIntoScene_reflection_;
  delete NearByRoleItem::default_instance_;
  delete NearByRoleItem_reflection_;
  delete CopyInsItem::default_instance_;
  delete CopyInsItem_reflection_;
  delete CopyReportReq::default_instance_;
  delete CopyReportReq_reflection_;
  delete UseHpBottleReq::default_instance_;
  delete UseHpBottleReq_reflection_;
  delete UseHpBottleAck::default_instance_;
  delete UseHpBottleAck_reflection_;
  delete UseMpBottleReq::default_instance_;
  delete UseMpBottleReq_reflection_;
  delete UseMpBottleAck::default_instance_;
  delete UseMpBottleAck_reflection_;
  delete ChatMessageReq::default_instance_;
  delete ChatMessageReq_reflection_;
  delete ChatMessageAck::default_instance_;
  delete ChatMessageAck_reflection_;
  delete ChatMessageNty::default_instance_;
  delete ChatMessageNty_reflection_;
  delete SealAccountReq::default_instance_;
  delete SealAccountReq_reflection_;
  delete SealAccountAck::default_instance_;
  delete SealAccountAck_reflection_;
  delete SetLastServerNty::default_instance_;
  delete SetLastServerNty_reflection_;
  delete CommonReq::default_instance_;
  delete CommonReq_reflection_;
  delete CommonAck::default_instance_;
  delete CommonAck_reflection_;
  delete BroadMessageNotify::default_instance_;
  delete BroadMessageNotify_reflection_;
  delete LogicRegToLoginReq::default_instance_;
  delete LogicRegToLoginReq_reflection_;
  delete LogicRegToLoginAck::default_instance_;
  delete LogicRegToLoginAck_reflection_;
  delete LogicUpdateInfoReq::default_instance_;
  delete LogicUpdateInfoReq_reflection_;
  delete LogicUpdateInfoAck::default_instance_;
  delete LogicUpdateInfoAck_reflection_;
  delete WatchHeartBeatReq::default_instance_;
  delete WatchHeartBeatReq_reflection_;
  delete WatchHeartBeatAck::default_instance_;
  delete WatchHeartBeatAck_reflection_;
  delete SetupEquipReq::default_instance_;
  delete SetupEquipReq_reflection_;
  delete SetupEquipAck::default_instance_;
  delete SetupEquipAck_reflection_;
  delete UnsetEquipReq::default_instance_;
  delete UnsetEquipReq_reflection_;
  delete UnsetEquipAck::default_instance_;
  delete UnsetEquipAck_reflection_;
  delete SetupGemReq::default_instance_;
  delete SetupGemReq_reflection_;
  delete SetupGemAck::default_instance_;
  delete SetupGemAck_reflection_;
  delete UnsetGemReq::default_instance_;
  delete UnsetGemReq_reflection_;
  delete UnsetGemAck::default_instance_;
  delete UnsetGemAck_reflection_;
  delete SetupPartnerReq::default_instance_;
  delete SetupPartnerReq_reflection_;
  delete SetupPartnerAck::default_instance_;
  delete SetupPartnerAck_reflection_;
  delete UnsetPartnerReq::default_instance_;
  delete UnsetPartnerReq_reflection_;
  delete UnsetPartnerAck::default_instance_;
  delete UnsetPartnerAck_reflection_;
  delete SetupMountReq::default_instance_;
  delete SetupMountReq_reflection_;
  delete SetupMountAck::default_instance_;
  delete SetupMountAck_reflection_;
  delete UnsetMountReq::default_instance_;
  delete UnsetMountReq_reflection_;
  delete UnsetMountAck::default_instance_;
  delete UnsetMountAck_reflection_;
  delete SetupPetReq::default_instance_;
  delete SetupPetReq_reflection_;
  delete SetupPetAck::default_instance_;
  delete SetupPetAck_reflection_;
  delete UnsetPetReq::default_instance_;
  delete UnsetPetReq_reflection_;
  delete UnsetPetAck::default_instance_;
  delete UnsetPetAck_reflection_;
  delete StoreBuyReq::default_instance_;
  delete StoreBuyReq_reflection_;
  delete StoreBuyAck::default_instance_;
  delete StoreBuyAck_reflection_;
  delete ObjectChangeNotify::default_instance_;
  delete ObjectChangeNotify_reflection_;
  delete HitEffectItem::default_instance_;
  delete HitEffectItem_reflection_;
  delete HitEffectNtf::default_instance_;
  delete HitEffectNtf_reflection_;
  delete UseItemReq::default_instance_;
  delete UseItemReq_reflection_;
  delete UseItemAck::default_instance_;
  delete UseItemAck_reflection_;
  delete MsgGetRandomNameReq::default_instance_;
  delete MsgGetRandomNameReq_reflection_;
  delete MsgGetRandomNameAck::default_instance_;
  delete MsgGetRandomNameAck_reflection_;
}

void protobuf_AddDesc_Msg_5fGame_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_Msg_5fGame_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016Msg_Game.proto\";\n\tSkillItem\022\017\n\007SkillID"
    "\030\001 \001(\r\022\r\n\005Level\030\002 \001(\005\022\016\n\006KeyPos\030\003 \001(\005\"\037\n"
    "\017GmStopServerReq\022\014\n\004Data\030\001 \001(\r\"\"\n\017GmStop"
    "ServerAck\022\017\n\007RetCode\030\001 \001(\r\"8\n\017CheckVersi"
    "onReq\022\024\n\014ClientVerion\030\001 \001(\t\022\017\n\007Channel\030\002"
    " \001(\005\"8\n\017CheckVersionAck\022\017\n\007RetCode\030\001 \001(\r"
    "\022\024\n\014ClientVerion\030\002 \001(\t\"\323\001\n\nAccountLog\022\017\n"
    "\007Channel\030\001 \001(\005\022\017\n\007Version\030\002 \001(\t\022\021\n\tAccou"
    "ntID\030\003 \001(\005\022\014\n\004Uuid\030\004 \001(\t\022\014\n\004Idfa\030\005 \001(\t\022\017"
    "\n\007NetType\030\006 \001(\t\022\016\n\006Imodel\030\007 \001(\t\022\014\n\004Imei\030"
    "\010 \001(\t\022\022\n\nResolution\030\t \001(\t\022\020\n\010PhoneCpu\030\n "
    "\001(\t\022\017\n\007MacAddr\030\013 \001(\t\022\016\n\006IpAddr\030\014 \001(\005\"d\n\r"
    "AccountRegReq\022\023\n\013AccountName\030\001 \001(\t\022\020\n\010Pa"
    "ssword\030\002 \001(\t\022\017\n\007Channel\030\003 \001(\005\022\033\n\006RegLog\030"
    "\004 \001(\0132\013.AccountLog\"3\n\rAccountRegAck\022\017\n\007R"
    "etCode\030\001 \001(\r\022\021\n\tAccountID\030\002 \001(\004\"}\n\017Accou"
    "ntLoginReq\022\023\n\013AccountName\030\001 \001(\t\022\020\n\010Passw"
    "ord\030\002 \001(\t\022\017\n\007Channel\030\003 \001(\005\022\023\n\013FromChanne"
    "l\030\004 \001(\r\022\035\n\010LoginLog\030\005 \001(\0132\013.AccountLog\"]"
    "\n\017AccountLoginAck\022\017\n\007RetCode\030\001 \001(\r\022\021\n\tAc"
    "countID\030\002 \001(\004\022\021\n\tLastSvrID\030\003 \001(\005\022\023\n\013Last"
    "SvrName\030\004 \001(\t\"P\n\023ClientServerListReq\022\021\n\t"
    "AccountID\030\001 \001(\004\022\017\n\007Channel\030\002 \001(\005\022\025\n\rClie"
    "ntVersion\030\003 \001(\t\"l\n\020ClientServerNode\022\r\n\005S"
    "vrID\030\001 \001(\005\022\017\n\007SvrName\030\002 \001(\t\022\017\n\007SvrFlag\030\003"
    " \001(\005\022\022\n\nCornerMark\030\004 \001(\005\022\023\n\013SvrOpenTime\030"
    "\005 \001(\003\"J\n\023ClientServerListAck\022\017\n\007RetCode\030"
    "\001 \001(\r\022\"\n\007SvrNode\030\002 \003(\0132\021.ClientServerNod"
    "e\"n\n\016SvrRegToSvrReq\022\020\n\010ServerID\030\001 \001(\005\022\022\n"
    "\nServerName\030\002 \001(\t\022\020\n\010ServerIp\030\003 \001(\t\022\022\n\nS"
    "erverPort\030\004 \001(\005\022\020\n\010HttpPort\030\005 \001(\005\"5\n\016Svr"
    "RegToSvrAck\022\017\n\007RetCode\030\001 \001(\r\022\022\n\nNewSvrNa"
    "me\030\002 \001(\t\"6\n\017SelectServerReq\022\021\n\tAccountID"
    "\030\001 \001(\004\022\020\n\010ServerID\030\002 \001(\005\"\202\001\n\017SelectServe"
    "rAck\022\017\n\007RetCode\030\001 \001(\r\022\021\n\tAccountID\030\002 \001(\004"
    "\022\020\n\010ServerID\030\003 \001(\005\022\022\n\nServerAddr\030\004 \001(\t\022\022"
    "\n\nServerPort\030\005 \001(\005\022\021\n\tLoginCode\030\006 \001(\005\"G\n"
    "\010RoleItem\022\016\n\006RoleID\030\001 \001(\004\022\014\n\004Name\030\002 \001(\t\022"
    "\016\n\006Carrer\030\003 \001(\005\022\r\n\005Level\030\004 \001(\005\"3\n\013RoleLi"
    "stReq\022\021\n\tAccountID\030\001 \001(\004\022\021\n\tLoginCode\030\002 "
    "\001(\005\"N\n\013RoleListAck\022\017\n\007RetCode\030\001 \001(\r\022\021\n\tA"
    "ccountID\030\002 \001(\004\022\033\n\010RoleList\030\003 \003(\0132\t.RoleI"
    "tem\"Q\n\rRoleCreateReq\022\021\n\tAccountID\030\001 \001(\004\022"
    "\014\n\004Name\030\002 \001(\t\022\016\n\006Carrer\030\003 \001(\005\022\017\n\007Channel"
    "\030\004 \001(\005\"a\n\rRoleCreateAck\022\017\n\007RetCode\030\001 \001(\r"
    "\022\021\n\tAccountID\030\002 \001(\004\022\016\n\006RoleID\030\003 \001(\004\022\014\n\004N"
    "ame\030\004 \001(\t\022\016\n\006Carrer\030\005 \001(\005\"2\n\rRoleDeleteR"
    "eq\022\021\n\tAccountID\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004\" \n"
    "\rRoleDeleteAck\022\017\n\007RetCode\030\001 \001(\r\"D\n\014RoleL"
    "oginReq\022\021\n\tAccountID\030\001 \001(\004\022\016\n\006RoleID\030\002 \001"
    "(\004\022\021\n\tLoginCode\030\003 \001(\005\"\"\n\rRoleLogoutReq\022\021"
    "\n\tAccountID\030\001 \001(\004\" \n\rRoleLogoutAck\022\017\n\007Re"
    "tCode\030\001 \001(\r\"I\n\021RoleDisconnectReq\022\021\n\tAcco"
    "untID\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004\022\021\n\tLoginCode"
    "\030\003 \001(\005\"$\n\021RoleDisconnectAck\022\017\n\007RetCode\030\001"
    " \001(\r\"\"\n\020RoleReconnectReq\022\016\n\006RoleID\030\001 \001(\004"
    "\"#\n\020RoleReconnectAck\022\017\n\007RetCode\030\001 \001(\r\"\"\n"
    "\020RemoveConnectNty\022\016\n\006RoleID\030\001 \001(\004\"]\n\021Cre"
    "ateNewSceneReq\022\016\n\006CopyID\030\001 \001(\005\022\020\n\010CopyTy"
    "pe\030\002 \001(\005\022\021\n\tPlayerNum\030\003 \001(\005\022\023\n\013CreatePar"
    "am\030\004 \001(\004\"\222\001\n\021CreateNewSceneAck\022\017\n\007RetCod"
    "e\030\001 \001(\r\022\016\n\006CopyID\030\002 \001(\005\022\020\n\010CopyGuid\030\003 \001("
    "\005\022\023\n\013CreateParam\030\004 \001(\004\022\020\n\010ServerID\030\005 \001(\005"
    "\022\020\n\010CopyType\030\006 \001(\005\022\021\n\tPlayerNum\030\007 \001(\005\"S\n"
    "\rEnterSceneReq\022\016\n\006RoleID\030\001 \001(\004\022\020\n\010Server"
    "ID\030\002 \001(\005\022\020\n\010CopyGuid\030\003 \001(\005\022\016\n\006CopyID\030\004 \001"
    "(\005\"\302\002\n\rEnterSceneAck\022\017\n\007RetCode\030\001 \001(\r\022\016\n"
    "\006CopyID\030\002 \001(\005\022\020\n\010CopyGuid\030\003 \001(\005\022\016\n\006RoleI"
    "D\030\004 \001(\004\022\016\n\006Carrer\030\005 \001(\005\022\017\n\007ActorID\030\006 \001(\005"
    "\022\020\n\010RoleName\030\007 \001(\t\022\014\n\004Camp\030\010 \001(\005\022\t\n\001X\030\t "
    "\001(\002\022\t\n\001Y\030\n \001(\002\022\t\n\001Z\030\013 \001(\002\022\n\n\002Ft\030\014 \001(\002\022\n\n"
    "\002Hp\030\r \001(\005\022\n\n\002Mp\030\016 \001(\005\022\r\n\005HpMax\030\017 \001(\005\022\r\n\005"
    "MpMax\030\020 \001(\005\022\r\n\005Speed\030\021 \001(\005\022\017\n\007MountID\030\022 "
    "\001(\005\022\016\n\006Equips\030\023 \003(\005\022\032\n\006Skills\030\024 \003(\0132\n.Sk"
    "illItem\"\036\n\rBackToCityReq\022\r\n\005Param\030\001 \001(\r\""
    " \n\rBackToCityAck\022\017\n\007RetCode\030\001 \001(\r\"/\n\rLea"
    "veSceneReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006Reason\030\002 \001"
    "(\005\" \n\rLeaveSceneAck\022\017\n\007RetCode\030\001 \001(\r\"/\n\r"
    "AbortSceneReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006Reason\030"
    "\002 \001(\005\" \n\rAbortSceneAck\022\017\n\007RetCode\030\001 \001(\r\""
    "t\n\rAbortSceneNty\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006Copy"
    "ID\030\002 \001(\005\022\020\n\010CopyGuid\030\003 \001(\005\022\020\n\010CopyType\030\004"
    " \001(\005\022\020\n\010ServerID\030\005 \001(\005\022\r\n\005Param\030\006 \001(\005\"\276\001"
    "\n\rTransRoleData\022\016\n\006RoleID\030\001 \001(\004\022\014\n\004Name\030"
    "\002 \001(\t\022\020\n\010CarrerID\030\003 \001(\005\022\017\n\007ActorID\030\004 \001(\005"
    "\022\r\n\005Level\030\005 \001(\005\022\017\n\007MountID\030\006 \001(\005\022\r\n\005Robo"
    "t\030\007 \001(\005\022\016\n\006Equips\030\010 \003(\005\022\021\n\tPropertys\030\t \003"
    "(\005\022\032\n\006Skills\030\n \003(\0132\n.SkillItem\"\213\001\n\014Trans"
    "PetData\022\017\n\007PetGuid\030\001 \001(\004\022\r\n\005PetID\030\002 \001(\005\022"
    "\017\n\007ActorID\030\003 \001(\005\022\014\n\004Name\030\004 \001(\t\022\r\n\005Level\030"
    "\005 \001(\005\022\021\n\tPropertys\030\006 \003(\005\022\032\n\006Skills\030\007 \003(\013"
    "2\n.SkillItem\"\227\001\n\020TransPartnerData\022\023\n\013Par"
    "tnerGuid\030\001 \001(\004\022\021\n\tPartnerID\030\002 \001(\005\022\017\n\007Act"
    "orID\030\003 \001(\005\022\014\n\004Name\030\004 \001(\t\022\r\n\005Level\030\005 \001(\005\022"
    "\021\n\tPropertys\030\006 \003(\005\022\032\n\006Skills\030\007 \003(\0132\n.Ski"
    "llItem\"\212\001\n\020TransferDataItem\022\014\n\004Camp\030\001 \001("
    "\005\022 \n\010RoleData\030\002 \001(\0132\016.TransRoleData\022\036\n\007P"
    "etData\030\003 \001(\0132\r.TransPetData\022&\n\013PartnerDa"
    "ta\030\004 \001(\0132\021.TransPartnerData\"8\n\017TransferD"
    "ataReq\022%\n\nTransDatas\030\001 \003(\0132\021.TransferDat"
    "aItem\"f\n\017TransferDataAck\022\017\n\007RetCode\030\001 \001("
    "\r\022\016\n\006RoleID\030\002 \001(\004\022\016\n\006CopyID\030\003 \001(\005\022\020\n\010Cop"
    "yGuid\030\004 \001(\005\022\020\n\010ServerID\030\005 \001(\005\"U\n\017NotifyI"
    "ntoScene\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006CopyID\030\002 \001(\005"
    "\022\020\n\010CopyGuid\030\003 \001(\005\022\020\n\010ServerID\030\004 \001(\005\"N\n\016"
    "NearByRoleItem\022\016\n\006RoleID\030\001 \001(\004\022\017\n\007ActorI"
    "D\030\002 \001(\005\022\r\n\005Level\030\003 \001(\005\022\014\n\004Name\030\004 \001(\t\"S\n\013"
    "CopyInsItem\022\020\n\010CopyGuid\030\001 \001(\r\022\016\n\006CopyID\030"
    "\002 \001(\005\022\020\n\010CopyType\030\003 \001(\005\022\020\n\010ServerID\030\004 \001("
    "\005\"A\n\rCopyReportReq\022\020\n\010ServerID\030\001 \001(\005\022\036\n\010"
    "CopyList\030\002 \003(\0132\014.CopyInsItem\"\020\n\016UseHpBot"
    "tleReq\"0\n\016UseHpBottleAck\022\017\n\007RetCode\030\001 \001("
    "\r\022\r\n\005Count\030\002 \001(\005\"\020\n\016UseMpBottleReq\"0\n\016Us"
    "eMpBottleAck\022\017\n\007RetCode\030\001 \001(\r\022\r\n\005Count\030\002"
    " \001(\005\"c\n\016ChatMessageReq\022\017\n\007SrcName\030\001 \001(\t\022"
    "\r\n\005SrcID\030\002 \001(\004\022\017\n\007Channel\030\003 \001(\005\022\017\n\007Guild"
    "ID\030\004 \001(\004\022\017\n\007Content\030\005 \001(\t\"!\n\016ChatMessage"
    "Ack\022\017\n\007RetCode\030\001 \001(\r\"c\n\016ChatMessageNty\022\017"
    "\n\007SrcName\030\001 \001(\t\022\r\n\005SrcID\030\002 \001(\004\022\017\n\007Channe"
    "l\030\003 \001(\005\022\017\n\007GuildID\030\004 \001(\004\022\017\n\007Content\030\005 \001("
    "\t\"i\n\016SealAccountReq\022\023\n\013AccountName\030\001 \001(\t"
    "\022\021\n\tAccountID\030\002 \001(\004\022\017\n\007Channel\030\003 \001(\005\022\020\n\010"
    "SealTime\030\004 \001(\005\022\014\n\004Seal\030\005 \001(\010\"I\n\016SealAcco"
    "untAck\022\017\n\007RetCode\030\001 \001(\r\022\023\n\013AccountName\030\002"
    " \001(\t\022\021\n\tAccountID\030\003 \001(\004\"7\n\020SetLastServer"
    "Nty\022\021\n\tAccountID\030\001 \001(\004\022\020\n\010ServerID\030\002 \001(\005"
    "\"\033\n\tCommonReq\022\016\n\006Param1\030\001 \001(\r\"\034\n\tCommonA"
    "ck\022\017\n\007RetCode\030\001 \001(\r\"D\n\022BroadMessageNotif"
    "y\022\r\n\005MsgID\030\001 \001(\r\022\016\n\006ConnID\030\002 \003(\r\022\017\n\007MsgD"
    "ata\030\003 \001(\014\"\207\001\n\022LogicRegToLoginReq\022\020\n\010Serv"
    "erID\030\001 \001(\005\022\022\n\nServerName\030\002 \001(\t\022\022\n\nSvrInn"
    "erIp\030\003 \001(\t\022\022\n\nServerPort\030\004 \001(\005\022\020\n\010HttpPo"
    "rt\030\005 \001(\005\022\021\n\tWatchPort\030\006 \001(\005\"9\n\022LogicRegT"
    "oLoginAck\022\017\n\007RetCode\030\001 \001(\r\022\022\n\nNewSvrName"
    "\030\002 \001(\t\"\224\001\n\022LogicUpdateInfoReq\022\020\n\010ServerI"
    "D\030\001 \001(\005\022\022\n\nServerName\030\002 \001(\t\022\021\n\tMaxOnline"
    "\030\003 \001(\005\022\021\n\tCurOnline\030\004 \001(\005\022\020\n\010TotalNum\030\005 "
    "\001(\005\022\020\n\010CacheNum\030\006 \001(\005\022\016\n\006Status\030\007 \001(\005\":\n"
    "\022LogicUpdateInfoAck\022\017\n\007RetCode\030\001 \001(\r\022\023\n\013"
    "SvrOpenTime\030\002 \001(\004\"4\n\021WatchHeartBeatReq\022\014"
    "\n\004Data\030\001 \001(\r\022\021\n\tProcessID\030\002 \001(\004\"E\n\021Watch"
    "HeartBeatAck\022\017\n\007RetCode\030\001 \001(\r\022\014\n\004Data\030\002 "
    "\001(\r\022\021\n\tProcessID\030\003 \001(\004\"3\n\rSetupEquipReq\022"
    "\021\n\tEquipGuid\030\001 \001(\004\022\017\n\007BagGuid\030\002 \001(\004\" \n\rS"
    "etupEquipAck\022\017\n\007RetCode\030\001 \001(\r\"\"\n\rUnsetEq"
    "uipReq\022\021\n\tEquipGuid\030\001 \001(\004\" \n\rUnsetEquipA"
    "ck\022\017\n\007RetCode\030\001 \001(\r\"B\n\013SetupGemReq\022\017\n\007Ge"
    "mGuid\030\001 \001(\004\022\017\n\007BagGuid\030\002 \001(\004\022\021\n\tTargetPo"
    "s\030\003 \001(\005\"\036\n\013SetupGemAck\022\017\n\007RetCode\030\001 \001(\r\""
    "\036\n\013UnsetGemReq\022\017\n\007GemGuid\030\001 \001(\004\"\036\n\013Unset"
    "GemAck\022\017\n\007RetCode\030\001 \001(\r\"9\n\017SetupPartnerR"
    "eq\022\023\n\013PartnerGuid\030\001 \001(\004\022\021\n\tTargetPos\030\002 \001"
    "(\005\"\"\n\017SetupPartnerAck\022\017\n\007RetCode\030\001 \001(\r\"$"
    "\n\017UnsetPartnerReq\022\021\n\tTargetPos\030\001 \001(\005\"\"\n\017"
    "UnsetPartnerAck\022\017\n\007RetCode\030\001 \001(\r\"5\n\rSetu"
    "pMountReq\022\021\n\tMountGuid\030\001 \001(\004\022\021\n\tTargetPo"
    "s\030\002 \001(\005\" \n\rSetupMountAck\022\017\n\007RetCode\030\001 \001("
    "\r\"\"\n\rUnsetMountReq\022\021\n\tMountGuid\030\001 \001(\004\" \n"
    "\rUnsetMountAck\022\017\n\007RetCode\030\001 \001(\r\"\036\n\013Setup"
    "PetReq\022\017\n\007PetGuid\030\001 \001(\004\"\036\n\013SetupPetAck\022\017"
    "\n\007RetCode\030\001 \001(\r\"\036\n\013UnsetPetReq\022\017\n\007PetGui"
    "d\030\001 \001(\004\"\036\n\013UnsetPetAck\022\017\n\007RetCode\030\001 \001(\r\""
    "A\n\013StoreBuyReq\022\021\n\tStoreType\030\001 \001(\005\022\017\n\007Sto"
    "reID\030\002 \001(\005\022\016\n\006BuyNum\030\003 \001(\005\"\036\n\013StoreBuyAc"
    "k\022\017\n\007RetCode\030\001 \001(\r\"p\n\022ObjectChangeNotify"
    "\022\016\n\006RoleID\030\001 \001(\003\022\022\n\nChangeType\030\002 \001(\005\022\021\n\t"
    "IntValue1\030\003 \001(\003\022\021\n\tIntValue2\030\004 \001(\003\022\020\n\010St"
    "rValue\030\005 \001(\t\"\225\001\n\rHitEffectItem\022\020\n\010CastGu"
    "id\030\001 \001(\004\022\022\n\nTargetGuid\030\002 \001(\004\022\021\n\tHurtValu"
    "e\030\003 \001(\005\022\014\n\004Crit\030\004 \001(\010\022\023\n\013HitActionID\030\005 \001"
    "(\r\022\023\n\013HitEffectID\030\006 \001(\r\022\023\n\013HitDistance\030\007"
    " \001(\002\"0\n\014HitEffectNtf\022 \n\010ItemList\030\001 \003(\0132\016"
    ".HitEffectItem\"\014\n\nUseItemReq\"\014\n\nUseItemA"
    "ck\"\"\n\023MsgGetRandomNameReq\022\013\n\003Sex\030\001 \001(\005\"#"
    "\n\023MsgGetRandomNameAck\022\014\n\004Name\030\001 \001(\tb\006pro"
    "to3", 7003);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_Game.proto", &protobuf_RegisterTypes);
  SkillItem::default_instance_ = new SkillItem();
  GmStopServerReq::default_instance_ = new GmStopServerReq();
  GmStopServerAck::default_instance_ = new GmStopServerAck();
  CheckVersionReq::default_instance_ = new CheckVersionReq();
  CheckVersionAck::default_instance_ = new CheckVersionAck();
  AccountLog::default_instance_ = new AccountLog();
  AccountRegReq::default_instance_ = new AccountRegReq();
  AccountRegAck::default_instance_ = new AccountRegAck();
  AccountLoginReq::default_instance_ = new AccountLoginReq();
  AccountLoginAck::default_instance_ = new AccountLoginAck();
  ClientServerListReq::default_instance_ = new ClientServerListReq();
  ClientServerNode::default_instance_ = new ClientServerNode();
  ClientServerListAck::default_instance_ = new ClientServerListAck();
  SvrRegToSvrReq::default_instance_ = new SvrRegToSvrReq();
  SvrRegToSvrAck::default_instance_ = new SvrRegToSvrAck();
  SelectServerReq::default_instance_ = new SelectServerReq();
  SelectServerAck::default_instance_ = new SelectServerAck();
  RoleItem::default_instance_ = new RoleItem();
  RoleListReq::default_instance_ = new RoleListReq();
  RoleListAck::default_instance_ = new RoleListAck();
  RoleCreateReq::default_instance_ = new RoleCreateReq();
  RoleCreateAck::default_instance_ = new RoleCreateAck();
  RoleDeleteReq::default_instance_ = new RoleDeleteReq();
  RoleDeleteAck::default_instance_ = new RoleDeleteAck();
  RoleLoginReq::default_instance_ = new RoleLoginReq();
  RoleLogoutReq::default_instance_ = new RoleLogoutReq();
  RoleLogoutAck::default_instance_ = new RoleLogoutAck();
  RoleDisconnectReq::default_instance_ = new RoleDisconnectReq();
  RoleDisconnectAck::default_instance_ = new RoleDisconnectAck();
  RoleReconnectReq::default_instance_ = new RoleReconnectReq();
  RoleReconnectAck::default_instance_ = new RoleReconnectAck();
  RemoveConnectNty::default_instance_ = new RemoveConnectNty();
  CreateNewSceneReq::default_instance_ = new CreateNewSceneReq();
  CreateNewSceneAck::default_instance_ = new CreateNewSceneAck();
  EnterSceneReq::default_instance_ = new EnterSceneReq();
  EnterSceneAck::default_instance_ = new EnterSceneAck();
  BackToCityReq::default_instance_ = new BackToCityReq();
  BackToCityAck::default_instance_ = new BackToCityAck();
  LeaveSceneReq::default_instance_ = new LeaveSceneReq();
  LeaveSceneAck::default_instance_ = new LeaveSceneAck();
  AbortSceneReq::default_instance_ = new AbortSceneReq();
  AbortSceneAck::default_instance_ = new AbortSceneAck();
  AbortSceneNty::default_instance_ = new AbortSceneNty();
  TransRoleData::default_instance_ = new TransRoleData();
  TransPetData::default_instance_ = new TransPetData();
  TransPartnerData::default_instance_ = new TransPartnerData();
  TransferDataItem::default_instance_ = new TransferDataItem();
  TransferDataReq::default_instance_ = new TransferDataReq();
  TransferDataAck::default_instance_ = new TransferDataAck();
  NotifyIntoScene::default_instance_ = new NotifyIntoScene();
  NearByRoleItem::default_instance_ = new NearByRoleItem();
  CopyInsItem::default_instance_ = new CopyInsItem();
  CopyReportReq::default_instance_ = new CopyReportReq();
  UseHpBottleReq::default_instance_ = new UseHpBottleReq();
  UseHpBottleAck::default_instance_ = new UseHpBottleAck();
  UseMpBottleReq::default_instance_ = new UseMpBottleReq();
  UseMpBottleAck::default_instance_ = new UseMpBottleAck();
  ChatMessageReq::default_instance_ = new ChatMessageReq();
  ChatMessageAck::default_instance_ = new ChatMessageAck();
  ChatMessageNty::default_instance_ = new ChatMessageNty();
  SealAccountReq::default_instance_ = new SealAccountReq();
  SealAccountAck::default_instance_ = new SealAccountAck();
  SetLastServerNty::default_instance_ = new SetLastServerNty();
  CommonReq::default_instance_ = new CommonReq();
  CommonAck::default_instance_ = new CommonAck();
  BroadMessageNotify::default_instance_ = new BroadMessageNotify();
  LogicRegToLoginReq::default_instance_ = new LogicRegToLoginReq();
  LogicRegToLoginAck::default_instance_ = new LogicRegToLoginAck();
  LogicUpdateInfoReq::default_instance_ = new LogicUpdateInfoReq();
  LogicUpdateInfoAck::default_instance_ = new LogicUpdateInfoAck();
  WatchHeartBeatReq::default_instance_ = new WatchHeartBeatReq();
  WatchHeartBeatAck::default_instance_ = new WatchHeartBeatAck();
  SetupEquipReq::default_instance_ = new SetupEquipReq();
  SetupEquipAck::default_instance_ = new SetupEquipAck();
  UnsetEquipReq::default_instance_ = new UnsetEquipReq();
  UnsetEquipAck::default_instance_ = new UnsetEquipAck();
  SetupGemReq::default_instance_ = new SetupGemReq();
  SetupGemAck::default_instance_ = new SetupGemAck();
  UnsetGemReq::default_instance_ = new UnsetGemReq();
  UnsetGemAck::default_instance_ = new UnsetGemAck();
  SetupPartnerReq::default_instance_ = new SetupPartnerReq();
  SetupPartnerAck::default_instance_ = new SetupPartnerAck();
  UnsetPartnerReq::default_instance_ = new UnsetPartnerReq();
  UnsetPartnerAck::default_instance_ = new UnsetPartnerAck();
  SetupMountReq::default_instance_ = new SetupMountReq();
  SetupMountAck::default_instance_ = new SetupMountAck();
  UnsetMountReq::default_instance_ = new UnsetMountReq();
  UnsetMountAck::default_instance_ = new UnsetMountAck();
  SetupPetReq::default_instance_ = new SetupPetReq();
  SetupPetAck::default_instance_ = new SetupPetAck();
  UnsetPetReq::default_instance_ = new UnsetPetReq();
  UnsetPetAck::default_instance_ = new UnsetPetAck();
  StoreBuyReq::default_instance_ = new StoreBuyReq();
  StoreBuyAck::default_instance_ = new StoreBuyAck();
  ObjectChangeNotify::default_instance_ = new ObjectChangeNotify();
  HitEffectItem::default_instance_ = new HitEffectItem();
  HitEffectNtf::default_instance_ = new HitEffectNtf();
  UseItemReq::default_instance_ = new UseItemReq();
  UseItemAck::default_instance_ = new UseItemAck();
  MsgGetRandomNameReq::default_instance_ = new MsgGetRandomNameReq();
  MsgGetRandomNameAck::default_instance_ = new MsgGetRandomNameAck();
  SkillItem::default_instance_->InitAsDefaultInstance();
  GmStopServerReq::default_instance_->InitAsDefaultInstance();
  GmStopServerAck::default_instance_->InitAsDefaultInstance();
  CheckVersionReq::default_instance_->InitAsDefaultInstance();
  CheckVersionAck::default_instance_->InitAsDefaultInstance();
  AccountLog::default_instance_->InitAsDefaultInstance();
  AccountRegReq::default_instance_->InitAsDefaultInstance();
  AccountRegAck::default_instance_->InitAsDefaultInstance();
  AccountLoginReq::default_instance_->InitAsDefaultInstance();
  AccountLoginAck::default_instance_->InitAsDefaultInstance();
  ClientServerListReq::default_instance_->InitAsDefaultInstance();
  ClientServerNode::default_instance_->InitAsDefaultInstance();
  ClientServerListAck::default_instance_->InitAsDefaultInstance();
  SvrRegToSvrReq::default_instance_->InitAsDefaultInstance();
  SvrRegToSvrAck::default_instance_->InitAsDefaultInstance();
  SelectServerReq::default_instance_->InitAsDefaultInstance();
  SelectServerAck::default_instance_->InitAsDefaultInstance();
  RoleItem::default_instance_->InitAsDefaultInstance();
  RoleListReq::default_instance_->InitAsDefaultInstance();
  RoleListAck::default_instance_->InitAsDefaultInstance();
  RoleCreateReq::default_instance_->InitAsDefaultInstance();
  RoleCreateAck::default_instance_->InitAsDefaultInstance();
  RoleDeleteReq::default_instance_->InitAsDefaultInstance();
  RoleDeleteAck::default_instance_->InitAsDefaultInstance();
  RoleLoginReq::default_instance_->InitAsDefaultInstance();
  RoleLogoutReq::default_instance_->InitAsDefaultInstance();
  RoleLogoutAck::default_instance_->InitAsDefaultInstance();
  RoleDisconnectReq::default_instance_->InitAsDefaultInstance();
  RoleDisconnectAck::default_instance_->InitAsDefaultInstance();
  RoleReconnectReq::default_instance_->InitAsDefaultInstance();
  RoleReconnectAck::default_instance_->InitAsDefaultInstance();
  RemoveConnectNty::default_instance_->InitAsDefaultInstance();
  CreateNewSceneReq::default_instance_->InitAsDefaultInstance();
  CreateNewSceneAck::default_instance_->InitAsDefaultInstance();
  EnterSceneReq::default_instance_->InitAsDefaultInstance();
  EnterSceneAck::default_instance_->InitAsDefaultInstance();
  BackToCityReq::default_instance_->InitAsDefaultInstance();
  BackToCityAck::default_instance_->InitAsDefaultInstance();
  LeaveSceneReq::default_instance_->InitAsDefaultInstance();
  LeaveSceneAck::default_instance_->InitAsDefaultInstance();
  AbortSceneReq::default_instance_->InitAsDefaultInstance();
  AbortSceneAck::default_instance_->InitAsDefaultInstance();
  AbortSceneNty::default_instance_->InitAsDefaultInstance();
  TransRoleData::default_instance_->InitAsDefaultInstance();
  TransPetData::default_instance_->InitAsDefaultInstance();
  TransPartnerData::default_instance_->InitAsDefaultInstance();
  TransferDataItem::default_instance_->InitAsDefaultInstance();
  TransferDataReq::default_instance_->InitAsDefaultInstance();
  TransferDataAck::default_instance_->InitAsDefaultInstance();
  NotifyIntoScene::default_instance_->InitAsDefaultInstance();
  NearByRoleItem::default_instance_->InitAsDefaultInstance();
  CopyInsItem::default_instance_->InitAsDefaultInstance();
  CopyReportReq::default_instance_->InitAsDefaultInstance();
  UseHpBottleReq::default_instance_->InitAsDefaultInstance();
  UseHpBottleAck::default_instance_->InitAsDefaultInstance();
  UseMpBottleReq::default_instance_->InitAsDefaultInstance();
  UseMpBottleAck::default_instance_->InitAsDefaultInstance();
  ChatMessageReq::default_instance_->InitAsDefaultInstance();
  ChatMessageAck::default_instance_->InitAsDefaultInstance();
  ChatMessageNty::default_instance_->InitAsDefaultInstance();
  SealAccountReq::default_instance_->InitAsDefaultInstance();
  SealAccountAck::default_instance_->InitAsDefaultInstance();
  SetLastServerNty::default_instance_->InitAsDefaultInstance();
  CommonReq::default_instance_->InitAsDefaultInstance();
  CommonAck::default_instance_->InitAsDefaultInstance();
  BroadMessageNotify::default_instance_->InitAsDefaultInstance();
  LogicRegToLoginReq::default_instance_->InitAsDefaultInstance();
  LogicRegToLoginAck::default_instance_->InitAsDefaultInstance();
  LogicUpdateInfoReq::default_instance_->InitAsDefaultInstance();
  LogicUpdateInfoAck::default_instance_->InitAsDefaultInstance();
  WatchHeartBeatReq::default_instance_->InitAsDefaultInstance();
  WatchHeartBeatAck::default_instance_->InitAsDefaultInstance();
  SetupEquipReq::default_instance_->InitAsDefaultInstance();
  SetupEquipAck::default_instance_->InitAsDefaultInstance();
  UnsetEquipReq::default_instance_->InitAsDefaultInstance();
  UnsetEquipAck::default_instance_->InitAsDefaultInstance();
  SetupGemReq::default_instance_->InitAsDefaultInstance();
  SetupGemAck::default_instance_->InitAsDefaultInstance();
  UnsetGemReq::default_instance_->InitAsDefaultInstance();
  UnsetGemAck::default_instance_->InitAsDefaultInstance();
  SetupPartnerReq::default_instance_->InitAsDefaultInstance();
  SetupPartnerAck::default_instance_->InitAsDefaultInstance();
  UnsetPartnerReq::default_instance_->InitAsDefaultInstance();
  UnsetPartnerAck::default_instance_->InitAsDefaultInstance();
  SetupMountReq::default_instance_->InitAsDefaultInstance();
  SetupMountAck::default_instance_->InitAsDefaultInstance();
  UnsetMountReq::default_instance_->InitAsDefaultInstance();
  UnsetMountAck::default_instance_->InitAsDefaultInstance();
  SetupPetReq::default_instance_->InitAsDefaultInstance();
  SetupPetAck::default_instance_->InitAsDefaultInstance();
  UnsetPetReq::default_instance_->InitAsDefaultInstance();
  UnsetPetAck::default_instance_->InitAsDefaultInstance();
  StoreBuyReq::default_instance_->InitAsDefaultInstance();
  StoreBuyAck::default_instance_->InitAsDefaultInstance();
  ObjectChangeNotify::default_instance_->InitAsDefaultInstance();
  HitEffectItem::default_instance_->InitAsDefaultInstance();
  HitEffectNtf::default_instance_->InitAsDefaultInstance();
  UseItemReq::default_instance_->InitAsDefaultInstance();
  UseItemAck::default_instance_->InitAsDefaultInstance();
  MsgGetRandomNameReq::default_instance_->InitAsDefaultInstance();
  MsgGetRandomNameAck::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Msg_5fGame_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Msg_5fGame_2eproto {
  StaticDescriptorInitializer_Msg_5fGame_2eproto() {
    protobuf_AddDesc_Msg_5fGame_2eproto();
  }
} static_descriptor_initializer_Msg_5fGame_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkillItem::kSkillIDFieldNumber;
const int SkillItem::kLevelFieldNumber;
const int SkillItem::kKeyPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkillItem::SkillItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SkillItem)
}

void SkillItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SkillItem::SkillItem(const SkillItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SkillItem)
}

void SkillItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  skillid_ = 0u;
  level_ = 0;
  keypos_ = 0;
}

SkillItem::~SkillItem() {
  // @@protoc_insertion_point(destructor:SkillItem)
  SharedDtor();
}

void SkillItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SkillItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkillItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SkillItem_descriptor_;
}

const SkillItem& SkillItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SkillItem* SkillItem::default_instance_ = NULL;

SkillItem* SkillItem::New(::google::protobuf::Arena* arena) const {
  SkillItem* n = new SkillItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkillItem::Clear() {
// @@protoc_insertion_point(message_clear_start:SkillItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SkillItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SkillItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(skillid_, keypos_);

#undef ZR_HELPER_
#undef ZR_

}

bool SkillItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SkillItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 SkillID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skillid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Level;
        break;
      }

      // optional int32 Level = 2;
      case 2: {
        if (tag == 16) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_KeyPos;
        break;
      }

      // optional int32 KeyPos = 3;
      case 3: {
        if (tag == 24) {
         parse_KeyPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keypos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SkillItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SkillItem)
  return false;
#undef DO_
}

void SkillItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SkillItem)
  // optional uint32 SkillID = 1;
  if (this->skillid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->skillid(), output);
  }

  // optional int32 Level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // optional int32 KeyPos = 3;
  if (this->keypos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->keypos(), output);
  }

  // @@protoc_insertion_point(serialize_end:SkillItem)
}

::google::protobuf::uint8* SkillItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SkillItem)
  // optional uint32 SkillID = 1;
  if (this->skillid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->skillid(), target);
  }

  // optional int32 Level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // optional int32 KeyPos = 3;
  if (this->keypos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->keypos(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SkillItem)
  return target;
}

int SkillItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SkillItem)
  int total_size = 0;

  // optional uint32 SkillID = 1;
  if (this->skillid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skillid());
  }

  // optional int32 Level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional int32 KeyPos = 3;
  if (this->keypos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->keypos());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkillItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SkillItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SkillItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SkillItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SkillItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SkillItem)
    MergeFrom(*source);
  }
}

void SkillItem::MergeFrom(const SkillItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SkillItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.skillid() != 0) {
    set_skillid(from.skillid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.keypos() != 0) {
    set_keypos(from.keypos());
  }
}

void SkillItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkillItem::CopyFrom(const SkillItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SkillItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillItem::IsInitialized() const {

  return true;
}

void SkillItem::Swap(SkillItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkillItem::InternalSwap(SkillItem* other) {
  std::swap(skillid_, other->skillid_);
  std::swap(level_, other->level_);
  std::swap(keypos_, other->keypos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkillItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SkillItem_descriptor_;
  metadata.reflection = SkillItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkillItem

// optional uint32 SkillID = 1;
void SkillItem::clear_skillid() {
  skillid_ = 0u;
}
 ::google::protobuf::uint32 SkillItem::skillid() const {
  // @@protoc_insertion_point(field_get:SkillItem.SkillID)
  return skillid_;
}
 void SkillItem::set_skillid(::google::protobuf::uint32 value) {
  
  skillid_ = value;
  // @@protoc_insertion_point(field_set:SkillItem.SkillID)
}

// optional int32 Level = 2;
void SkillItem::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 SkillItem::level() const {
  // @@protoc_insertion_point(field_get:SkillItem.Level)
  return level_;
}
 void SkillItem::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:SkillItem.Level)
}

// optional int32 KeyPos = 3;
void SkillItem::clear_keypos() {
  keypos_ = 0;
}
 ::google::protobuf::int32 SkillItem::keypos() const {
  // @@protoc_insertion_point(field_get:SkillItem.KeyPos)
  return keypos_;
}
 void SkillItem::set_keypos(::google::protobuf::int32 value) {
  
  keypos_ = value;
  // @@protoc_insertion_point(field_set:SkillItem.KeyPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmStopServerReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmStopServerReq::GmStopServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GmStopServerReq)
}

void GmStopServerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GmStopServerReq::GmStopServerReq(const GmStopServerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GmStopServerReq)
}

void GmStopServerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  data_ = 0u;
}

GmStopServerReq::~GmStopServerReq() {
  // @@protoc_insertion_point(destructor:GmStopServerReq)
  SharedDtor();
}

void GmStopServerReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GmStopServerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmStopServerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GmStopServerReq_descriptor_;
}

const GmStopServerReq& GmStopServerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

GmStopServerReq* GmStopServerReq::default_instance_ = NULL;

GmStopServerReq* GmStopServerReq::New(::google::protobuf::Arena* arena) const {
  GmStopServerReq* n = new GmStopServerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmStopServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GmStopServerReq)
  data_ = 0u;
}

bool GmStopServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GmStopServerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GmStopServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GmStopServerReq)
  return false;
#undef DO_
}

void GmStopServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GmStopServerReq)
  // optional uint32 Data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:GmStopServerReq)
}

::google::protobuf::uint8* GmStopServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GmStopServerReq)
  // optional uint32 Data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GmStopServerReq)
  return target;
}

int GmStopServerReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GmStopServerReq)
  int total_size = 0;

  // optional uint32 Data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmStopServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GmStopServerReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GmStopServerReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GmStopServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GmStopServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GmStopServerReq)
    MergeFrom(*source);
  }
}

void GmStopServerReq::MergeFrom(const GmStopServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GmStopServerReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
}

void GmStopServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GmStopServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmStopServerReq::CopyFrom(const GmStopServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GmStopServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmStopServerReq::IsInitialized() const {

  return true;
}

void GmStopServerReq::Swap(GmStopServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmStopServerReq::InternalSwap(GmStopServerReq* other) {
  std::swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmStopServerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GmStopServerReq_descriptor_;
  metadata.reflection = GmStopServerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GmStopServerReq

// optional uint32 Data = 1;
void GmStopServerReq::clear_data() {
  data_ = 0u;
}
 ::google::protobuf::uint32 GmStopServerReq::data() const {
  // @@protoc_insertion_point(field_get:GmStopServerReq.Data)
  return data_;
}
 void GmStopServerReq::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:GmStopServerReq.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmStopServerAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmStopServerAck::GmStopServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GmStopServerAck)
}

void GmStopServerAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GmStopServerAck::GmStopServerAck(const GmStopServerAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GmStopServerAck)
}

void GmStopServerAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

GmStopServerAck::~GmStopServerAck() {
  // @@protoc_insertion_point(destructor:GmStopServerAck)
  SharedDtor();
}

void GmStopServerAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GmStopServerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmStopServerAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GmStopServerAck_descriptor_;
}

const GmStopServerAck& GmStopServerAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

GmStopServerAck* GmStopServerAck::default_instance_ = NULL;

GmStopServerAck* GmStopServerAck::New(::google::protobuf::Arena* arena) const {
  GmStopServerAck* n = new GmStopServerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmStopServerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:GmStopServerAck)
  retcode_ = 0u;
}

bool GmStopServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GmStopServerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GmStopServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GmStopServerAck)
  return false;
#undef DO_
}

void GmStopServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GmStopServerAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:GmStopServerAck)
}

::google::protobuf::uint8* GmStopServerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GmStopServerAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GmStopServerAck)
  return target;
}

int GmStopServerAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:GmStopServerAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmStopServerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GmStopServerAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GmStopServerAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GmStopServerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GmStopServerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GmStopServerAck)
    MergeFrom(*source);
  }
}

void GmStopServerAck::MergeFrom(const GmStopServerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GmStopServerAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GmStopServerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GmStopServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmStopServerAck::CopyFrom(const GmStopServerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GmStopServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmStopServerAck::IsInitialized() const {

  return true;
}

void GmStopServerAck::Swap(GmStopServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmStopServerAck::InternalSwap(GmStopServerAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmStopServerAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GmStopServerAck_descriptor_;
  metadata.reflection = GmStopServerAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GmStopServerAck

// optional uint32 RetCode = 1;
void GmStopServerAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 GmStopServerAck::retcode() const {
  // @@protoc_insertion_point(field_get:GmStopServerAck.RetCode)
  return retcode_;
}
 void GmStopServerAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:GmStopServerAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckVersionReq::kClientVerionFieldNumber;
const int CheckVersionReq::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckVersionReq::CheckVersionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckVersionReq)
}

void CheckVersionReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CheckVersionReq::CheckVersionReq(const CheckVersionReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CheckVersionReq)
}

void CheckVersionReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  clientverion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
}

CheckVersionReq::~CheckVersionReq() {
  // @@protoc_insertion_point(destructor:CheckVersionReq)
  SharedDtor();
}

void CheckVersionReq::SharedDtor() {
  clientverion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CheckVersionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckVersionReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckVersionReq_descriptor_;
}

const CheckVersionReq& CheckVersionReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

CheckVersionReq* CheckVersionReq::default_instance_ = NULL;

CheckVersionReq* CheckVersionReq::New(::google::protobuf::Arena* arena) const {
  CheckVersionReq* n = new CheckVersionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckVersionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckVersionReq)
  clientverion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
}

bool CheckVersionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckVersionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ClientVerion = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientverion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientverion().data(), this->clientverion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CheckVersionReq.ClientVerion"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Channel;
        break;
      }

      // optional int32 Channel = 2;
      case 2: {
        if (tag == 16) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckVersionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckVersionReq)
  return false;
#undef DO_
}

void CheckVersionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckVersionReq)
  // optional string ClientVerion = 1;
  if (this->clientverion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientverion().data(), this->clientverion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionReq.ClientVerion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->clientverion(), output);
  }

  // optional int32 Channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // @@protoc_insertion_point(serialize_end:CheckVersionReq)
}

::google::protobuf::uint8* CheckVersionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CheckVersionReq)
  // optional string ClientVerion = 1;
  if (this->clientverion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientverion().data(), this->clientverion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionReq.ClientVerion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->clientverion(), target);
  }

  // optional int32 Channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CheckVersionReq)
  return target;
}

int CheckVersionReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CheckVersionReq)
  int total_size = 0;

  // optional string ClientVerion = 1;
  if (this->clientverion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientverion());
  }

  // optional int32 Channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckVersionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckVersionReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CheckVersionReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckVersionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckVersionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckVersionReq)
    MergeFrom(*source);
  }
}

void CheckVersionReq::MergeFrom(const CheckVersionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckVersionReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.clientverion().size() > 0) {

    clientverion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientverion_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void CheckVersionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVersionReq::CopyFrom(const CheckVersionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVersionReq::IsInitialized() const {

  return true;
}

void CheckVersionReq::Swap(CheckVersionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckVersionReq::InternalSwap(CheckVersionReq* other) {
  clientverion_.Swap(&other->clientverion_);
  std::swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckVersionReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckVersionReq_descriptor_;
  metadata.reflection = CheckVersionReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckVersionReq

// optional string ClientVerion = 1;
void CheckVersionReq::clear_clientverion() {
  clientverion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CheckVersionReq::clientverion() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.ClientVerion)
  return clientverion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CheckVersionReq::set_clientverion(const ::std::string& value) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckVersionReq.ClientVerion)
}
 void CheckVersionReq::set_clientverion(const char* value) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckVersionReq.ClientVerion)
}
 void CheckVersionReq::set_clientverion(const char* value, size_t size) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckVersionReq.ClientVerion)
}
 ::std::string* CheckVersionReq::mutable_clientverion() {
  
  // @@protoc_insertion_point(field_mutable:CheckVersionReq.ClientVerion)
  return clientverion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CheckVersionReq::release_clientverion() {
  // @@protoc_insertion_point(field_release:CheckVersionReq.ClientVerion)
  
  return clientverion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CheckVersionReq::set_allocated_clientverion(::std::string* clientverion) {
  if (clientverion != NULL) {
    
  } else {
    
  }
  clientverion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientverion);
  // @@protoc_insertion_point(field_set_allocated:CheckVersionReq.ClientVerion)
}

// optional int32 Channel = 2;
void CheckVersionReq::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 CheckVersionReq::channel() const {
  // @@protoc_insertion_point(field_get:CheckVersionReq.Channel)
  return channel_;
}
 void CheckVersionReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionReq.Channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckVersionAck::kRetCodeFieldNumber;
const int CheckVersionAck::kClientVerionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckVersionAck::CheckVersionAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CheckVersionAck)
}

void CheckVersionAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CheckVersionAck::CheckVersionAck(const CheckVersionAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CheckVersionAck)
}

void CheckVersionAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0u;
  clientverion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CheckVersionAck::~CheckVersionAck() {
  // @@protoc_insertion_point(destructor:CheckVersionAck)
  SharedDtor();
}

void CheckVersionAck::SharedDtor() {
  clientverion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CheckVersionAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckVersionAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckVersionAck_descriptor_;
}

const CheckVersionAck& CheckVersionAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

CheckVersionAck* CheckVersionAck::default_instance_ = NULL;

CheckVersionAck* CheckVersionAck::New(::google::protobuf::Arena* arena) const {
  CheckVersionAck* n = new CheckVersionAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckVersionAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CheckVersionAck)
  retcode_ = 0u;
  clientverion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CheckVersionAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CheckVersionAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ClientVerion;
        break;
      }

      // optional string ClientVerion = 2;
      case 2: {
        if (tag == 18) {
         parse_ClientVerion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientverion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientverion().data(), this->clientverion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "CheckVersionAck.ClientVerion"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CheckVersionAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CheckVersionAck)
  return false;
#undef DO_
}

void CheckVersionAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CheckVersionAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional string ClientVerion = 2;
  if (this->clientverion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientverion().data(), this->clientverion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionAck.ClientVerion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clientverion(), output);
  }

  // @@protoc_insertion_point(serialize_end:CheckVersionAck)
}

::google::protobuf::uint8* CheckVersionAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CheckVersionAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional string ClientVerion = 2;
  if (this->clientverion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientverion().data(), this->clientverion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "CheckVersionAck.ClientVerion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clientverion(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CheckVersionAck)
  return target;
}

int CheckVersionAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CheckVersionAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional string ClientVerion = 2;
  if (this->clientverion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientverion());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckVersionAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CheckVersionAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CheckVersionAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckVersionAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CheckVersionAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CheckVersionAck)
    MergeFrom(*source);
  }
}

void CheckVersionAck::MergeFrom(const CheckVersionAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CheckVersionAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.clientverion().size() > 0) {

    clientverion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientverion_);
  }
}

void CheckVersionAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CheckVersionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckVersionAck::CopyFrom(const CheckVersionAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CheckVersionAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckVersionAck::IsInitialized() const {

  return true;
}

void CheckVersionAck::Swap(CheckVersionAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckVersionAck::InternalSwap(CheckVersionAck* other) {
  std::swap(retcode_, other->retcode_);
  clientverion_.Swap(&other->clientverion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckVersionAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckVersionAck_descriptor_;
  metadata.reflection = CheckVersionAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckVersionAck

// optional uint32 RetCode = 1;
void CheckVersionAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 CheckVersionAck::retcode() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.RetCode)
  return retcode_;
}
 void CheckVersionAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:CheckVersionAck.RetCode)
}

// optional string ClientVerion = 2;
void CheckVersionAck::clear_clientverion() {
  clientverion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CheckVersionAck::clientverion() const {
  // @@protoc_insertion_point(field_get:CheckVersionAck.ClientVerion)
  return clientverion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CheckVersionAck::set_clientverion(const ::std::string& value) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckVersionAck.ClientVerion)
}
 void CheckVersionAck::set_clientverion(const char* value) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckVersionAck.ClientVerion)
}
 void CheckVersionAck::set_clientverion(const char* value, size_t size) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckVersionAck.ClientVerion)
}
 ::std::string* CheckVersionAck::mutable_clientverion() {
  
  // @@protoc_insertion_point(field_mutable:CheckVersionAck.ClientVerion)
  return clientverion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CheckVersionAck::release_clientverion() {
  // @@protoc_insertion_point(field_release:CheckVersionAck.ClientVerion)
  
  return clientverion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CheckVersionAck::set_allocated_clientverion(::std::string* clientverion) {
  if (clientverion != NULL) {
    
  } else {
    
  }
  clientverion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientverion);
  // @@protoc_insertion_point(field_set_allocated:CheckVersionAck.ClientVerion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLog::kChannelFieldNumber;
const int AccountLog::kVersionFieldNumber;
const int AccountLog::kAccountIDFieldNumber;
const int AccountLog::kUuidFieldNumber;
const int AccountLog::kIdfaFieldNumber;
const int AccountLog::kNetTypeFieldNumber;
const int AccountLog::kImodelFieldNumber;
const int AccountLog::kImeiFieldNumber;
const int AccountLog::kResolutionFieldNumber;
const int AccountLog::kPhoneCpuFieldNumber;
const int AccountLog::kMacAddrFieldNumber;
const int AccountLog::kIpAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLog::AccountLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLog)
}

void AccountLog::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AccountLog::AccountLog(const AccountLog& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AccountLog)
}

void AccountLog::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  channel_ = 0;
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_ = 0;
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nettype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imodel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonecpu_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipaddr_ = 0;
}

AccountLog::~AccountLog() {
  // @@protoc_insertion_point(destructor:AccountLog)
  SharedDtor();
}

void AccountLog::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nettype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imodel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolution_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonecpu_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AccountLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLog::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountLog_descriptor_;
}

const AccountLog& AccountLog::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

AccountLog* AccountLog::default_instance_ = NULL;

AccountLog* AccountLog::New(::google::protobuf::Arena* arena) const {
  AccountLog* n = new AccountLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLog::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLog)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AccountLog, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AccountLog*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(channel_, accountid_);
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nettype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resolution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonecpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipaddr_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool AccountLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Channel = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Version;
        break;
      }

      // optional string Version = 2;
      case 2: {
        if (tag == 18) {
         parse_Version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AccountID;
        break;
      }

      // optional int32 AccountID = 3;
      case 3: {
        if (tag == 24) {
         parse_AccountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Uuid;
        break;
      }

      // optional string Uuid = 4;
      case 4: {
        if (tag == 34) {
         parse_Uuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), this->uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Uuid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Idfa;
        break;
      }

      // optional string Idfa = 5;
      case 5: {
        if (tag == 42) {
         parse_Idfa:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_idfa()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->idfa().data(), this->idfa().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Idfa"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_NetType;
        break;
      }

      // optional string NetType = 6;
      case 6: {
        if (tag == 50) {
         parse_NetType:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nettype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nettype().data(), this->nettype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.NetType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Imodel;
        break;
      }

      // optional string Imodel = 7;
      case 7: {
        if (tag == 58) {
         parse_Imodel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imodel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imodel().data(), this->imodel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Imodel"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Imei;
        break;
      }

      // optional string Imei = 8;
      case 8: {
        if (tag == 66) {
         parse_Imei:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imei()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imei().data(), this->imei().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Imei"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Resolution;
        break;
      }

      // optional string Resolution = 9;
      case 9: {
        if (tag == 74) {
         parse_Resolution:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resolution()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resolution().data(), this->resolution().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.Resolution"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_PhoneCpu;
        break;
      }

      // optional string PhoneCpu = 10;
      case 10: {
        if (tag == 82) {
         parse_PhoneCpu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonecpu()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phonecpu().data(), this->phonecpu().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.PhoneCpu"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_MacAddr;
        break;
      }

      // optional string MacAddr = 11;
      case 11: {
        if (tag == 90) {
         parse_MacAddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLog.MacAddr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_IpAddr;
        break;
      }

      // optional int32 IpAddr = 12;
      case 12: {
        if (tag == 96) {
         parse_IpAddr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ipaddr_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLog)
  return false;
#undef DO_
}

void AccountLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLog)
  // optional int32 Channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->channel(), output);
  }

  // optional string Version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // optional int32 AccountID = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->accountid(), output);
  }

  // optional string Uuid = 4;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->uuid(), output);
  }

  // optional string Idfa = 5;
  if (this->idfa().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->idfa().data(), this->idfa().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Idfa");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->idfa(), output);
  }

  // optional string NetType = 6;
  if (this->nettype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nettype().data(), this->nettype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.NetType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->nettype(), output);
  }

  // optional string Imodel = 7;
  if (this->imodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imodel().data(), this->imodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Imodel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->imodel(), output);
  }

  // optional string Imei = 8;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Imei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->imei(), output);
  }

  // optional string Resolution = 9;
  if (this->resolution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resolution().data(), this->resolution().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Resolution");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->resolution(), output);
  }

  // optional string PhoneCpu = 10;
  if (this->phonecpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonecpu().data(), this->phonecpu().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.PhoneCpu");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->phonecpu(), output);
  }

  // optional string MacAddr = 11;
  if (this->macaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->macaddr(), output);
  }

  // optional int32 IpAddr = 12;
  if (this->ipaddr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->ipaddr(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountLog)
}

::google::protobuf::uint8* AccountLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountLog)
  // optional int32 Channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->channel(), target);
  }

  // optional string Version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // optional int32 AccountID = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->accountid(), target);
  }

  // optional string Uuid = 4;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), this->uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->uuid(), target);
  }

  // optional string Idfa = 5;
  if (this->idfa().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->idfa().data(), this->idfa().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Idfa");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->idfa(), target);
  }

  // optional string NetType = 6;
  if (this->nettype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nettype().data(), this->nettype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.NetType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->nettype(), target);
  }

  // optional string Imodel = 7;
  if (this->imodel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imodel().data(), this->imodel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Imodel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->imodel(), target);
  }

  // optional string Imei = 8;
  if (this->imei().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imei().data(), this->imei().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Imei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->imei(), target);
  }

  // optional string Resolution = 9;
  if (this->resolution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resolution().data(), this->resolution().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.Resolution");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->resolution(), target);
  }

  // optional string PhoneCpu = 10;
  if (this->phonecpu().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonecpu().data(), this->phonecpu().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.PhoneCpu");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->phonecpu(), target);
  }

  // optional string MacAddr = 11;
  if (this->macaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLog.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->macaddr(), target);
  }

  // optional int32 IpAddr = 12;
  if (this->ipaddr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->ipaddr(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountLog)
  return target;
}

int AccountLog::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLog)
  int total_size = 0;

  // optional int32 Channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // optional string Version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // optional int32 AccountID = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->accountid());
  }

  // optional string Uuid = 4;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  // optional string Idfa = 5;
  if (this->idfa().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->idfa());
  }

  // optional string NetType = 6;
  if (this->nettype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nettype());
  }

  // optional string Imodel = 7;
  if (this->imodel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imodel());
  }

  // optional string Imei = 8;
  if (this->imei().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imei());
  }

  // optional string Resolution = 9;
  if (this->resolution().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resolution());
  }

  // optional string PhoneCpu = 10;
  if (this->phonecpu().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonecpu());
  }

  // optional string MacAddr = 11;
  if (this->macaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->macaddr());
  }

  // optional int32 IpAddr = 12;
  if (this->ipaddr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ipaddr());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLog)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AccountLog* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLog)
    MergeFrom(*source);
  }
}

void AccountLog::MergeFrom(const AccountLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLog)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.idfa().size() > 0) {

    idfa_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.idfa_);
  }
  if (from.nettype().size() > 0) {

    nettype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nettype_);
  }
  if (from.imodel().size() > 0) {

    imodel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imodel_);
  }
  if (from.imei().size() > 0) {

    imei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imei_);
  }
  if (from.resolution().size() > 0) {

    resolution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resolution_);
  }
  if (from.phonecpu().size() > 0) {

    phonecpu_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonecpu_);
  }
  if (from.macaddr().size() > 0) {

    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  if (from.ipaddr() != 0) {
    set_ipaddr(from.ipaddr());
  }
}

void AccountLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLog::CopyFrom(const AccountLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLog::IsInitialized() const {

  return true;
}

void AccountLog::Swap(AccountLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLog::InternalSwap(AccountLog* other) {
  std::swap(channel_, other->channel_);
  version_.Swap(&other->version_);
  std::swap(accountid_, other->accountid_);
  uuid_.Swap(&other->uuid_);
  idfa_.Swap(&other->idfa_);
  nettype_.Swap(&other->nettype_);
  imodel_.Swap(&other->imodel_);
  imei_.Swap(&other->imei_);
  resolution_.Swap(&other->resolution_);
  phonecpu_.Swap(&other->phonecpu_);
  macaddr_.Swap(&other->macaddr_);
  std::swap(ipaddr_, other->ipaddr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLog::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountLog_descriptor_;
  metadata.reflection = AccountLog_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountLog

// optional int32 Channel = 1;
void AccountLog::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 AccountLog::channel() const {
  // @@protoc_insertion_point(field_get:AccountLog.Channel)
  return channel_;
}
 void AccountLog::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:AccountLog.Channel)
}

// optional string Version = 2;
void AccountLog::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLog::version() const {
  // @@protoc_insertion_point(field_get:AccountLog.Version)
  return version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLog.Version)
}
 void AccountLog::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLog.Version)
}
 void AccountLog::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLog.Version)
}
 ::std::string* AccountLog::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:AccountLog.Version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLog::release_version() {
  // @@protoc_insertion_point(field_release:AccountLog.Version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:AccountLog.Version)
}

// optional int32 AccountID = 3;
void AccountLog::clear_accountid() {
  accountid_ = 0;
}
 ::google::protobuf::int32 AccountLog::accountid() const {
  // @@protoc_insertion_point(field_get:AccountLog.AccountID)
  return accountid_;
}
 void AccountLog::set_accountid(::google::protobuf::int32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountLog.AccountID)
}

// optional string Uuid = 4;
void AccountLog::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLog::uuid() const {
  // @@protoc_insertion_point(field_get:AccountLog.Uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLog.Uuid)
}
 void AccountLog::set_uuid(const char* value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLog.Uuid)
}
 void AccountLog::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLog.Uuid)
}
 ::std::string* AccountLog::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:AccountLog.Uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLog::release_uuid() {
  // @@protoc_insertion_point(field_release:AccountLog.Uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:AccountLog.Uuid)
}

// optional string Idfa = 5;
void AccountLog::clear_idfa() {
  idfa_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLog::idfa() const {
  // @@protoc_insertion_point(field_get:AccountLog.Idfa)
  return idfa_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_idfa(const ::std::string& value) {
  
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLog.Idfa)
}
 void AccountLog::set_idfa(const char* value) {
  
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLog.Idfa)
}
 void AccountLog::set_idfa(const char* value, size_t size) {
  
  idfa_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLog.Idfa)
}
 ::std::string* AccountLog::mutable_idfa() {
  
  // @@protoc_insertion_point(field_mutable:AccountLog.Idfa)
  return idfa_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLog::release_idfa() {
  // @@protoc_insertion_point(field_release:AccountLog.Idfa)
  
  return idfa_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_allocated_idfa(::std::string* idfa) {
  if (idfa != NULL) {
    
  } else {
    
  }
  idfa_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), idfa);
  // @@protoc_insertion_point(field_set_allocated:AccountLog.Idfa)
}

// optional string NetType = 6;
void AccountLog::clear_nettype() {
  nettype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLog::nettype() const {
  // @@protoc_insertion_point(field_get:AccountLog.NetType)
  return nettype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_nettype(const ::std::string& value) {
  
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLog.NetType)
}
 void AccountLog::set_nettype(const char* value) {
  
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLog.NetType)
}
 void AccountLog::set_nettype(const char* value, size_t size) {
  
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLog.NetType)
}
 ::std::string* AccountLog::mutable_nettype() {
  
  // @@protoc_insertion_point(field_mutable:AccountLog.NetType)
  return nettype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLog::release_nettype() {
  // @@protoc_insertion_point(field_release:AccountLog.NetType)
  
  return nettype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_allocated_nettype(::std::string* nettype) {
  if (nettype != NULL) {
    
  } else {
    
  }
  nettype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nettype);
  // @@protoc_insertion_point(field_set_allocated:AccountLog.NetType)
}

// optional string Imodel = 7;
void AccountLog::clear_imodel() {
  imodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLog::imodel() const {
  // @@protoc_insertion_point(field_get:AccountLog.Imodel)
  return imodel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_imodel(const ::std::string& value) {
  
  imodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLog.Imodel)
}
 void AccountLog::set_imodel(const char* value) {
  
  imodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLog.Imodel)
}
 void AccountLog::set_imodel(const char* value, size_t size) {
  
  imodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLog.Imodel)
}
 ::std::string* AccountLog::mutable_imodel() {
  
  // @@protoc_insertion_point(field_mutable:AccountLog.Imodel)
  return imodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLog::release_imodel() {
  // @@protoc_insertion_point(field_release:AccountLog.Imodel)
  
  return imodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_allocated_imodel(::std::string* imodel) {
  if (imodel != NULL) {
    
  } else {
    
  }
  imodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imodel);
  // @@protoc_insertion_point(field_set_allocated:AccountLog.Imodel)
}

// optional string Imei = 8;
void AccountLog::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLog::imei() const {
  // @@protoc_insertion_point(field_get:AccountLog.Imei)
  return imei_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_imei(const ::std::string& value) {
  
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLog.Imei)
}
 void AccountLog::set_imei(const char* value) {
  
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLog.Imei)
}
 void AccountLog::set_imei(const char* value, size_t size) {
  
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLog.Imei)
}
 ::std::string* AccountLog::mutable_imei() {
  
  // @@protoc_insertion_point(field_mutable:AccountLog.Imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLog::release_imei() {
  // @@protoc_insertion_point(field_release:AccountLog.Imei)
  
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    
  } else {
    
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:AccountLog.Imei)
}

// optional string Resolution = 9;
void AccountLog::clear_resolution() {
  resolution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLog::resolution() const {
  // @@protoc_insertion_point(field_get:AccountLog.Resolution)
  return resolution_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_resolution(const ::std::string& value) {
  
  resolution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLog.Resolution)
}
 void AccountLog::set_resolution(const char* value) {
  
  resolution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLog.Resolution)
}
 void AccountLog::set_resolution(const char* value, size_t size) {
  
  resolution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLog.Resolution)
}
 ::std::string* AccountLog::mutable_resolution() {
  
  // @@protoc_insertion_point(field_mutable:AccountLog.Resolution)
  return resolution_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLog::release_resolution() {
  // @@protoc_insertion_point(field_release:AccountLog.Resolution)
  
  return resolution_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_allocated_resolution(::std::string* resolution) {
  if (resolution != NULL) {
    
  } else {
    
  }
  resolution_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resolution);
  // @@protoc_insertion_point(field_set_allocated:AccountLog.Resolution)
}

// optional string PhoneCpu = 10;
void AccountLog::clear_phonecpu() {
  phonecpu_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLog::phonecpu() const {
  // @@protoc_insertion_point(field_get:AccountLog.PhoneCpu)
  return phonecpu_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_phonecpu(const ::std::string& value) {
  
  phonecpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLog.PhoneCpu)
}
 void AccountLog::set_phonecpu(const char* value) {
  
  phonecpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLog.PhoneCpu)
}
 void AccountLog::set_phonecpu(const char* value, size_t size) {
  
  phonecpu_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLog.PhoneCpu)
}
 ::std::string* AccountLog::mutable_phonecpu() {
  
  // @@protoc_insertion_point(field_mutable:AccountLog.PhoneCpu)
  return phonecpu_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLog::release_phonecpu() {
  // @@protoc_insertion_point(field_release:AccountLog.PhoneCpu)
  
  return phonecpu_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_allocated_phonecpu(::std::string* phonecpu) {
  if (phonecpu != NULL) {
    
  } else {
    
  }
  phonecpu_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonecpu);
  // @@protoc_insertion_point(field_set_allocated:AccountLog.PhoneCpu)
}

// optional string MacAddr = 11;
void AccountLog::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLog::macaddr() const {
  // @@protoc_insertion_point(field_get:AccountLog.MacAddr)
  return macaddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_macaddr(const ::std::string& value) {
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLog.MacAddr)
}
 void AccountLog::set_macaddr(const char* value) {
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLog.MacAddr)
}
 void AccountLog::set_macaddr(const char* value, size_t size) {
  
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLog.MacAddr)
}
 ::std::string* AccountLog::mutable_macaddr() {
  
  // @@protoc_insertion_point(field_mutable:AccountLog.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLog::release_macaddr() {
  // @@protoc_insertion_point(field_release:AccountLog.MacAddr)
  
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLog::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    
  } else {
    
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:AccountLog.MacAddr)
}

// optional int32 IpAddr = 12;
void AccountLog::clear_ipaddr() {
  ipaddr_ = 0;
}
 ::google::protobuf::int32 AccountLog::ipaddr() const {
  // @@protoc_insertion_point(field_get:AccountLog.IpAddr)
  return ipaddr_;
}
 void AccountLog::set_ipaddr(::google::protobuf::int32 value) {
  
  ipaddr_ = value;
  // @@protoc_insertion_point(field_set:AccountLog.IpAddr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountRegReq::kAccountNameFieldNumber;
const int AccountRegReq::kPasswordFieldNumber;
const int AccountRegReq::kChannelFieldNumber;
const int AccountRegReq::kRegLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountRegReq::AccountRegReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountRegReq)
}

void AccountRegReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  reglog_ = const_cast< ::AccountLog*>(&::AccountLog::default_instance());
}

AccountRegReq::AccountRegReq(const AccountRegReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AccountRegReq)
}

void AccountRegReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  reglog_ = NULL;
}

AccountRegReq::~AccountRegReq() {
  // @@protoc_insertion_point(destructor:AccountRegReq)
  SharedDtor();
}

void AccountRegReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete reglog_;
  }
}

void AccountRegReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountRegReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountRegReq_descriptor_;
}

const AccountRegReq& AccountRegReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

AccountRegReq* AccountRegReq::default_instance_ = NULL;

AccountRegReq* AccountRegReq::New(::google::protobuf::Arena* arena) const {
  AccountRegReq* n = new AccountRegReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountRegReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountRegReq)
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  if (GetArenaNoVirtual() == NULL && reglog_ != NULL) delete reglog_;
  reglog_ = NULL;
}

bool AccountRegReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountRegReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AccountName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountRegReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Password;
        break;
      }

      // optional string Password = 2;
      case 2: {
        if (tag == 18) {
         parse_Password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountRegReq.Password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Channel;
        break;
      }

      // optional int32 Channel = 3;
      case 3: {
        if (tag == 24) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_RegLog;
        break;
      }

      // optional .AccountLog RegLog = 4;
      case 4: {
        if (tag == 34) {
         parse_RegLog:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reglog()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountRegReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountRegReq)
  return false;
#undef DO_
}

void AccountRegReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountRegReq)
  // optional string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // optional string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // optional .AccountLog RegLog = 4;
  if (this->has_reglog()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->reglog_, output);
  }

  // @@protoc_insertion_point(serialize_end:AccountRegReq)
}

::google::protobuf::uint8* AccountRegReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountRegReq)
  // optional string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // optional string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountRegReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // optional .AccountLog RegLog = 4;
  if (this->has_reglog()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->reglog_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountRegReq)
  return target;
}

int AccountRegReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AccountRegReq)
  int total_size = 0;

  // optional string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // optional string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // optional .AccountLog RegLog = 4;
  if (this->has_reglog()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reglog_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountRegReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountRegReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AccountRegReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountRegReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountRegReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountRegReq)
    MergeFrom(*source);
  }
}

void AccountRegReq::MergeFrom(const AccountRegReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountRegReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.has_reglog()) {
    mutable_reglog()->::AccountLog::MergeFrom(from.reglog());
  }
}

void AccountRegReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountRegReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountRegReq::CopyFrom(const AccountRegReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountRegReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountRegReq::IsInitialized() const {

  return true;
}

void AccountRegReq::Swap(AccountRegReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountRegReq::InternalSwap(AccountRegReq* other) {
  accountname_.Swap(&other->accountname_);
  password_.Swap(&other->password_);
  std::swap(channel_, other->channel_);
  std::swap(reglog_, other->reglog_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountRegReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountRegReq_descriptor_;
  metadata.reflection = AccountRegReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountRegReq

// optional string AccountName = 1;
void AccountRegReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountRegReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.AccountName)
  return accountname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountRegReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.AccountName)
}
 void AccountRegReq::set_accountname(const char* value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.AccountName)
}
 void AccountRegReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.AccountName)
}
 ::std::string* AccountRegReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountRegReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountRegReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountRegReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.AccountName)
}

// optional string Password = 2;
void AccountRegReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountRegReq::password() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountRegReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.Password)
}
 void AccountRegReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.Password)
}
 void AccountRegReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.Password)
}
 ::std::string* AccountRegReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountRegReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountRegReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountRegReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.Password)
}

// optional int32 Channel = 3;
void AccountRegReq::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 AccountRegReq::channel() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Channel)
  return channel_;
}
 void AccountRegReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:AccountRegReq.Channel)
}

// optional .AccountLog RegLog = 4;
bool AccountRegReq::has_reglog() const {
  return !_is_default_instance_ && reglog_ != NULL;
}
void AccountRegReq::clear_reglog() {
  if (GetArenaNoVirtual() == NULL && reglog_ != NULL) delete reglog_;
  reglog_ = NULL;
}
const ::AccountLog& AccountRegReq::reglog() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.RegLog)
  return reglog_ != NULL ? *reglog_ : *default_instance_->reglog_;
}
::AccountLog* AccountRegReq::mutable_reglog() {
  
  if (reglog_ == NULL) {
    reglog_ = new ::AccountLog;
  }
  // @@protoc_insertion_point(field_mutable:AccountRegReq.RegLog)
  return reglog_;
}
::AccountLog* AccountRegReq::release_reglog() {
  // @@protoc_insertion_point(field_release:AccountRegReq.RegLog)
  
  ::AccountLog* temp = reglog_;
  reglog_ = NULL;
  return temp;
}
void AccountRegReq::set_allocated_reglog(::AccountLog* reglog) {
  delete reglog_;
  reglog_ = reglog;
  if (reglog) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.RegLog)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountRegAck::kRetCodeFieldNumber;
const int AccountRegAck::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountRegAck::AccountRegAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountRegAck)
}

void AccountRegAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AccountRegAck::AccountRegAck(const AccountRegAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AccountRegAck)
}

void AccountRegAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  accountid_ = GOOGLE_ULONGLONG(0);
}

AccountRegAck::~AccountRegAck() {
  // @@protoc_insertion_point(destructor:AccountRegAck)
  SharedDtor();
}

void AccountRegAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AccountRegAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountRegAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountRegAck_descriptor_;
}

const AccountRegAck& AccountRegAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

AccountRegAck* AccountRegAck::default_instance_ = NULL;

AccountRegAck* AccountRegAck::New(::google::protobuf::Arena* arena) const {
  AccountRegAck* n = new AccountRegAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountRegAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountRegAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AccountRegAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AccountRegAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, retcode_);

#undef ZR_HELPER_
#undef ZR_

}

bool AccountRegAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountRegAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AccountID;
        break;
      }

      // optional uint64 AccountID = 2;
      case 2: {
        if (tag == 16) {
         parse_AccountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountRegAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountRegAck)
  return false;
#undef DO_
}

void AccountRegAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountRegAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountRegAck)
}

::google::protobuf::uint8* AccountRegAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountRegAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountRegAck)
  return target;
}

int AccountRegAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AccountRegAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountRegAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountRegAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AccountRegAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountRegAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountRegAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountRegAck)
    MergeFrom(*source);
  }
}

void AccountRegAck::MergeFrom(const AccountRegAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountRegAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void AccountRegAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountRegAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountRegAck::CopyFrom(const AccountRegAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountRegAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountRegAck::IsInitialized() const {

  return true;
}

void AccountRegAck::Swap(AccountRegAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountRegAck::InternalSwap(AccountRegAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountRegAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountRegAck_descriptor_;
  metadata.reflection = AccountRegAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountRegAck

// optional uint32 RetCode = 1;
void AccountRegAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 AccountRegAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.RetCode)
  return retcode_;
}
 void AccountRegAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.RetCode)
}

// optional uint64 AccountID = 2;
void AccountRegAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 AccountRegAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.AccountID)
  return accountid_;
}
 void AccountRegAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.AccountID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginReq::kAccountNameFieldNumber;
const int AccountLoginReq::kPasswordFieldNumber;
const int AccountLoginReq::kChannelFieldNumber;
const int AccountLoginReq::kFromChannelFieldNumber;
const int AccountLoginReq::kLoginLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginReq::AccountLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLoginReq)
}

void AccountLoginReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  loginlog_ = const_cast< ::AccountLog*>(&::AccountLog::default_instance());
}

AccountLoginReq::AccountLoginReq(const AccountLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AccountLoginReq)
}

void AccountLoginReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  fromchannel_ = 0u;
  loginlog_ = NULL;
}

AccountLoginReq::~AccountLoginReq() {
  // @@protoc_insertion_point(destructor:AccountLoginReq)
  SharedDtor();
}

void AccountLoginReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete loginlog_;
  }
}

void AccountLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountLoginReq_descriptor_;
}

const AccountLoginReq& AccountLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

AccountLoginReq* AccountLoginReq::default_instance_ = NULL;

AccountLoginReq* AccountLoginReq::New(::google::protobuf::Arena* arena) const {
  AccountLoginReq* n = new AccountLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLoginReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AccountLoginReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AccountLoginReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(channel_, fromchannel_);
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && loginlog_ != NULL) delete loginlog_;
  loginlog_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool AccountLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AccountName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Password;
        break;
      }

      // optional string Password = 2;
      case 2: {
        if (tag == 18) {
         parse_Password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginReq.Password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Channel;
        break;
      }

      // optional int32 Channel = 3;
      case 3: {
        if (tag == 24) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_FromChannel;
        break;
      }

      // optional uint32 FromChannel = 4;
      case 4: {
        if (tag == 32) {
         parse_FromChannel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fromchannel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_LoginLog;
        break;
      }

      // optional .AccountLog LoginLog = 5;
      case 5: {
        if (tag == 42) {
         parse_LoginLog:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginlog()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLoginReq)
  return false;
#undef DO_
}

void AccountLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLoginReq)
  // optional string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // optional string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // optional uint32 FromChannel = 4;
  if (this->fromchannel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->fromchannel(), output);
  }

  // optional .AccountLog LoginLog = 5;
  if (this->has_loginlog()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->loginlog_, output);
  }

  // @@protoc_insertion_point(serialize_end:AccountLoginReq)
}

::google::protobuf::uint8* AccountLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountLoginReq)
  // optional string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // optional string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // optional uint32 FromChannel = 4;
  if (this->fromchannel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->fromchannel(), target);
  }

  // optional .AccountLog LoginLog = 5;
  if (this->has_loginlog()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->loginlog_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountLoginReq)
  return target;
}

int AccountLoginReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLoginReq)
  int total_size = 0;

  // optional string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // optional string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // optional uint32 FromChannel = 4;
  if (this->fromchannel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fromchannel());
  }

  // optional .AccountLog LoginLog = 5;
  if (this->has_loginlog()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginlog_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AccountLoginReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLoginReq)
    MergeFrom(*source);
  }
}

void AccountLoginReq::MergeFrom(const AccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.fromchannel() != 0) {
    set_fromchannel(from.fromchannel());
  }
  if (from.has_loginlog()) {
    mutable_loginlog()->::AccountLog::MergeFrom(from.loginlog());
  }
}

void AccountLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginReq::CopyFrom(const AccountLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginReq::IsInitialized() const {

  return true;
}

void AccountLoginReq::Swap(AccountLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLoginReq::InternalSwap(AccountLoginReq* other) {
  accountname_.Swap(&other->accountname_);
  password_.Swap(&other->password_);
  std::swap(channel_, other->channel_);
  std::swap(fromchannel_, other->fromchannel_);
  std::swap(loginlog_, other->loginlog_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountLoginReq_descriptor_;
  metadata.reflection = AccountLoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountLoginReq

// optional string AccountName = 1;
void AccountLoginReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLoginReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.AccountName)
  return accountname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLoginReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.AccountName)
}
 void AccountLoginReq::set_accountname(const char* value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.AccountName)
}
 void AccountLoginReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.AccountName)
}
 ::std::string* AccountLoginReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLoginReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLoginReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.AccountName)
}

// optional string Password = 2;
void AccountLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLoginReq::password() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.Password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.Password)
}
 void AccountLoginReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.Password)
}
 void AccountLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.Password)
}
 ::std::string* AccountLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.Password)
}

// optional int32 Channel = 3;
void AccountLoginReq::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 AccountLoginReq::channel() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.Channel)
  return channel_;
}
 void AccountLoginReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginReq.Channel)
}

// optional uint32 FromChannel = 4;
void AccountLoginReq::clear_fromchannel() {
  fromchannel_ = 0u;
}
 ::google::protobuf::uint32 AccountLoginReq::fromchannel() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.FromChannel)
  return fromchannel_;
}
 void AccountLoginReq::set_fromchannel(::google::protobuf::uint32 value) {
  
  fromchannel_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginReq.FromChannel)
}

// optional .AccountLog LoginLog = 5;
bool AccountLoginReq::has_loginlog() const {
  return !_is_default_instance_ && loginlog_ != NULL;
}
void AccountLoginReq::clear_loginlog() {
  if (GetArenaNoVirtual() == NULL && loginlog_ != NULL) delete loginlog_;
  loginlog_ = NULL;
}
const ::AccountLog& AccountLoginReq::loginlog() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.LoginLog)
  return loginlog_ != NULL ? *loginlog_ : *default_instance_->loginlog_;
}
::AccountLog* AccountLoginReq::mutable_loginlog() {
  
  if (loginlog_ == NULL) {
    loginlog_ = new ::AccountLog;
  }
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.LoginLog)
  return loginlog_;
}
::AccountLog* AccountLoginReq::release_loginlog() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.LoginLog)
  
  ::AccountLog* temp = loginlog_;
  loginlog_ = NULL;
  return temp;
}
void AccountLoginReq::set_allocated_loginlog(::AccountLog* loginlog) {
  delete loginlog_;
  loginlog_ = loginlog;
  if (loginlog) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.LoginLog)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountLoginAck::kRetCodeFieldNumber;
const int AccountLoginAck::kAccountIDFieldNumber;
const int AccountLoginAck::kLastSvrIDFieldNumber;
const int AccountLoginAck::kLastSvrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountLoginAck::AccountLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountLoginAck)
}

void AccountLoginAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AccountLoginAck::AccountLoginAck(const AccountLoginAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AccountLoginAck)
}

void AccountLoginAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0u;
  accountid_ = GOOGLE_ULONGLONG(0);
  lastsvrid_ = 0;
  lastsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountLoginAck::~AccountLoginAck() {
  // @@protoc_insertion_point(destructor:AccountLoginAck)
  SharedDtor();
}

void AccountLoginAck::SharedDtor() {
  lastsvrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AccountLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountLoginAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountLoginAck_descriptor_;
}

const AccountLoginAck& AccountLoginAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

AccountLoginAck* AccountLoginAck::default_instance_ = NULL;

AccountLoginAck* AccountLoginAck::New(::google::protobuf::Arena* arena) const {
  AccountLoginAck* n = new AccountLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountLoginAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AccountLoginAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AccountLoginAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, lastsvrid_);
  lastsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool AccountLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AccountID;
        break;
      }

      // optional uint64 AccountID = 2;
      case 2: {
        if (tag == 16) {
         parse_AccountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LastSvrID;
        break;
      }

      // optional int32 LastSvrID = 3;
      case 3: {
        if (tag == 24) {
         parse_LastSvrID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastsvrid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_LastSvrName;
        break;
      }

      // optional string LastSvrName = 4;
      case 4: {
        if (tag == 34) {
         parse_LastSvrName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastsvrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastsvrname().data(), this->lastsvrname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AccountLoginAck.LastSvrName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountLoginAck)
  return false;
#undef DO_
}

void AccountLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountLoginAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // optional int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lastsvrid(), output);
  }

  // optional string LastSvrName = 4;
  if (this->lastsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastsvrname().data(), this->lastsvrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginAck.LastSvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lastsvrname(), output);
  }

  // @@protoc_insertion_point(serialize_end:AccountLoginAck)
}

::google::protobuf::uint8* AccountLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountLoginAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // optional int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lastsvrid(), target);
  }

  // optional string LastSvrName = 4;
  if (this->lastsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastsvrname().data(), this->lastsvrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AccountLoginAck.LastSvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lastsvrname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AccountLoginAck)
  return target;
}

int AccountLoginAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AccountLoginAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional int32 LastSvrID = 3;
  if (this->lastsvrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lastsvrid());
  }

  // optional string LastSvrName = 4;
  if (this->lastsvrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastsvrname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountLoginAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AccountLoginAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountLoginAck)
    MergeFrom(*source);
  }
}

void AccountLoginAck::MergeFrom(const AccountLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountLoginAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.lastsvrid() != 0) {
    set_lastsvrid(from.lastsvrid());
  }
  if (from.lastsvrname().size() > 0) {

    lastsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastsvrname_);
  }
}

void AccountLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountLoginAck::CopyFrom(const AccountLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountLoginAck::IsInitialized() const {

  return true;
}

void AccountLoginAck::Swap(AccountLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountLoginAck::InternalSwap(AccountLoginAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(accountid_, other->accountid_);
  std::swap(lastsvrid_, other->lastsvrid_);
  lastsvrname_.Swap(&other->lastsvrname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountLoginAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountLoginAck_descriptor_;
  metadata.reflection = AccountLoginAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountLoginAck

// optional uint32 RetCode = 1;
void AccountLoginAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 AccountLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.RetCode)
  return retcode_;
}
 void AccountLoginAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.RetCode)
}

// optional uint64 AccountID = 2;
void AccountLoginAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 AccountLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.AccountID)
  return accountid_;
}
 void AccountLoginAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.AccountID)
}

// optional int32 LastSvrID = 3;
void AccountLoginAck::clear_lastsvrid() {
  lastsvrid_ = 0;
}
 ::google::protobuf::int32 AccountLoginAck::lastsvrid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.LastSvrID)
  return lastsvrid_;
}
 void AccountLoginAck::set_lastsvrid(::google::protobuf::int32 value) {
  
  lastsvrid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.LastSvrID)
}

// optional string LastSvrName = 4;
void AccountLoginAck::clear_lastsvrname() {
  lastsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AccountLoginAck::lastsvrname() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.LastSvrName)
  return lastsvrname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLoginAck::set_lastsvrname(const ::std::string& value) {
  
  lastsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginAck.LastSvrName)
}
 void AccountLoginAck::set_lastsvrname(const char* value) {
  
  lastsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginAck.LastSvrName)
}
 void AccountLoginAck::set_lastsvrname(const char* value, size_t size) {
  
  lastsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginAck.LastSvrName)
}
 ::std::string* AccountLoginAck::mutable_lastsvrname() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginAck.LastSvrName)
  return lastsvrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AccountLoginAck::release_lastsvrname() {
  // @@protoc_insertion_point(field_release:AccountLoginAck.LastSvrName)
  
  return lastsvrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AccountLoginAck::set_allocated_lastsvrname(::std::string* lastsvrname) {
  if (lastsvrname != NULL) {
    
  } else {
    
  }
  lastsvrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastsvrname);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginAck.LastSvrName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerListReq::kAccountIDFieldNumber;
const int ClientServerListReq::kChannelFieldNumber;
const int ClientServerListReq::kClientVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerListReq::ClientServerListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerListReq)
}

void ClientServerListReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ClientServerListReq::ClientServerListReq(const ClientServerListReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ClientServerListReq)
}

void ClientServerListReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
  channel_ = 0;
  clientversion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ClientServerListReq::~ClientServerListReq() {
  // @@protoc_insertion_point(destructor:ClientServerListReq)
  SharedDtor();
}

void ClientServerListReq::SharedDtor() {
  clientversion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ClientServerListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientServerListReq_descriptor_;
}

const ClientServerListReq& ClientServerListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

ClientServerListReq* ClientServerListReq::default_instance_ = NULL;

ClientServerListReq* ClientServerListReq::New(::google::protobuf::Arena* arena) const {
  ClientServerListReq* n = new ClientServerListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerListReq)
  accountid_ = GOOGLE_ULONGLONG(0);
  channel_ = 0;
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ClientServerListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Channel;
        break;
      }

      // optional int32 Channel = 2;
      case 2: {
        if (tag == 16) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ClientVersion;
        break;
      }

      // optional string ClientVersion = 3;
      case 3: {
        if (tag == 26) {
         parse_ClientVersion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientversion()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientversion().data(), this->clientversion().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClientServerListReq.ClientVersion"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerListReq)
  return false;
#undef DO_
}

void ClientServerListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerListReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // optional int32 Channel = 2;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel(), output);
  }

  // optional string ClientVersion = 3;
  if (this->clientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientversion().data(), this->clientversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerListReq.ClientVersion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clientversion(), output);
  }

  // @@protoc_insertion_point(serialize_end:ClientServerListReq)
}

::google::protobuf::uint8* ClientServerListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerListReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // optional int32 Channel = 2;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel(), target);
  }

  // optional string ClientVersion = 3;
  if (this->clientversion().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientversion().data(), this->clientversion().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerListReq.ClientVersion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clientversion(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClientServerListReq)
  return target;
}

int ClientServerListReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerListReq)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional int32 Channel = 2;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // optional string ClientVersion = 3;
  if (this->clientversion().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientversion());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ClientServerListReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerListReq)
    MergeFrom(*source);
  }
}

void ClientServerListReq::MergeFrom(const ClientServerListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.clientversion().size() > 0) {

    clientversion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientversion_);
  }
}

void ClientServerListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerListReq::CopyFrom(const ClientServerListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerListReq::IsInitialized() const {

  return true;
}

void ClientServerListReq::Swap(ClientServerListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerListReq::InternalSwap(ClientServerListReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(channel_, other->channel_);
  clientversion_.Swap(&other->clientversion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientServerListReq_descriptor_;
  metadata.reflection = ClientServerListReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientServerListReq

// optional uint64 AccountID = 1;
void ClientServerListReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ClientServerListReq::accountid() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.AccountID)
  return accountid_;
}
 void ClientServerListReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.AccountID)
}

// optional int32 Channel = 2;
void ClientServerListReq::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 ClientServerListReq::channel() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.Channel)
  return channel_;
}
 void ClientServerListReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListReq.Channel)
}

// optional string ClientVersion = 3;
void ClientServerListReq::clear_clientversion() {
  clientversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ClientServerListReq::clientversion() const {
  // @@protoc_insertion_point(field_get:ClientServerListReq.ClientVersion)
  return clientversion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ClientServerListReq::set_clientversion(const ::std::string& value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientServerListReq.ClientVersion)
}
 void ClientServerListReq::set_clientversion(const char* value) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientServerListReq.ClientVersion)
}
 void ClientServerListReq::set_clientversion(const char* value, size_t size) {
  
  clientversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientServerListReq.ClientVersion)
}
 ::std::string* ClientServerListReq::mutable_clientversion() {
  
  // @@protoc_insertion_point(field_mutable:ClientServerListReq.ClientVersion)
  return clientversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ClientServerListReq::release_clientversion() {
  // @@protoc_insertion_point(field_release:ClientServerListReq.ClientVersion)
  
  return clientversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ClientServerListReq::set_allocated_clientversion(::std::string* clientversion) {
  if (clientversion != NULL) {
    
  } else {
    
  }
  clientversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientversion);
  // @@protoc_insertion_point(field_set_allocated:ClientServerListReq.ClientVersion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerNode::kSvrIDFieldNumber;
const int ClientServerNode::kSvrNameFieldNumber;
const int ClientServerNode::kSvrFlagFieldNumber;
const int ClientServerNode::kCornerMarkFieldNumber;
const int ClientServerNode::kSvrOpenTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerNode::ClientServerNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerNode)
}

void ClientServerNode::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ClientServerNode::ClientServerNode(const ClientServerNode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ClientServerNode)
}

void ClientServerNode::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  svrid_ = 0;
  svrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svrflag_ = 0;
  cornermark_ = 0;
  svropentime_ = GOOGLE_LONGLONG(0);
}

ClientServerNode::~ClientServerNode() {
  // @@protoc_insertion_point(destructor:ClientServerNode)
  SharedDtor();
}

void ClientServerNode::SharedDtor() {
  svrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ClientServerNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientServerNode_descriptor_;
}

const ClientServerNode& ClientServerNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

ClientServerNode* ClientServerNode::default_instance_ = NULL;

ClientServerNode* ClientServerNode::New(::google::protobuf::Arena* arena) const {
  ClientServerNode* n = new ClientServerNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerNode::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerNode)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ClientServerNode, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ClientServerNode*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(svrid_, cornermark_);
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ClientServerNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 SvrID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svrid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SvrName;
        break;
      }

      // optional string SvrName = 2;
      case 2: {
        if (tag == 18) {
         parse_SvrName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_svrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->svrname().data(), this->svrname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClientServerNode.SvrName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SvrFlag;
        break;
      }

      // optional int32 SvrFlag = 3;
      case 3: {
        if (tag == 24) {
         parse_SvrFlag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &svrflag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CornerMark;
        break;
      }

      // optional int32 CornerMark = 4;
      case 4: {
        if (tag == 32) {
         parse_CornerMark:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cornermark_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_SvrOpenTime;
        break;
      }

      // optional int64 SvrOpenTime = 5;
      case 5: {
        if (tag == 40) {
         parse_SvrOpenTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &svropentime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerNode)
  return false;
#undef DO_
}

void ClientServerNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerNode)
  // optional int32 SvrID = 1;
  if (this->svrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->svrid(), output);
  }

  // optional string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), this->svrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerNode.SvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->svrname(), output);
  }

  // optional int32 SvrFlag = 3;
  if (this->svrflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->svrflag(), output);
  }

  // optional int32 CornerMark = 4;
  if (this->cornermark() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cornermark(), output);
  }

  // optional int64 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->svropentime(), output);
  }

  // @@protoc_insertion_point(serialize_end:ClientServerNode)
}

::google::protobuf::uint8* ClientServerNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerNode)
  // optional int32 SvrID = 1;
  if (this->svrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->svrid(), target);
  }

  // optional string SvrName = 2;
  if (this->svrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrname().data(), this->svrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientServerNode.SvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->svrname(), target);
  }

  // optional int32 SvrFlag = 3;
  if (this->svrflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->svrflag(), target);
  }

  // optional int32 CornerMark = 4;
  if (this->cornermark() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cornermark(), target);
  }

  // optional int64 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->svropentime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClientServerNode)
  return target;
}

int ClientServerNode::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerNode)
  int total_size = 0;

  // optional int32 SvrID = 1;
  if (this->svrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrid());
  }

  // optional string SvrName = 2;
  if (this->svrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->svrname());
  }

  // optional int32 SvrFlag = 3;
  if (this->svrflag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->svrflag());
  }

  // optional int32 CornerMark = 4;
  if (this->cornermark() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cornermark());
  }

  // optional int64 SvrOpenTime = 5;
  if (this->svropentime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->svropentime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerNode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ClientServerNode* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerNode)
    MergeFrom(*source);
  }
}

void ClientServerNode::MergeFrom(const ClientServerNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerNode)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.svrid() != 0) {
    set_svrid(from.svrid());
  }
  if (from.svrname().size() > 0) {

    svrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrname_);
  }
  if (from.svrflag() != 0) {
    set_svrflag(from.svrflag());
  }
  if (from.cornermark() != 0) {
    set_cornermark(from.cornermark());
  }
  if (from.svropentime() != 0) {
    set_svropentime(from.svropentime());
  }
}

void ClientServerNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerNode::CopyFrom(const ClientServerNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerNode::IsInitialized() const {

  return true;
}

void ClientServerNode::Swap(ClientServerNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerNode::InternalSwap(ClientServerNode* other) {
  std::swap(svrid_, other->svrid_);
  svrname_.Swap(&other->svrname_);
  std::swap(svrflag_, other->svrflag_);
  std::swap(cornermark_, other->cornermark_);
  std::swap(svropentime_, other->svropentime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientServerNode_descriptor_;
  metadata.reflection = ClientServerNode_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientServerNode

// optional int32 SvrID = 1;
void ClientServerNode::clear_svrid() {
  svrid_ = 0;
}
 ::google::protobuf::int32 ClientServerNode::svrid() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrID)
  return svrid_;
}
 void ClientServerNode::set_svrid(::google::protobuf::int32 value) {
  
  svrid_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrID)
}

// optional string SvrName = 2;
void ClientServerNode::clear_svrname() {
  svrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ClientServerNode::svrname() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrName)
  return svrname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ClientServerNode::set_svrname(const ::std::string& value) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrName)
}
 void ClientServerNode::set_svrname(const char* value) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientServerNode.SvrName)
}
 void ClientServerNode::set_svrname(const char* value, size_t size) {
  
  svrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientServerNode.SvrName)
}
 ::std::string* ClientServerNode::mutable_svrname() {
  
  // @@protoc_insertion_point(field_mutable:ClientServerNode.SvrName)
  return svrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ClientServerNode::release_svrname() {
  // @@protoc_insertion_point(field_release:ClientServerNode.SvrName)
  
  return svrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ClientServerNode::set_allocated_svrname(::std::string* svrname) {
  if (svrname != NULL) {
    
  } else {
    
  }
  svrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svrname);
  // @@protoc_insertion_point(field_set_allocated:ClientServerNode.SvrName)
}

// optional int32 SvrFlag = 3;
void ClientServerNode::clear_svrflag() {
  svrflag_ = 0;
}
 ::google::protobuf::int32 ClientServerNode::svrflag() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrFlag)
  return svrflag_;
}
 void ClientServerNode::set_svrflag(::google::protobuf::int32 value) {
  
  svrflag_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrFlag)
}

// optional int32 CornerMark = 4;
void ClientServerNode::clear_cornermark() {
  cornermark_ = 0;
}
 ::google::protobuf::int32 ClientServerNode::cornermark() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.CornerMark)
  return cornermark_;
}
 void ClientServerNode::set_cornermark(::google::protobuf::int32 value) {
  
  cornermark_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.CornerMark)
}

// optional int64 SvrOpenTime = 5;
void ClientServerNode::clear_svropentime() {
  svropentime_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ClientServerNode::svropentime() const {
  // @@protoc_insertion_point(field_get:ClientServerNode.SvrOpenTime)
  return svropentime_;
}
 void ClientServerNode::set_svropentime(::google::protobuf::int64 value) {
  
  svropentime_ = value;
  // @@protoc_insertion_point(field_set:ClientServerNode.SvrOpenTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientServerListAck::kRetCodeFieldNumber;
const int ClientServerListAck::kSvrNodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientServerListAck::ClientServerListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientServerListAck)
}

void ClientServerListAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ClientServerListAck::ClientServerListAck(const ClientServerListAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ClientServerListAck)
}

void ClientServerListAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

ClientServerListAck::~ClientServerListAck() {
  // @@protoc_insertion_point(destructor:ClientServerListAck)
  SharedDtor();
}

void ClientServerListAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClientServerListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientServerListAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientServerListAck_descriptor_;
}

const ClientServerListAck& ClientServerListAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

ClientServerListAck* ClientServerListAck::default_instance_ = NULL;

ClientServerListAck* ClientServerListAck::New(::google::protobuf::Arena* arena) const {
  ClientServerListAck* n = new ClientServerListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientServerListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientServerListAck)
  retcode_ = 0u;
  svrnode_.Clear();
}

bool ClientServerListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientServerListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_SvrNode;
        break;
      }

      // repeated .ClientServerNode SvrNode = 2;
      case 2: {
        if (tag == 18) {
         parse_SvrNode:
          DO_(input->IncrementRecursionDepth());
         parse_loop_SvrNode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_svrnode()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_SvrNode;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientServerListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientServerListAck)
  return false;
#undef DO_
}

void ClientServerListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientServerListAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // repeated .ClientServerNode SvrNode = 2;
  for (unsigned int i = 0, n = this->svrnode_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->svrnode(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ClientServerListAck)
}

::google::protobuf::uint8* ClientServerListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientServerListAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // repeated .ClientServerNode SvrNode = 2;
  for (unsigned int i = 0, n = this->svrnode_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->svrnode(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClientServerListAck)
  return target;
}

int ClientServerListAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ClientServerListAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // repeated .ClientServerNode SvrNode = 2;
  total_size += 1 * this->svrnode_size();
  for (int i = 0; i < this->svrnode_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->svrnode(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientServerListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientServerListAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ClientServerListAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientServerListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientServerListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientServerListAck)
    MergeFrom(*source);
  }
}

void ClientServerListAck::MergeFrom(const ClientServerListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientServerListAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  svrnode_.MergeFrom(from.svrnode_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ClientServerListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientServerListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientServerListAck::CopyFrom(const ClientServerListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientServerListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientServerListAck::IsInitialized() const {

  return true;
}

void ClientServerListAck::Swap(ClientServerListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientServerListAck::InternalSwap(ClientServerListAck* other) {
  std::swap(retcode_, other->retcode_);
  svrnode_.UnsafeArenaSwap(&other->svrnode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientServerListAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientServerListAck_descriptor_;
  metadata.reflection = ClientServerListAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientServerListAck

// optional uint32 RetCode = 1;
void ClientServerListAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 ClientServerListAck::retcode() const {
  // @@protoc_insertion_point(field_get:ClientServerListAck.RetCode)
  return retcode_;
}
 void ClientServerListAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:ClientServerListAck.RetCode)
}

// repeated .ClientServerNode SvrNode = 2;
int ClientServerListAck::svrnode_size() const {
  return svrnode_.size();
}
void ClientServerListAck::clear_svrnode() {
  svrnode_.Clear();
}
const ::ClientServerNode& ClientServerListAck::svrnode(int index) const {
  // @@protoc_insertion_point(field_get:ClientServerListAck.SvrNode)
  return svrnode_.Get(index);
}
::ClientServerNode* ClientServerListAck::mutable_svrnode(int index) {
  // @@protoc_insertion_point(field_mutable:ClientServerListAck.SvrNode)
  return svrnode_.Mutable(index);
}
::ClientServerNode* ClientServerListAck::add_svrnode() {
  // @@protoc_insertion_point(field_add:ClientServerListAck.SvrNode)
  return svrnode_.Add();
}
::google::protobuf::RepeatedPtrField< ::ClientServerNode >*
ClientServerListAck::mutable_svrnode() {
  // @@protoc_insertion_point(field_mutable_list:ClientServerListAck.SvrNode)
  return &svrnode_;
}
const ::google::protobuf::RepeatedPtrField< ::ClientServerNode >&
ClientServerListAck::svrnode() const {
  // @@protoc_insertion_point(field_list:ClientServerListAck.SvrNode)
  return svrnode_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SvrRegToSvrReq::kServerIDFieldNumber;
const int SvrRegToSvrReq::kServerNameFieldNumber;
const int SvrRegToSvrReq::kServerIpFieldNumber;
const int SvrRegToSvrReq::kServerPortFieldNumber;
const int SvrRegToSvrReq::kHttpPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SvrRegToSvrReq::SvrRegToSvrReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SvrRegToSvrReq)
}

void SvrRegToSvrReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SvrRegToSvrReq::SvrRegToSvrReq(const SvrRegToSvrReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SvrRegToSvrReq)
}

void SvrRegToSvrReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  serverid_ = 0;
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverport_ = 0;
  httpport_ = 0;
}

SvrRegToSvrReq::~SvrRegToSvrReq() {
  // @@protoc_insertion_point(destructor:SvrRegToSvrReq)
  SharedDtor();
}

void SvrRegToSvrReq::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SvrRegToSvrReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SvrRegToSvrReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SvrRegToSvrReq_descriptor_;
}

const SvrRegToSvrReq& SvrRegToSvrReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SvrRegToSvrReq* SvrRegToSvrReq::default_instance_ = NULL;

SvrRegToSvrReq* SvrRegToSvrReq::New(::google::protobuf::Arena* arena) const {
  SvrRegToSvrReq* n = new SvrRegToSvrReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SvrRegToSvrReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SvrRegToSvrReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SvrRegToSvrReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SvrRegToSvrReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(serverid_, serverport_);
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  httpport_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool SvrRegToSvrReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SvrRegToSvrReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ServerID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ServerName;
        break;
      }

      // optional string ServerName = 2;
      case 2: {
        if (tag == 18) {
         parse_ServerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), this->servername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SvrRegToSvrReq.ServerName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ServerIp;
        break;
      }

      // optional string ServerIp = 3;
      case 3: {
        if (tag == 26) {
         parse_ServerIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serverip().data(), this->serverip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SvrRegToSvrReq.ServerIp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ServerPort;
        break;
      }

      // optional int32 ServerPort = 4;
      case 4: {
        if (tag == 32) {
         parse_ServerPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_HttpPort;
        break;
      }

      // optional int32 HttpPort = 5;
      case 5: {
        if (tag == 40) {
         parse_HttpPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &httpport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SvrRegToSvrReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SvrRegToSvrReq)
  return false;
#undef DO_
}

void SvrRegToSvrReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SvrRegToSvrReq)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // optional string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrReq.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // optional string ServerIp = 3;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrReq.ServerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->serverip(), output);
  }

  // optional int32 ServerPort = 4;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverport(), output);
  }

  // optional int32 HttpPort = 5;
  if (this->httpport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->httpport(), output);
  }

  // @@protoc_insertion_point(serialize_end:SvrRegToSvrReq)
}

::google::protobuf::uint8* SvrRegToSvrReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SvrRegToSvrReq)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // optional string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrReq.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // optional string ServerIp = 3;
  if (this->serverip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrReq.ServerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->serverip(), target);
  }

  // optional int32 ServerPort = 4;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverport(), target);
  }

  // optional int32 HttpPort = 5;
  if (this->httpport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->httpport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SvrRegToSvrReq)
  return target;
}

int SvrRegToSvrReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SvrRegToSvrReq)
  int total_size = 0;

  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // optional string ServerName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // optional string ServerIp = 3;
  if (this->serverip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serverip());
  }

  // optional int32 ServerPort = 4;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // optional int32 HttpPort = 5;
  if (this->httpport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->httpport());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SvrRegToSvrReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SvrRegToSvrReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SvrRegToSvrReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SvrRegToSvrReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SvrRegToSvrReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SvrRegToSvrReq)
    MergeFrom(*source);
  }
}

void SvrRegToSvrReq::MergeFrom(const SvrRegToSvrReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SvrRegToSvrReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.serverip().size() > 0) {

    serverip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serverip_);
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.httpport() != 0) {
    set_httpport(from.httpport());
  }
}

void SvrRegToSvrReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SvrRegToSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SvrRegToSvrReq::CopyFrom(const SvrRegToSvrReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SvrRegToSvrReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SvrRegToSvrReq::IsInitialized() const {

  return true;
}

void SvrRegToSvrReq::Swap(SvrRegToSvrReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SvrRegToSvrReq::InternalSwap(SvrRegToSvrReq* other) {
  std::swap(serverid_, other->serverid_);
  servername_.Swap(&other->servername_);
  serverip_.Swap(&other->serverip_);
  std::swap(serverport_, other->serverport_);
  std::swap(httpport_, other->httpport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SvrRegToSvrReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SvrRegToSvrReq_descriptor_;
  metadata.reflection = SvrRegToSvrReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SvrRegToSvrReq

// optional int32 ServerID = 1;
void SvrRegToSvrReq::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 SvrRegToSvrReq::serverid() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.ServerID)
  return serverid_;
}
 void SvrRegToSvrReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.ServerID)
}

// optional string ServerName = 2;
void SvrRegToSvrReq::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SvrRegToSvrReq::servername() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.ServerName)
  return servername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SvrRegToSvrReq::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.ServerName)
}
 void SvrRegToSvrReq::set_servername(const char* value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SvrRegToSvrReq.ServerName)
}
 void SvrRegToSvrReq::set_servername(const char* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SvrRegToSvrReq.ServerName)
}
 ::std::string* SvrRegToSvrReq::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:SvrRegToSvrReq.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SvrRegToSvrReq::release_servername() {
  // @@protoc_insertion_point(field_release:SvrRegToSvrReq.ServerName)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SvrRegToSvrReq::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:SvrRegToSvrReq.ServerName)
}

// optional string ServerIp = 3;
void SvrRegToSvrReq::clear_serverip() {
  serverip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SvrRegToSvrReq::serverip() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.ServerIp)
  return serverip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SvrRegToSvrReq::set_serverip(const ::std::string& value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.ServerIp)
}
 void SvrRegToSvrReq::set_serverip(const char* value) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SvrRegToSvrReq.ServerIp)
}
 void SvrRegToSvrReq::set_serverip(const char* value, size_t size) {
  
  serverip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SvrRegToSvrReq.ServerIp)
}
 ::std::string* SvrRegToSvrReq::mutable_serverip() {
  
  // @@protoc_insertion_point(field_mutable:SvrRegToSvrReq.ServerIp)
  return serverip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SvrRegToSvrReq::release_serverip() {
  // @@protoc_insertion_point(field_release:SvrRegToSvrReq.ServerIp)
  
  return serverip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SvrRegToSvrReq::set_allocated_serverip(::std::string* serverip) {
  if (serverip != NULL) {
    
  } else {
    
  }
  serverip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverip);
  // @@protoc_insertion_point(field_set_allocated:SvrRegToSvrReq.ServerIp)
}

// optional int32 ServerPort = 4;
void SvrRegToSvrReq::clear_serverport() {
  serverport_ = 0;
}
 ::google::protobuf::int32 SvrRegToSvrReq::serverport() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.ServerPort)
  return serverport_;
}
 void SvrRegToSvrReq::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.ServerPort)
}

// optional int32 HttpPort = 5;
void SvrRegToSvrReq::clear_httpport() {
  httpport_ = 0;
}
 ::google::protobuf::int32 SvrRegToSvrReq::httpport() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrReq.HttpPort)
  return httpport_;
}
 void SvrRegToSvrReq::set_httpport(::google::protobuf::int32 value) {
  
  httpport_ = value;
  // @@protoc_insertion_point(field_set:SvrRegToSvrReq.HttpPort)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SvrRegToSvrAck::kRetCodeFieldNumber;
const int SvrRegToSvrAck::kNewSvrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SvrRegToSvrAck::SvrRegToSvrAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SvrRegToSvrAck)
}

void SvrRegToSvrAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SvrRegToSvrAck::SvrRegToSvrAck(const SvrRegToSvrAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SvrRegToSvrAck)
}

void SvrRegToSvrAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0u;
  newsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SvrRegToSvrAck::~SvrRegToSvrAck() {
  // @@protoc_insertion_point(destructor:SvrRegToSvrAck)
  SharedDtor();
}

void SvrRegToSvrAck::SharedDtor() {
  newsvrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SvrRegToSvrAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SvrRegToSvrAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SvrRegToSvrAck_descriptor_;
}

const SvrRegToSvrAck& SvrRegToSvrAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SvrRegToSvrAck* SvrRegToSvrAck::default_instance_ = NULL;

SvrRegToSvrAck* SvrRegToSvrAck::New(::google::protobuf::Arena* arena) const {
  SvrRegToSvrAck* n = new SvrRegToSvrAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SvrRegToSvrAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SvrRegToSvrAck)
  retcode_ = 0u;
  newsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SvrRegToSvrAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SvrRegToSvrAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_NewSvrName;
        break;
      }

      // optional string NewSvrName = 2;
      case 2: {
        if (tag == 18) {
         parse_NewSvrName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newsvrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newsvrname().data(), this->newsvrname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SvrRegToSvrAck.NewSvrName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SvrRegToSvrAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SvrRegToSvrAck)
  return false;
#undef DO_
}

void SvrRegToSvrAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SvrRegToSvrAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsvrname().data(), this->newsvrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrAck.NewSvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->newsvrname(), output);
  }

  // @@protoc_insertion_point(serialize_end:SvrRegToSvrAck)
}

::google::protobuf::uint8* SvrRegToSvrAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SvrRegToSvrAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsvrname().data(), this->newsvrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SvrRegToSvrAck.NewSvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->newsvrname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SvrRegToSvrAck)
  return target;
}

int SvrRegToSvrAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SvrRegToSvrAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newsvrname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SvrRegToSvrAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SvrRegToSvrAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SvrRegToSvrAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SvrRegToSvrAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SvrRegToSvrAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SvrRegToSvrAck)
    MergeFrom(*source);
  }
}

void SvrRegToSvrAck::MergeFrom(const SvrRegToSvrAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SvrRegToSvrAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.newsvrname().size() > 0) {

    newsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newsvrname_);
  }
}

void SvrRegToSvrAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SvrRegToSvrAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SvrRegToSvrAck::CopyFrom(const SvrRegToSvrAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SvrRegToSvrAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SvrRegToSvrAck::IsInitialized() const {

  return true;
}

void SvrRegToSvrAck::Swap(SvrRegToSvrAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SvrRegToSvrAck::InternalSwap(SvrRegToSvrAck* other) {
  std::swap(retcode_, other->retcode_);
  newsvrname_.Swap(&other->newsvrname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SvrRegToSvrAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SvrRegToSvrAck_descriptor_;
  metadata.reflection = SvrRegToSvrAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SvrRegToSvrAck

// optional uint32 RetCode = 1;
void SvrRegToSvrAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 SvrRegToSvrAck::retcode() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrAck.RetCode)
  return retcode_;
}
 void SvrRegToSvrAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SvrRegToSvrAck.RetCode)
}

// optional string NewSvrName = 2;
void SvrRegToSvrAck::clear_newsvrname() {
  newsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SvrRegToSvrAck::newsvrname() const {
  // @@protoc_insertion_point(field_get:SvrRegToSvrAck.NewSvrName)
  return newsvrname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SvrRegToSvrAck::set_newsvrname(const ::std::string& value) {
  
  newsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SvrRegToSvrAck.NewSvrName)
}
 void SvrRegToSvrAck::set_newsvrname(const char* value) {
  
  newsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SvrRegToSvrAck.NewSvrName)
}
 void SvrRegToSvrAck::set_newsvrname(const char* value, size_t size) {
  
  newsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SvrRegToSvrAck.NewSvrName)
}
 ::std::string* SvrRegToSvrAck::mutable_newsvrname() {
  
  // @@protoc_insertion_point(field_mutable:SvrRegToSvrAck.NewSvrName)
  return newsvrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SvrRegToSvrAck::release_newsvrname() {
  // @@protoc_insertion_point(field_release:SvrRegToSvrAck.NewSvrName)
  
  return newsvrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SvrRegToSvrAck::set_allocated_newsvrname(::std::string* newsvrname) {
  if (newsvrname != NULL) {
    
  } else {
    
  }
  newsvrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newsvrname);
  // @@protoc_insertion_point(field_set_allocated:SvrRegToSvrAck.NewSvrName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectServerReq::kAccountIDFieldNumber;
const int SelectServerReq::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectServerReq::SelectServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SelectServerReq)
}

void SelectServerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SelectServerReq::SelectServerReq(const SelectServerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SelectServerReq)
}

void SelectServerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
  serverid_ = 0;
}

SelectServerReq::~SelectServerReq() {
  // @@protoc_insertion_point(destructor:SelectServerReq)
  SharedDtor();
}

void SelectServerReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SelectServerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectServerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SelectServerReq_descriptor_;
}

const SelectServerReq& SelectServerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SelectServerReq* SelectServerReq::default_instance_ = NULL;

SelectServerReq* SelectServerReq::New(::google::protobuf::Arena* arena) const {
  SelectServerReq* n = new SelectServerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SelectServerReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SelectServerReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SelectServerReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, serverid_);

#undef ZR_HELPER_
#undef ZR_

}

bool SelectServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SelectServerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ServerID;
        break;
      }

      // optional int32 ServerID = 2;
      case 2: {
        if (tag == 16) {
         parse_ServerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SelectServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SelectServerReq)
  return false;
#undef DO_
}

void SelectServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SelectServerReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // optional int32 ServerID = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:SelectServerReq)
}

::google::protobuf::uint8* SelectServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SelectServerReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // optional int32 ServerID = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SelectServerReq)
  return target;
}

int SelectServerReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SelectServerReq)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional int32 ServerID = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SelectServerReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SelectServerReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SelectServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SelectServerReq)
    MergeFrom(*source);
  }
}

void SelectServerReq::MergeFrom(const SelectServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SelectServerReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void SelectServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SelectServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectServerReq::CopyFrom(const SelectServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SelectServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectServerReq::IsInitialized() const {

  return true;
}

void SelectServerReq::Swap(SelectServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectServerReq::InternalSwap(SelectServerReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectServerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SelectServerReq_descriptor_;
  metadata.reflection = SelectServerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectServerReq

// optional uint64 AccountID = 1;
void SelectServerReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SelectServerReq::accountid() const {
  // @@protoc_insertion_point(field_get:SelectServerReq.AccountID)
  return accountid_;
}
 void SelectServerReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:SelectServerReq.AccountID)
}

// optional int32 ServerID = 2;
void SelectServerReq::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 SelectServerReq::serverid() const {
  // @@protoc_insertion_point(field_get:SelectServerReq.ServerID)
  return serverid_;
}
 void SelectServerReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:SelectServerReq.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectServerAck::kRetCodeFieldNumber;
const int SelectServerAck::kAccountIDFieldNumber;
const int SelectServerAck::kServerIDFieldNumber;
const int SelectServerAck::kServerAddrFieldNumber;
const int SelectServerAck::kServerPortFieldNumber;
const int SelectServerAck::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectServerAck::SelectServerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SelectServerAck)
}

void SelectServerAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SelectServerAck::SelectServerAck(const SelectServerAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SelectServerAck)
}

void SelectServerAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0u;
  accountid_ = GOOGLE_ULONGLONG(0);
  serverid_ = 0;
  serveraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverport_ = 0;
  logincode_ = 0;
}

SelectServerAck::~SelectServerAck() {
  // @@protoc_insertion_point(destructor:SelectServerAck)
  SharedDtor();
}

void SelectServerAck::SharedDtor() {
  serveraddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SelectServerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectServerAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SelectServerAck_descriptor_;
}

const SelectServerAck& SelectServerAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SelectServerAck* SelectServerAck::default_instance_ = NULL;

SelectServerAck* SelectServerAck::New(::google::protobuf::Arena* arena) const {
  SelectServerAck* n = new SelectServerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectServerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SelectServerAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SelectServerAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SelectServerAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, serverid_);
  ZR_(serverport_, logincode_);
  serveraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SelectServerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SelectServerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AccountID;
        break;
      }

      // optional uint64 AccountID = 2;
      case 2: {
        if (tag == 16) {
         parse_AccountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ServerID;
        break;
      }

      // optional int32 ServerID = 3;
      case 3: {
        if (tag == 24) {
         parse_ServerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ServerAddr;
        break;
      }

      // optional string ServerAddr = 4;
      case 4: {
        if (tag == 34) {
         parse_ServerAddr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serveraddr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->serveraddr().data(), this->serveraddr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SelectServerAck.ServerAddr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ServerPort;
        break;
      }

      // optional int32 ServerPort = 5;
      case 5: {
        if (tag == 40) {
         parse_ServerPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_LoginCode;
        break;
      }

      // optional int32 LoginCode = 6;
      case 6: {
        if (tag == 48) {
         parse_LoginCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SelectServerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SelectServerAck)
  return false;
#undef DO_
}

void SelectServerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SelectServerAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // optional int32 ServerID = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->serverid(), output);
  }

  // optional string ServerAddr = 4;
  if (this->serveraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddr().data(), this->serveraddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SelectServerAck.ServerAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->serveraddr(), output);
  }

  // optional int32 ServerPort = 5;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverport(), output);
  }

  // optional int32 LoginCode = 6;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:SelectServerAck)
}

::google::protobuf::uint8* SelectServerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SelectServerAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // optional int32 ServerID = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->serverid(), target);
  }

  // optional string ServerAddr = 4;
  if (this->serveraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->serveraddr().data(), this->serveraddr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SelectServerAck.ServerAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->serveraddr(), target);
  }

  // optional int32 ServerPort = 5;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverport(), target);
  }

  // optional int32 LoginCode = 6;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SelectServerAck)
  return target;
}

int SelectServerAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SelectServerAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional int32 ServerID = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // optional string ServerAddr = 4;
  if (this->serveraddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serveraddr());
  }

  // optional int32 ServerPort = 5;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // optional int32 LoginCode = 6;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectServerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SelectServerAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SelectServerAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectServerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SelectServerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SelectServerAck)
    MergeFrom(*source);
  }
}

void SelectServerAck::MergeFrom(const SelectServerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SelectServerAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.serveraddr().size() > 0) {

    serveraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serveraddr_);
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void SelectServerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SelectServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectServerAck::CopyFrom(const SelectServerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SelectServerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectServerAck::IsInitialized() const {

  return true;
}

void SelectServerAck::Swap(SelectServerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectServerAck::InternalSwap(SelectServerAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(accountid_, other->accountid_);
  std::swap(serverid_, other->serverid_);
  serveraddr_.Swap(&other->serveraddr_);
  std::swap(serverport_, other->serverport_);
  std::swap(logincode_, other->logincode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectServerAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SelectServerAck_descriptor_;
  metadata.reflection = SelectServerAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectServerAck

// optional uint32 RetCode = 1;
void SelectServerAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 SelectServerAck::retcode() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.RetCode)
  return retcode_;
}
 void SelectServerAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.RetCode)
}

// optional uint64 AccountID = 2;
void SelectServerAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SelectServerAck::accountid() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.AccountID)
  return accountid_;
}
 void SelectServerAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.AccountID)
}

// optional int32 ServerID = 3;
void SelectServerAck::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 SelectServerAck::serverid() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerID)
  return serverid_;
}
 void SelectServerAck::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerID)
}

// optional string ServerAddr = 4;
void SelectServerAck::clear_serveraddr() {
  serveraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SelectServerAck::serveraddr() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerAddr)
  return serveraddr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SelectServerAck::set_serveraddr(const ::std::string& value) {
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerAddr)
}
 void SelectServerAck::set_serveraddr(const char* value) {
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SelectServerAck.ServerAddr)
}
 void SelectServerAck::set_serveraddr(const char* value, size_t size) {
  
  serveraddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SelectServerAck.ServerAddr)
}
 ::std::string* SelectServerAck::mutable_serveraddr() {
  
  // @@protoc_insertion_point(field_mutable:SelectServerAck.ServerAddr)
  return serveraddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SelectServerAck::release_serveraddr() {
  // @@protoc_insertion_point(field_release:SelectServerAck.ServerAddr)
  
  return serveraddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SelectServerAck::set_allocated_serveraddr(::std::string* serveraddr) {
  if (serveraddr != NULL) {
    
  } else {
    
  }
  serveraddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serveraddr);
  // @@protoc_insertion_point(field_set_allocated:SelectServerAck.ServerAddr)
}

// optional int32 ServerPort = 5;
void SelectServerAck::clear_serverport() {
  serverport_ = 0;
}
 ::google::protobuf::int32 SelectServerAck::serverport() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.ServerPort)
  return serverport_;
}
 void SelectServerAck::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.ServerPort)
}

// optional int32 LoginCode = 6;
void SelectServerAck::clear_logincode() {
  logincode_ = 0;
}
 ::google::protobuf::int32 SelectServerAck::logincode() const {
  // @@protoc_insertion_point(field_get:SelectServerAck.LoginCode)
  return logincode_;
}
 void SelectServerAck::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:SelectServerAck.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleItem::kRoleIDFieldNumber;
const int RoleItem::kNameFieldNumber;
const int RoleItem::kCarrerFieldNumber;
const int RoleItem::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleItem::RoleItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleItem)
}

void RoleItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleItem::RoleItem(const RoleItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleItem)
}

void RoleItem::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  carrer_ = 0;
  level_ = 0;
}

RoleItem::~RoleItem() {
  // @@protoc_insertion_point(destructor:RoleItem)
  SharedDtor();
}

void RoleItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RoleItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleItem_descriptor_;
}

const RoleItem& RoleItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleItem* RoleItem::default_instance_ = NULL;

RoleItem* RoleItem::New(::google::protobuf::Arena* arena) const {
  RoleItem* n = new RoleItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleItem::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(carrer_, level_);
  roleid_ = GOOGLE_ULONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool RoleItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleItem.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Carrer;
        break;
      }

      // optional int32 Carrer = 3;
      case 3: {
        if (tag == 24) {
         parse_Carrer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrer_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Level;
        break;
      }

      // optional int32 Level = 4;
      case 4: {
        if (tag == 32) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleItem)
  return false;
#undef DO_
}

void RoleItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 Carrer = 3;
  if (this->carrer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->carrer(), output);
  }

  // optional int32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleItem)
}

::google::protobuf::uint8* RoleItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 Carrer = 3;
  if (this->carrer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->carrer(), target);
  }

  // optional int32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleItem)
  return target;
}

int RoleItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 Carrer = 3;
  if (this->carrer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrer());
  }

  // optional int32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleItem)
    MergeFrom(*source);
  }
}

void RoleItem::MergeFrom(const RoleItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.carrer() != 0) {
    set_carrer(from.carrer());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void RoleItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleItem::CopyFrom(const RoleItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleItem::IsInitialized() const {

  return true;
}

void RoleItem::Swap(RoleItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleItem::InternalSwap(RoleItem* other) {
  std::swap(roleid_, other->roleid_);
  name_.Swap(&other->name_);
  std::swap(carrer_, other->carrer_);
  std::swap(level_, other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleItem_descriptor_;
  metadata.reflection = RoleItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleItem

// optional uint64 RoleID = 1;
void RoleItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleItem::roleid() const {
  // @@protoc_insertion_point(field_get:RoleItem.RoleID)
  return roleid_;
}
 void RoleItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.RoleID)
}

// optional string Name = 2;
void RoleItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RoleItem::name() const {
  // @@protoc_insertion_point(field_get:RoleItem.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleItem.Name)
}
 void RoleItem::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleItem.Name)
}
 void RoleItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleItem.Name)
}
 ::std::string* RoleItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RoleItem::release_name() {
  // @@protoc_insertion_point(field_release:RoleItem.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleItem.Name)
}

// optional int32 Carrer = 3;
void RoleItem::clear_carrer() {
  carrer_ = 0;
}
 ::google::protobuf::int32 RoleItem::carrer() const {
  // @@protoc_insertion_point(field_get:RoleItem.Carrer)
  return carrer_;
}
 void RoleItem::set_carrer(::google::protobuf::int32 value) {
  
  carrer_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.Carrer)
}

// optional int32 Level = 4;
void RoleItem::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 RoleItem::level() const {
  // @@protoc_insertion_point(field_get:RoleItem.Level)
  return level_;
}
 void RoleItem::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.Level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListReq::kAccountIDFieldNumber;
const int RoleListReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListReq::RoleListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleListReq)
}

void RoleListReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleListReq::RoleListReq(const RoleListReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleListReq)
}

void RoleListReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
  logincode_ = 0;
}

RoleListReq::~RoleListReq() {
  // @@protoc_insertion_point(destructor:RoleListReq)
  SharedDtor();
}

void RoleListReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleListReq_descriptor_;
}

const RoleListReq& RoleListReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleListReq* RoleListReq::default_instance_ = NULL;

RoleListReq* RoleListReq::New(::google::protobuf::Arena* arena) const {
  RoleListReq* n = new RoleListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleListReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleListReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleListReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, logincode_);

#undef ZR_HELPER_
#undef ZR_

}

bool RoleListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LoginCode;
        break;
      }

      // optional int32 LoginCode = 2;
      case 2: {
        if (tag == 16) {
         parse_LoginCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleListReq)
  return false;
#undef DO_
}

void RoleListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleListReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // optional int32 LoginCode = 2;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleListReq)
}

::google::protobuf::uint8* RoleListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleListReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // optional int32 LoginCode = 2;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleListReq)
  return target;
}

int RoleListReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleListReq)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional int32 LoginCode = 2;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleListReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleListReq)
    MergeFrom(*source);
  }
}

void RoleListReq::MergeFrom(const RoleListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleListReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListReq::CopyFrom(const RoleListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleListReq::IsInitialized() const {

  return true;
}

void RoleListReq::Swap(RoleListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListReq::InternalSwap(RoleListReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(logincode_, other->logincode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleListReq_descriptor_;
  metadata.reflection = RoleListReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleListReq

// optional uint64 AccountID = 1;
void RoleListReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleListReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleListReq.AccountID)
  return accountid_;
}
 void RoleListReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.AccountID)
}

// optional int32 LoginCode = 2;
void RoleListReq::clear_logincode() {
  logincode_ = 0;
}
 ::google::protobuf::int32 RoleListReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleListReq.LoginCode)
  return logincode_;
}
 void RoleListReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleListAck::kRetCodeFieldNumber;
const int RoleListAck::kAccountIDFieldNumber;
const int RoleListAck::kRoleListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleListAck::RoleListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleListAck)
}

void RoleListAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleListAck::RoleListAck(const RoleListAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleListAck)
}

void RoleListAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  accountid_ = GOOGLE_ULONGLONG(0);
}

RoleListAck::~RoleListAck() {
  // @@protoc_insertion_point(destructor:RoleListAck)
  SharedDtor();
}

void RoleListAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleListAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleListAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleListAck_descriptor_;
}

const RoleListAck& RoleListAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleListAck* RoleListAck::default_instance_ = NULL;

RoleListAck* RoleListAck::New(::google::protobuf::Arena* arena) const {
  RoleListAck* n = new RoleListAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleListAck)
  retcode_ = 0u;
  accountid_ = GOOGLE_ULONGLONG(0);
  rolelist_.Clear();
}

bool RoleListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleListAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AccountID;
        break;
      }

      // optional uint64 AccountID = 2;
      case 2: {
        if (tag == 16) {
         parse_AccountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RoleList;
        break;
      }

      // repeated .RoleItem RoleList = 3;
      case 3: {
        if (tag == 26) {
         parse_RoleList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_RoleList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rolelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_RoleList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleListAck)
  return false;
#undef DO_
}

void RoleListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleListAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // repeated .RoleItem RoleList = 3;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rolelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleListAck)
}

::google::protobuf::uint8* RoleListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleListAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // repeated .RoleItem RoleList = 3;
  for (unsigned int i = 0, n = this->rolelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rolelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleListAck)
  return target;
}

int RoleListAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleListAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // repeated .RoleItem RoleList = 3;
  total_size += 1 * this->rolelist_size();
  for (int i = 0; i < this->rolelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rolelist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleListAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleListAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleListAck)
    MergeFrom(*source);
  }
}

void RoleListAck::MergeFrom(const RoleListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleListAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rolelist_.MergeFrom(from.rolelist_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void RoleListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleListAck::CopyFrom(const RoleListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleListAck::IsInitialized() const {

  return true;
}

void RoleListAck::Swap(RoleListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleListAck::InternalSwap(RoleListAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(accountid_, other->accountid_);
  rolelist_.UnsafeArenaSwap(&other->rolelist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleListAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleListAck_descriptor_;
  metadata.reflection = RoleListAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleListAck

// optional uint32 RetCode = 1;
void RoleListAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 RoleListAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleListAck.RetCode)
  return retcode_;
}
 void RoleListAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleListAck.RetCode)
}

// optional uint64 AccountID = 2;
void RoleListAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleListAck::accountid() const {
  // @@protoc_insertion_point(field_get:RoleListAck.AccountID)
  return accountid_;
}
 void RoleListAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleListAck.AccountID)
}

// repeated .RoleItem RoleList = 3;
int RoleListAck::rolelist_size() const {
  return rolelist_.size();
}
void RoleListAck::clear_rolelist() {
  rolelist_.Clear();
}
const ::RoleItem& RoleListAck::rolelist(int index) const {
  // @@protoc_insertion_point(field_get:RoleListAck.RoleList)
  return rolelist_.Get(index);
}
::RoleItem* RoleListAck::mutable_rolelist(int index) {
  // @@protoc_insertion_point(field_mutable:RoleListAck.RoleList)
  return rolelist_.Mutable(index);
}
::RoleItem* RoleListAck::add_rolelist() {
  // @@protoc_insertion_point(field_add:RoleListAck.RoleList)
  return rolelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::RoleItem >*
RoleListAck::mutable_rolelist() {
  // @@protoc_insertion_point(field_mutable_list:RoleListAck.RoleList)
  return &rolelist_;
}
const ::google::protobuf::RepeatedPtrField< ::RoleItem >&
RoleListAck::rolelist() const {
  // @@protoc_insertion_point(field_list:RoleListAck.RoleList)
  return rolelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleCreateReq::kAccountIDFieldNumber;
const int RoleCreateReq::kNameFieldNumber;
const int RoleCreateReq::kCarrerFieldNumber;
const int RoleCreateReq::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleCreateReq::RoleCreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleCreateReq)
}

void RoleCreateReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleCreateReq::RoleCreateReq(const RoleCreateReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleCreateReq)
}

void RoleCreateReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  carrer_ = 0;
  channel_ = 0;
}

RoleCreateReq::~RoleCreateReq() {
  // @@protoc_insertion_point(destructor:RoleCreateReq)
  SharedDtor();
}

void RoleCreateReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RoleCreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleCreateReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleCreateReq_descriptor_;
}

const RoleCreateReq& RoleCreateReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleCreateReq* RoleCreateReq::default_instance_ = NULL;

RoleCreateReq* RoleCreateReq::New(::google::protobuf::Arena* arena) const {
  RoleCreateReq* n = new RoleCreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleCreateReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleCreateReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleCreateReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(carrer_, channel_);
  accountid_ = GOOGLE_ULONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool RoleCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleCreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleCreateReq.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Carrer;
        break;
      }

      // optional int32 Carrer = 3;
      case 3: {
        if (tag == 24) {
         parse_Carrer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrer_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Channel;
        break;
      }

      // optional int32 Channel = 4;
      case 4: {
        if (tag == 32) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleCreateReq)
  return false;
#undef DO_
}

void RoleCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleCreateReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateReq.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 Carrer = 3;
  if (this->carrer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->carrer(), output);
  }

  // optional int32 Channel = 4;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->channel(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleCreateReq)
}

::google::protobuf::uint8* RoleCreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleCreateReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateReq.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 Carrer = 3;
  if (this->carrer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->carrer(), target);
  }

  // optional int32 Channel = 4;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->channel(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleCreateReq)
  return target;
}

int RoleCreateReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleCreateReq)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 Carrer = 3;
  if (this->carrer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrer());
  }

  // optional int32 Channel = 4;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleCreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleCreateReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleCreateReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleCreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleCreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleCreateReq)
    MergeFrom(*source);
  }
}

void RoleCreateReq::MergeFrom(const RoleCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleCreateReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.carrer() != 0) {
    set_carrer(from.carrer());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void RoleCreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleCreateReq::CopyFrom(const RoleCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCreateReq::IsInitialized() const {

  return true;
}

void RoleCreateReq::Swap(RoleCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleCreateReq::InternalSwap(RoleCreateReq* other) {
  std::swap(accountid_, other->accountid_);
  name_.Swap(&other->name_);
  std::swap(carrer_, other->carrer_);
  std::swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleCreateReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleCreateReq_descriptor_;
  metadata.reflection = RoleCreateReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleCreateReq

// optional uint64 AccountID = 1;
void RoleCreateReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleCreateReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.AccountID)
  return accountid_;
}
 void RoleCreateReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.AccountID)
}

// optional string Name = 2;
void RoleCreateReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RoleCreateReq::name() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleCreateReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleCreateReq.Name)
}
 void RoleCreateReq::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleCreateReq.Name)
}
 void RoleCreateReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleCreateReq.Name)
}
 ::std::string* RoleCreateReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleCreateReq.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RoleCreateReq::release_name() {
  // @@protoc_insertion_point(field_release:RoleCreateReq.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleCreateReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleCreateReq.Name)
}

// optional int32 Carrer = 3;
void RoleCreateReq::clear_carrer() {
  carrer_ = 0;
}
 ::google::protobuf::int32 RoleCreateReq::carrer() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.Carrer)
  return carrer_;
}
 void RoleCreateReq::set_carrer(::google::protobuf::int32 value) {
  
  carrer_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.Carrer)
}

// optional int32 Channel = 4;
void RoleCreateReq::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 RoleCreateReq::channel() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.Channel)
  return channel_;
}
 void RoleCreateReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.Channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleCreateAck::kRetCodeFieldNumber;
const int RoleCreateAck::kAccountIDFieldNumber;
const int RoleCreateAck::kRoleIDFieldNumber;
const int RoleCreateAck::kNameFieldNumber;
const int RoleCreateAck::kCarrerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleCreateAck::RoleCreateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleCreateAck)
}

void RoleCreateAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleCreateAck::RoleCreateAck(const RoleCreateAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleCreateAck)
}

void RoleCreateAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0u;
  accountid_ = GOOGLE_ULONGLONG(0);
  roleid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  carrer_ = 0;
}

RoleCreateAck::~RoleCreateAck() {
  // @@protoc_insertion_point(destructor:RoleCreateAck)
  SharedDtor();
}

void RoleCreateAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void RoleCreateAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleCreateAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleCreateAck_descriptor_;
}

const RoleCreateAck& RoleCreateAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleCreateAck* RoleCreateAck::default_instance_ = NULL;

RoleCreateAck* RoleCreateAck::New(::google::protobuf::Arena* arena) const {
  RoleCreateAck* n = new RoleCreateAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleCreateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleCreateAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleCreateAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleCreateAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, carrer_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool RoleCreateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleCreateAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AccountID;
        break;
      }

      // optional uint64 AccountID = 2;
      case 2: {
        if (tag == 16) {
         parse_AccountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RoleID;
        break;
      }

      // optional uint64 RoleID = 3;
      case 3: {
        if (tag == 24) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Name;
        break;
      }

      // optional string Name = 4;
      case 4: {
        if (tag == 34) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RoleCreateAck.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Carrer;
        break;
      }

      // optional int32 Carrer = 5;
      case 5: {
        if (tag == 40) {
         parse_Carrer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrer_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleCreateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleCreateAck)
  return false;
#undef DO_
}

void RoleCreateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleCreateAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // optional uint64 RoleID = 3;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roleid(), output);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateAck.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional int32 Carrer = 5;
  if (this->carrer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->carrer(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleCreateAck)
}

::google::protobuf::uint8* RoleCreateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleCreateAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // optional uint64 RoleID = 3;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roleid(), target);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RoleCreateAck.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional int32 Carrer = 5;
  if (this->carrer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->carrer(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleCreateAck)
  return target;
}

int RoleCreateAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleCreateAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional uint64 RoleID = 3;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 Carrer = 5;
  if (this->carrer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrer());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleCreateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleCreateAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleCreateAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleCreateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleCreateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleCreateAck)
    MergeFrom(*source);
  }
}

void RoleCreateAck::MergeFrom(const RoleCreateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleCreateAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.carrer() != 0) {
    set_carrer(from.carrer());
  }
}

void RoleCreateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleCreateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleCreateAck::CopyFrom(const RoleCreateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleCreateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleCreateAck::IsInitialized() const {

  return true;
}

void RoleCreateAck::Swap(RoleCreateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleCreateAck::InternalSwap(RoleCreateAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  name_.Swap(&other->name_);
  std::swap(carrer_, other->carrer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleCreateAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleCreateAck_descriptor_;
  metadata.reflection = RoleCreateAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleCreateAck

// optional uint32 RetCode = 1;
void RoleCreateAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 RoleCreateAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.RetCode)
  return retcode_;
}
 void RoleCreateAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.RetCode)
}

// optional uint64 AccountID = 2;
void RoleCreateAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleCreateAck::accountid() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.AccountID)
  return accountid_;
}
 void RoleCreateAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.AccountID)
}

// optional uint64 RoleID = 3;
void RoleCreateAck::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleCreateAck::roleid() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.RoleID)
  return roleid_;
}
 void RoleCreateAck::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.RoleID)
}

// optional string Name = 4;
void RoleCreateAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& RoleCreateAck::name() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleCreateAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleCreateAck.Name)
}
 void RoleCreateAck::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleCreateAck.Name)
}
 void RoleCreateAck::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleCreateAck.Name)
}
 ::std::string* RoleCreateAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleCreateAck.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* RoleCreateAck::release_name() {
  // @@protoc_insertion_point(field_release:RoleCreateAck.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void RoleCreateAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleCreateAck.Name)
}

// optional int32 Carrer = 5;
void RoleCreateAck::clear_carrer() {
  carrer_ = 0;
}
 ::google::protobuf::int32 RoleCreateAck::carrer() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.Carrer)
  return carrer_;
}
 void RoleCreateAck::set_carrer(::google::protobuf::int32 value) {
  
  carrer_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.Carrer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDeleteReq::kAccountIDFieldNumber;
const int RoleDeleteReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDeleteReq::RoleDeleteReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDeleteReq)
}

void RoleDeleteReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleDeleteReq::RoleDeleteReq(const RoleDeleteReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleDeleteReq)
}

void RoleDeleteReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
  roleid_ = GOOGLE_ULONGLONG(0);
}

RoleDeleteReq::~RoleDeleteReq() {
  // @@protoc_insertion_point(destructor:RoleDeleteReq)
  SharedDtor();
}

void RoleDeleteReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleDeleteReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDeleteReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleDeleteReq_descriptor_;
}

const RoleDeleteReq& RoleDeleteReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleDeleteReq* RoleDeleteReq::default_instance_ = NULL;

RoleDeleteReq* RoleDeleteReq::New(::google::protobuf::Arena* arena) const {
  RoleDeleteReq* n = new RoleDeleteReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDeleteReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDeleteReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleDeleteReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleDeleteReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, roleid_);

#undef ZR_HELPER_
#undef ZR_

}

bool RoleDeleteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDeleteReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }

      // optional uint64 RoleID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDeleteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDeleteReq)
  return false;
#undef DO_
}

void RoleDeleteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDeleteReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDeleteReq)
}

::google::protobuf::uint8* RoleDeleteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleDeleteReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDeleteReq)
  return target;
}

int RoleDeleteReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDeleteReq)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDeleteReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDeleteReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleDeleteReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDeleteReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDeleteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDeleteReq)
    MergeFrom(*source);
  }
}

void RoleDeleteReq::MergeFrom(const RoleDeleteReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDeleteReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleDeleteReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDeleteReq::CopyFrom(const RoleDeleteReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDeleteReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDeleteReq::IsInitialized() const {

  return true;
}

void RoleDeleteReq::Swap(RoleDeleteReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDeleteReq::InternalSwap(RoleDeleteReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDeleteReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleDeleteReq_descriptor_;
  metadata.reflection = RoleDeleteReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDeleteReq

// optional uint64 AccountID = 1;
void RoleDeleteReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleDeleteReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.AccountID)
  return accountid_;
}
 void RoleDeleteReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.AccountID)
}

// optional uint64 RoleID = 2;
void RoleDeleteReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleDeleteReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.RoleID)
  return roleid_;
}
 void RoleDeleteReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDeleteAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDeleteAck::RoleDeleteAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDeleteAck)
}

void RoleDeleteAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleDeleteAck::RoleDeleteAck(const RoleDeleteAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleDeleteAck)
}

void RoleDeleteAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

RoleDeleteAck::~RoleDeleteAck() {
  // @@protoc_insertion_point(destructor:RoleDeleteAck)
  SharedDtor();
}

void RoleDeleteAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleDeleteAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDeleteAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleDeleteAck_descriptor_;
}

const RoleDeleteAck& RoleDeleteAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleDeleteAck* RoleDeleteAck::default_instance_ = NULL;

RoleDeleteAck* RoleDeleteAck::New(::google::protobuf::Arena* arena) const {
  RoleDeleteAck* n = new RoleDeleteAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDeleteAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDeleteAck)
  retcode_ = 0u;
}

bool RoleDeleteAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDeleteAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDeleteAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDeleteAck)
  return false;
#undef DO_
}

void RoleDeleteAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDeleteAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDeleteAck)
}

::google::protobuf::uint8* RoleDeleteAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleDeleteAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDeleteAck)
  return target;
}

int RoleDeleteAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDeleteAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDeleteAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDeleteAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleDeleteAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDeleteAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDeleteAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDeleteAck)
    MergeFrom(*source);
  }
}

void RoleDeleteAck::MergeFrom(const RoleDeleteAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDeleteAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleDeleteAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDeleteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDeleteAck::CopyFrom(const RoleDeleteAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDeleteAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDeleteAck::IsInitialized() const {

  return true;
}

void RoleDeleteAck::Swap(RoleDeleteAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDeleteAck::InternalSwap(RoleDeleteAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDeleteAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleDeleteAck_descriptor_;
  metadata.reflection = RoleDeleteAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDeleteAck

// optional uint32 RetCode = 1;
void RoleDeleteAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 RoleDeleteAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDeleteAck.RetCode)
  return retcode_;
}
 void RoleDeleteAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLoginReq::kAccountIDFieldNumber;
const int RoleLoginReq::kRoleIDFieldNumber;
const int RoleLoginReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLoginReq::RoleLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLoginReq)
}

void RoleLoginReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleLoginReq::RoleLoginReq(const RoleLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleLoginReq)
}

void RoleLoginReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
  roleid_ = GOOGLE_ULONGLONG(0);
  logincode_ = 0;
}

RoleLoginReq::~RoleLoginReq() {
  // @@protoc_insertion_point(destructor:RoleLoginReq)
  SharedDtor();
}

void RoleLoginReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleLoginReq_descriptor_;
}

const RoleLoginReq& RoleLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleLoginReq* RoleLoginReq::default_instance_ = NULL;

RoleLoginReq* RoleLoginReq::New(::google::protobuf::Arena* arena) const {
  RoleLoginReq* n = new RoleLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLoginReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleLoginReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleLoginReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, logincode_);

#undef ZR_HELPER_
#undef ZR_

}

bool RoleLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }

      // optional uint64 RoleID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LoginCode;
        break;
      }

      // optional int32 LoginCode = 3;
      case 3: {
        if (tag == 24) {
         parse_LoginCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLoginReq)
  return false;
#undef DO_
}

void RoleLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLoginReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // optional int32 LoginCode = 3;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLoginReq)
}

::google::protobuf::uint8* RoleLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleLoginReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // optional int32 LoginCode = 3;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLoginReq)
  return target;
}

int RoleLoginReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLoginReq)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 LoginCode = 3;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleLoginReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLoginReq)
    MergeFrom(*source);
  }
}

void RoleLoginReq::MergeFrom(const RoleLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLoginReq::CopyFrom(const RoleLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLoginReq::IsInitialized() const {

  return true;
}

void RoleLoginReq::Swap(RoleLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLoginReq::InternalSwap(RoleLoginReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(logincode_, other->logincode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleLoginReq_descriptor_;
  metadata.reflection = RoleLoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLoginReq

// optional uint64 AccountID = 1;
void RoleLoginReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.AccountID)
  return accountid_;
}
 void RoleLoginReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.AccountID)
}

// optional uint64 RoleID = 2;
void RoleLoginReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleLoginReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.RoleID)
  return roleid_;
}
 void RoleLoginReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.RoleID)
}

// optional int32 LoginCode = 3;
void RoleLoginReq::clear_logincode() {
  logincode_ = 0;
}
 ::google::protobuf::int32 RoleLoginReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.LoginCode)
  return logincode_;
}
 void RoleLoginReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLogoutReq::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLogoutReq::RoleLogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLogoutReq)
}

void RoleLogoutReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleLogoutReq::RoleLogoutReq(const RoleLogoutReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleLogoutReq)
}

void RoleLogoutReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
}

RoleLogoutReq::~RoleLogoutReq() {
  // @@protoc_insertion_point(destructor:RoleLogoutReq)
  SharedDtor();
}

void RoleLogoutReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleLogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLogoutReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleLogoutReq_descriptor_;
}

const RoleLogoutReq& RoleLogoutReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleLogoutReq* RoleLogoutReq::default_instance_ = NULL;

RoleLogoutReq* RoleLogoutReq::New(::google::protobuf::Arena* arena) const {
  RoleLogoutReq* n = new RoleLogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLogoutReq)
  accountid_ = GOOGLE_ULONGLONG(0);
}

bool RoleLogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLogoutReq)
  return false;
#undef DO_
}

void RoleLogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLogoutReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLogoutReq)
}

::google::protobuf::uint8* RoleLogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleLogoutReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLogoutReq)
  return target;
}

int RoleLogoutReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLogoutReq)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLogoutReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleLogoutReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLogoutReq)
    MergeFrom(*source);
  }
}

void RoleLogoutReq::MergeFrom(const RoleLogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLogoutReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void RoleLogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLogoutReq::CopyFrom(const RoleLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLogoutReq::IsInitialized() const {

  return true;
}

void RoleLogoutReq::Swap(RoleLogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLogoutReq::InternalSwap(RoleLogoutReq* other) {
  std::swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLogoutReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleLogoutReq_descriptor_;
  metadata.reflection = RoleLogoutReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLogoutReq

// optional uint64 AccountID = 1;
void RoleLogoutReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleLogoutReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLogoutReq.AccountID)
  return accountid_;
}
 void RoleLogoutReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutReq.AccountID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLogoutAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLogoutAck::RoleLogoutAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleLogoutAck)
}

void RoleLogoutAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleLogoutAck::RoleLogoutAck(const RoleLogoutAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleLogoutAck)
}

void RoleLogoutAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

RoleLogoutAck::~RoleLogoutAck() {
  // @@protoc_insertion_point(destructor:RoleLogoutAck)
  SharedDtor();
}

void RoleLogoutAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleLogoutAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLogoutAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleLogoutAck_descriptor_;
}

const RoleLogoutAck& RoleLogoutAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleLogoutAck* RoleLogoutAck::default_instance_ = NULL;

RoleLogoutAck* RoleLogoutAck::New(::google::protobuf::Arena* arena) const {
  RoleLogoutAck* n = new RoleLogoutAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLogoutAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleLogoutAck)
  retcode_ = 0u;
}

bool RoleLogoutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleLogoutAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleLogoutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleLogoutAck)
  return false;
#undef DO_
}

void RoleLogoutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleLogoutAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleLogoutAck)
}

::google::protobuf::uint8* RoleLogoutAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleLogoutAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleLogoutAck)
  return target;
}

int RoleLogoutAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleLogoutAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLogoutAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleLogoutAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleLogoutAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLogoutAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleLogoutAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleLogoutAck)
    MergeFrom(*source);
  }
}

void RoleLogoutAck::MergeFrom(const RoleLogoutAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleLogoutAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleLogoutAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLogoutAck::CopyFrom(const RoleLogoutAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleLogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLogoutAck::IsInitialized() const {

  return true;
}

void RoleLogoutAck::Swap(RoleLogoutAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLogoutAck::InternalSwap(RoleLogoutAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLogoutAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleLogoutAck_descriptor_;
  metadata.reflection = RoleLogoutAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLogoutAck

// optional uint32 RetCode = 1;
void RoleLogoutAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 RoleLogoutAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleLogoutAck.RetCode)
  return retcode_;
}
 void RoleLogoutAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDisconnectReq::kAccountIDFieldNumber;
const int RoleDisconnectReq::kRoleIDFieldNumber;
const int RoleDisconnectReq::kLoginCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDisconnectReq::RoleDisconnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDisconnectReq)
}

void RoleDisconnectReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleDisconnectReq::RoleDisconnectReq(const RoleDisconnectReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleDisconnectReq)
}

void RoleDisconnectReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
  roleid_ = GOOGLE_ULONGLONG(0);
  logincode_ = 0;
}

RoleDisconnectReq::~RoleDisconnectReq() {
  // @@protoc_insertion_point(destructor:RoleDisconnectReq)
  SharedDtor();
}

void RoleDisconnectReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleDisconnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDisconnectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleDisconnectReq_descriptor_;
}

const RoleDisconnectReq& RoleDisconnectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleDisconnectReq* RoleDisconnectReq::default_instance_ = NULL;

RoleDisconnectReq* RoleDisconnectReq::New(::google::protobuf::Arena* arena) const {
  RoleDisconnectReq* n = new RoleDisconnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDisconnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDisconnectReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoleDisconnectReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoleDisconnectReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, logincode_);

#undef ZR_HELPER_
#undef ZR_

}

bool RoleDisconnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDisconnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }

      // optional uint64 RoleID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LoginCode;
        break;
      }

      // optional int32 LoginCode = 3;
      case 3: {
        if (tag == 24) {
         parse_LoginCode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logincode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDisconnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDisconnectReq)
  return false;
#undef DO_
}

void RoleDisconnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDisconnectReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // optional int32 LoginCode = 3;
  if (this->logincode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->logincode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDisconnectReq)
}

::google::protobuf::uint8* RoleDisconnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleDisconnectReq)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // optional int32 LoginCode = 3;
  if (this->logincode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->logincode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDisconnectReq)
  return target;
}

int RoleDisconnectReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDisconnectReq)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 LoginCode = 3;
  if (this->logincode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logincode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDisconnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDisconnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleDisconnectReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDisconnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDisconnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDisconnectReq)
    MergeFrom(*source);
  }
}

void RoleDisconnectReq::MergeFrom(const RoleDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDisconnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.logincode() != 0) {
    set_logincode(from.logincode());
  }
}

void RoleDisconnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDisconnectReq::CopyFrom(const RoleDisconnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDisconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDisconnectReq::IsInitialized() const {

  return true;
}

void RoleDisconnectReq::Swap(RoleDisconnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDisconnectReq::InternalSwap(RoleDisconnectReq* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(roleid_, other->roleid_);
  std::swap(logincode_, other->logincode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDisconnectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleDisconnectReq_descriptor_;
  metadata.reflection = RoleDisconnectReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDisconnectReq

// optional uint64 AccountID = 1;
void RoleDisconnectReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleDisconnectReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.AccountID)
  return accountid_;
}
 void RoleDisconnectReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.AccountID)
}

// optional uint64 RoleID = 2;
void RoleDisconnectReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleDisconnectReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.RoleID)
  return roleid_;
}
 void RoleDisconnectReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.RoleID)
}

// optional int32 LoginCode = 3;
void RoleDisconnectReq::clear_logincode() {
  logincode_ = 0;
}
 ::google::protobuf::int32 RoleDisconnectReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.LoginCode)
  return logincode_;
}
 void RoleDisconnectReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.LoginCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleDisconnectAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleDisconnectAck::RoleDisconnectAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleDisconnectAck)
}

void RoleDisconnectAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleDisconnectAck::RoleDisconnectAck(const RoleDisconnectAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleDisconnectAck)
}

void RoleDisconnectAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

RoleDisconnectAck::~RoleDisconnectAck() {
  // @@protoc_insertion_point(destructor:RoleDisconnectAck)
  SharedDtor();
}

void RoleDisconnectAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleDisconnectAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleDisconnectAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleDisconnectAck_descriptor_;
}

const RoleDisconnectAck& RoleDisconnectAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleDisconnectAck* RoleDisconnectAck::default_instance_ = NULL;

RoleDisconnectAck* RoleDisconnectAck::New(::google::protobuf::Arena* arena) const {
  RoleDisconnectAck* n = new RoleDisconnectAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleDisconnectAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleDisconnectAck)
  retcode_ = 0u;
}

bool RoleDisconnectAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleDisconnectAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleDisconnectAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleDisconnectAck)
  return false;
#undef DO_
}

void RoleDisconnectAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleDisconnectAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleDisconnectAck)
}

::google::protobuf::uint8* RoleDisconnectAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleDisconnectAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleDisconnectAck)
  return target;
}

int RoleDisconnectAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleDisconnectAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleDisconnectAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleDisconnectAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleDisconnectAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleDisconnectAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleDisconnectAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleDisconnectAck)
    MergeFrom(*source);
  }
}

void RoleDisconnectAck::MergeFrom(const RoleDisconnectAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleDisconnectAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleDisconnectAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleDisconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleDisconnectAck::CopyFrom(const RoleDisconnectAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleDisconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleDisconnectAck::IsInitialized() const {

  return true;
}

void RoleDisconnectAck::Swap(RoleDisconnectAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleDisconnectAck::InternalSwap(RoleDisconnectAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleDisconnectAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleDisconnectAck_descriptor_;
  metadata.reflection = RoleDisconnectAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleDisconnectAck

// optional uint32 RetCode = 1;
void RoleDisconnectAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 RoleDisconnectAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectAck.RetCode)
  return retcode_;
}
 void RoleDisconnectAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleReconnectReq::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleReconnectReq::RoleReconnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleReconnectReq)
}

void RoleReconnectReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleReconnectReq::RoleReconnectReq(const RoleReconnectReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleReconnectReq)
}

void RoleReconnectReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
}

RoleReconnectReq::~RoleReconnectReq() {
  // @@protoc_insertion_point(destructor:RoleReconnectReq)
  SharedDtor();
}

void RoleReconnectReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleReconnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleReconnectReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleReconnectReq_descriptor_;
}

const RoleReconnectReq& RoleReconnectReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleReconnectReq* RoleReconnectReq::default_instance_ = NULL;

RoleReconnectReq* RoleReconnectReq::New(::google::protobuf::Arena* arena) const {
  RoleReconnectReq* n = new RoleReconnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleReconnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleReconnectReq)
  roleid_ = GOOGLE_ULONGLONG(0);
}

bool RoleReconnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleReconnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleReconnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleReconnectReq)
  return false;
#undef DO_
}

void RoleReconnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleReconnectReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleReconnectReq)
}

::google::protobuf::uint8* RoleReconnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleReconnectReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleReconnectReq)
  return target;
}

int RoleReconnectReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleReconnectReq)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleReconnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleReconnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleReconnectReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleReconnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleReconnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleReconnectReq)
    MergeFrom(*source);
  }
}

void RoleReconnectReq::MergeFrom(const RoleReconnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleReconnectReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RoleReconnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleReconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleReconnectReq::CopyFrom(const RoleReconnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleReconnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleReconnectReq::IsInitialized() const {

  return true;
}

void RoleReconnectReq::Swap(RoleReconnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleReconnectReq::InternalSwap(RoleReconnectReq* other) {
  std::swap(roleid_, other->roleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleReconnectReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleReconnectReq_descriptor_;
  metadata.reflection = RoleReconnectReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleReconnectReq

// optional uint64 RoleID = 1;
void RoleReconnectReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RoleReconnectReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleReconnectReq.RoleID)
  return roleid_;
}
 void RoleReconnectReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleReconnectReq.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleReconnectAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleReconnectAck::RoleReconnectAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoleReconnectAck)
}

void RoleReconnectAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RoleReconnectAck::RoleReconnectAck(const RoleReconnectAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoleReconnectAck)
}

void RoleReconnectAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

RoleReconnectAck::~RoleReconnectAck() {
  // @@protoc_insertion_point(destructor:RoleReconnectAck)
  SharedDtor();
}

void RoleReconnectAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RoleReconnectAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleReconnectAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoleReconnectAck_descriptor_;
}

const RoleReconnectAck& RoleReconnectAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RoleReconnectAck* RoleReconnectAck::default_instance_ = NULL;

RoleReconnectAck* RoleReconnectAck::New(::google::protobuf::Arena* arena) const {
  RoleReconnectAck* n = new RoleReconnectAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleReconnectAck::Clear() {
// @@protoc_insertion_point(message_clear_start:RoleReconnectAck)
  retcode_ = 0u;
}

bool RoleReconnectAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoleReconnectAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoleReconnectAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoleReconnectAck)
  return false;
#undef DO_
}

void RoleReconnectAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoleReconnectAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:RoleReconnectAck)
}

::google::protobuf::uint8* RoleReconnectAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoleReconnectAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RoleReconnectAck)
  return target;
}

int RoleReconnectAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RoleReconnectAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleReconnectAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoleReconnectAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RoleReconnectAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleReconnectAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoleReconnectAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoleReconnectAck)
    MergeFrom(*source);
  }
}

void RoleReconnectAck::MergeFrom(const RoleReconnectAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoleReconnectAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RoleReconnectAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoleReconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleReconnectAck::CopyFrom(const RoleReconnectAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoleReconnectAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleReconnectAck::IsInitialized() const {

  return true;
}

void RoleReconnectAck::Swap(RoleReconnectAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleReconnectAck::InternalSwap(RoleReconnectAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleReconnectAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoleReconnectAck_descriptor_;
  metadata.reflection = RoleReconnectAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleReconnectAck

// optional uint32 RetCode = 1;
void RoleReconnectAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 RoleReconnectAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleReconnectAck.RetCode)
  return retcode_;
}
 void RoleReconnectAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleReconnectAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveConnectNty::kRoleIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveConnectNty::RemoveConnectNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemoveConnectNty)
}

void RemoveConnectNty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RemoveConnectNty::RemoveConnectNty(const RemoveConnectNty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RemoveConnectNty)
}

void RemoveConnectNty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
}

RemoveConnectNty::~RemoveConnectNty() {
  // @@protoc_insertion_point(destructor:RemoveConnectNty)
  SharedDtor();
}

void RemoveConnectNty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveConnectNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveConnectNty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveConnectNty_descriptor_;
}

const RemoveConnectNty& RemoveConnectNty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

RemoveConnectNty* RemoveConnectNty::default_instance_ = NULL;

RemoveConnectNty* RemoveConnectNty::New(::google::protobuf::Arena* arena) const {
  RemoveConnectNty* n = new RemoveConnectNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveConnectNty::Clear() {
// @@protoc_insertion_point(message_clear_start:RemoveConnectNty)
  roleid_ = GOOGLE_ULONGLONG(0);
}

bool RemoveConnectNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemoveConnectNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemoveConnectNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemoveConnectNty)
  return false;
#undef DO_
}

void RemoveConnectNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemoveConnectNty)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // @@protoc_insertion_point(serialize_end:RemoveConnectNty)
}

::google::protobuf::uint8* RemoveConnectNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemoveConnectNty)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RemoveConnectNty)
  return target;
}

int RemoveConnectNty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:RemoveConnectNty)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveConnectNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemoveConnectNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RemoveConnectNty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveConnectNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemoveConnectNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemoveConnectNty)
    MergeFrom(*source);
  }
}

void RemoveConnectNty::MergeFrom(const RemoveConnectNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemoveConnectNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
}

void RemoveConnectNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemoveConnectNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveConnectNty::CopyFrom(const RemoveConnectNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemoveConnectNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveConnectNty::IsInitialized() const {

  return true;
}

void RemoveConnectNty::Swap(RemoveConnectNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveConnectNty::InternalSwap(RemoveConnectNty* other) {
  std::swap(roleid_, other->roleid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveConnectNty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveConnectNty_descriptor_;
  metadata.reflection = RemoveConnectNty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveConnectNty

// optional uint64 RoleID = 1;
void RemoveConnectNty::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 RemoveConnectNty::roleid() const {
  // @@protoc_insertion_point(field_get:RemoveConnectNty.RoleID)
  return roleid_;
}
 void RemoveConnectNty::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RemoveConnectNty.RoleID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneReq::kCopyIDFieldNumber;
const int CreateNewSceneReq::kCopyTypeFieldNumber;
const int CreateNewSceneReq::kPlayerNumFieldNumber;
const int CreateNewSceneReq::kCreateParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneReq::CreateNewSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateNewSceneReq)
}

void CreateNewSceneReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateNewSceneReq::CreateNewSceneReq(const CreateNewSceneReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateNewSceneReq)
}

void CreateNewSceneReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  copyid_ = 0;
  copytype_ = 0;
  playernum_ = 0;
  createparam_ = GOOGLE_ULONGLONG(0);
}

CreateNewSceneReq::~CreateNewSceneReq() {
  // @@protoc_insertion_point(destructor:CreateNewSceneReq)
  SharedDtor();
}

void CreateNewSceneReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateNewSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateNewSceneReq_descriptor_;
}

const CreateNewSceneReq& CreateNewSceneReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

CreateNewSceneReq* CreateNewSceneReq::default_instance_ = NULL;

CreateNewSceneReq* CreateNewSceneReq::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneReq* n = new CreateNewSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateNewSceneReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateNewSceneReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateNewSceneReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(copyid_, playernum_);

#undef ZR_HELPER_
#undef ZR_

}

bool CreateNewSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateNewSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 CopyID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyType;
        break;
      }

      // optional int32 CopyType = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PlayerNum;
        break;
      }

      // optional int32 PlayerNum = 3;
      case 3: {
        if (tag == 24) {
         parse_PlayerNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playernum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CreateParam;
        break;
      }

      // optional uint64 CreateParam = 4;
      case 4: {
        if (tag == 32) {
         parse_CreateParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createparam_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateNewSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateNewSceneReq)
  return false;
#undef DO_
}

void CreateNewSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateNewSceneReq)
  // optional int32 CopyID = 1;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->copyid(), output);
  }

  // optional int32 CopyType = 2;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copytype(), output);
  }

  // optional int32 PlayerNum = 3;
  if (this->playernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->playernum(), output);
  }

  // optional uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->createparam(), output);
  }

  // @@protoc_insertion_point(serialize_end:CreateNewSceneReq)
}

::google::protobuf::uint8* CreateNewSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateNewSceneReq)
  // optional int32 CopyID = 1;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->copyid(), target);
  }

  // optional int32 CopyType = 2;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copytype(), target);
  }

  // optional int32 PlayerNum = 3;
  if (this->playernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->playernum(), target);
  }

  // optional uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->createparam(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CreateNewSceneReq)
  return target;
}

int CreateNewSceneReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CreateNewSceneReq)
  int total_size = 0;

  // optional int32 CopyID = 1;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // optional int32 CopyType = 2;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // optional int32 PlayerNum = 3;
  if (this->playernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playernum());
  }

  // optional uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createparam());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateNewSceneReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateNewSceneReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateNewSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateNewSceneReq)
    MergeFrom(*source);
  }
}

void CreateNewSceneReq::MergeFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateNewSceneReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.playernum() != 0) {
    set_playernum(from.playernum());
  }
  if (from.createparam() != 0) {
    set_createparam(from.createparam());
  }
}

void CreateNewSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneReq::CopyFrom(const CreateNewSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateNewSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneReq::IsInitialized() const {

  return true;
}

void CreateNewSceneReq::Swap(CreateNewSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneReq::InternalSwap(CreateNewSceneReq* other) {
  std::swap(copyid_, other->copyid_);
  std::swap(copytype_, other->copytype_);
  std::swap(playernum_, other->playernum_);
  std::swap(createparam_, other->createparam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateNewSceneReq_descriptor_;
  metadata.reflection = CreateNewSceneReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewSceneReq

// optional int32 CopyID = 1;
void CreateNewSceneReq::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 CreateNewSceneReq::copyid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CopyID)
  return copyid_;
}
 void CreateNewSceneReq::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CopyID)
}

// optional int32 CopyType = 2;
void CreateNewSceneReq::clear_copytype() {
  copytype_ = 0;
}
 ::google::protobuf::int32 CreateNewSceneReq::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CopyType)
  return copytype_;
}
 void CreateNewSceneReq::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CopyType)
}

// optional int32 PlayerNum = 3;
void CreateNewSceneReq::clear_playernum() {
  playernum_ = 0;
}
 ::google::protobuf::int32 CreateNewSceneReq::playernum() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.PlayerNum)
  return playernum_;
}
 void CreateNewSceneReq::set_playernum(::google::protobuf::int32 value) {
  
  playernum_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.PlayerNum)
}

// optional uint64 CreateParam = 4;
void CreateNewSceneReq::clear_createparam() {
  createparam_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CreateNewSceneReq::createparam() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneReq.CreateParam)
  return createparam_;
}
 void CreateNewSceneReq::set_createparam(::google::protobuf::uint64 value) {
  
  createparam_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneReq.CreateParam)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateNewSceneAck::kRetCodeFieldNumber;
const int CreateNewSceneAck::kCopyIDFieldNumber;
const int CreateNewSceneAck::kCopyGuidFieldNumber;
const int CreateNewSceneAck::kCreateParamFieldNumber;
const int CreateNewSceneAck::kServerIDFieldNumber;
const int CreateNewSceneAck::kCopyTypeFieldNumber;
const int CreateNewSceneAck::kPlayerNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateNewSceneAck::CreateNewSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateNewSceneAck)
}

void CreateNewSceneAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CreateNewSceneAck::CreateNewSceneAck(const CreateNewSceneAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CreateNewSceneAck)
}

void CreateNewSceneAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  copyid_ = 0;
  copyguid_ = 0;
  createparam_ = GOOGLE_ULONGLONG(0);
  serverid_ = 0;
  copytype_ = 0;
  playernum_ = 0;
}

CreateNewSceneAck::~CreateNewSceneAck() {
  // @@protoc_insertion_point(destructor:CreateNewSceneAck)
  SharedDtor();
}

void CreateNewSceneAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreateNewSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateNewSceneAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreateNewSceneAck_descriptor_;
}

const CreateNewSceneAck& CreateNewSceneAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

CreateNewSceneAck* CreateNewSceneAck::default_instance_ = NULL;

CreateNewSceneAck* CreateNewSceneAck::New(::google::protobuf::Arena* arena) const {
  CreateNewSceneAck* n = new CreateNewSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateNewSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateNewSceneAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CreateNewSceneAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CreateNewSceneAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(retcode_, playernum_);

#undef ZR_HELPER_
#undef ZR_

}

bool CreateNewSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateNewSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyID;
        break;
      }

      // optional int32 CopyID = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CopyGuid;
        break;
      }

      // optional int32 CopyGuid = 3;
      case 3: {
        if (tag == 24) {
         parse_CopyGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CreateParam;
        break;
      }

      // optional uint64 CreateParam = 4;
      case 4: {
        if (tag == 32) {
         parse_CreateParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createparam_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ServerID;
        break;
      }

      // optional int32 ServerID = 5;
      case 5: {
        if (tag == 40) {
         parse_ServerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_CopyType;
        break;
      }

      // optional int32 CopyType = 6;
      case 6: {
        if (tag == 48) {
         parse_CopyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_PlayerNum;
        break;
      }

      // optional int32 PlayerNum = 7;
      case 7: {
        if (tag == 56) {
         parse_PlayerNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playernum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateNewSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateNewSceneAck)
  return false;
#undef DO_
}

void CreateNewSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateNewSceneAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // optional uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->createparam(), output);
  }

  // optional int32 ServerID = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverid(), output);
  }

  // optional int32 CopyType = 6;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->copytype(), output);
  }

  // optional int32 PlayerNum = 7;
  if (this->playernum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->playernum(), output);
  }

  // @@protoc_insertion_point(serialize_end:CreateNewSceneAck)
}

::google::protobuf::uint8* CreateNewSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateNewSceneAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // optional uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->createparam(), target);
  }

  // optional int32 ServerID = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverid(), target);
  }

  // optional int32 CopyType = 6;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->copytype(), target);
  }

  // optional int32 PlayerNum = 7;
  if (this->playernum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->playernum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CreateNewSceneAck)
  return target;
}

int CreateNewSceneAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CreateNewSceneAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // optional uint64 CreateParam = 4;
  if (this->createparam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createparam());
  }

  // optional int32 ServerID = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // optional int32 CopyType = 6;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // optional int32 PlayerNum = 7;
  if (this->playernum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playernum());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateNewSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateNewSceneAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CreateNewSceneAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateNewSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateNewSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateNewSceneAck)
    MergeFrom(*source);
  }
}

void CreateNewSceneAck::MergeFrom(const CreateNewSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateNewSceneAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.createparam() != 0) {
    set_createparam(from.createparam());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.playernum() != 0) {
    set_playernum(from.playernum());
  }
}

void CreateNewSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateNewSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateNewSceneAck::CopyFrom(const CreateNewSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateNewSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateNewSceneAck::IsInitialized() const {

  return true;
}

void CreateNewSceneAck::Swap(CreateNewSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateNewSceneAck::InternalSwap(CreateNewSceneAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(copyid_, other->copyid_);
  std::swap(copyguid_, other->copyguid_);
  std::swap(createparam_, other->createparam_);
  std::swap(serverid_, other->serverid_);
  std::swap(copytype_, other->copytype_);
  std::swap(playernum_, other->playernum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateNewSceneAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreateNewSceneAck_descriptor_;
  metadata.reflection = CreateNewSceneAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateNewSceneAck

// optional uint32 RetCode = 1;
void CreateNewSceneAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 CreateNewSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.RetCode)
  return retcode_;
}
 void CreateNewSceneAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.RetCode)
}

// optional int32 CopyID = 2;
void CreateNewSceneAck::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 CreateNewSceneAck::copyid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyID)
  return copyid_;
}
 void CreateNewSceneAck::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyID)
}

// optional int32 CopyGuid = 3;
void CreateNewSceneAck::clear_copyguid() {
  copyguid_ = 0;
}
 ::google::protobuf::int32 CreateNewSceneAck::copyguid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyGuid)
  return copyguid_;
}
 void CreateNewSceneAck::set_copyguid(::google::protobuf::int32 value) {
  
  copyguid_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyGuid)
}

// optional uint64 CreateParam = 4;
void CreateNewSceneAck::clear_createparam() {
  createparam_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 CreateNewSceneAck::createparam() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CreateParam)
  return createparam_;
}
 void CreateNewSceneAck::set_createparam(::google::protobuf::uint64 value) {
  
  createparam_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CreateParam)
}

// optional int32 ServerID = 5;
void CreateNewSceneAck::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 CreateNewSceneAck::serverid() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.ServerID)
  return serverid_;
}
 void CreateNewSceneAck::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.ServerID)
}

// optional int32 CopyType = 6;
void CreateNewSceneAck::clear_copytype() {
  copytype_ = 0;
}
 ::google::protobuf::int32 CreateNewSceneAck::copytype() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.CopyType)
  return copytype_;
}
 void CreateNewSceneAck::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.CopyType)
}

// optional int32 PlayerNum = 7;
void CreateNewSceneAck::clear_playernum() {
  playernum_ = 0;
}
 ::google::protobuf::int32 CreateNewSceneAck::playernum() const {
  // @@protoc_insertion_point(field_get:CreateNewSceneAck.PlayerNum)
  return playernum_;
}
 void CreateNewSceneAck::set_playernum(::google::protobuf::int32 value) {
  
  playernum_ = value;
  // @@protoc_insertion_point(field_set:CreateNewSceneAck.PlayerNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneReq::kRoleIDFieldNumber;
const int EnterSceneReq::kServerIDFieldNumber;
const int EnterSceneReq::kCopyGuidFieldNumber;
const int EnterSceneReq::kCopyIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneReq::EnterSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterSceneReq)
}

void EnterSceneReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EnterSceneReq::EnterSceneReq(const EnterSceneReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EnterSceneReq)
}

void EnterSceneReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  serverid_ = 0;
  copyguid_ = 0;
  copyid_ = 0;
}

EnterSceneReq::~EnterSceneReq() {
  // @@protoc_insertion_point(destructor:EnterSceneReq)
  SharedDtor();
}

void EnterSceneReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EnterSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterSceneReq_descriptor_;
}

const EnterSceneReq& EnterSceneReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

EnterSceneReq* EnterSceneReq::default_instance_ = NULL;

EnterSceneReq* EnterSceneReq::New(::google::protobuf::Arena* arena) const {
  EnterSceneReq* n = new EnterSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterSceneReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EnterSceneReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EnterSceneReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, copyid_);

#undef ZR_HELPER_
#undef ZR_

}

bool EnterSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ServerID;
        break;
      }

      // optional int32 ServerID = 2;
      case 2: {
        if (tag == 16) {
         parse_ServerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CopyGuid;
        break;
      }

      // optional int32 CopyGuid = 3;
      case 3: {
        if (tag == 24) {
         parse_CopyGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CopyID;
        break;
      }

      // optional int32 CopyID = 4;
      case 4: {
        if (tag == 32) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterSceneReq)
  return false;
#undef DO_
}

void EnterSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterSceneReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int32 ServerID = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverid(), output);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // optional int32 CopyID = 4;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->copyid(), output);
  }

  // @@protoc_insertion_point(serialize_end:EnterSceneReq)
}

::google::protobuf::uint8* EnterSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnterSceneReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int32 ServerID = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverid(), target);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // optional int32 CopyID = 4;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->copyid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:EnterSceneReq)
  return target;
}

int EnterSceneReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:EnterSceneReq)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 ServerID = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // optional int32 CopyID = 4;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterSceneReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterSceneReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterSceneReq)
    MergeFrom(*source);
  }
}

void EnterSceneReq::MergeFrom(const EnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterSceneReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
}

void EnterSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneReq::CopyFrom(const EnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneReq::IsInitialized() const {

  return true;
}

void EnterSceneReq::Swap(EnterSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneReq::InternalSwap(EnterSceneReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(serverid_, other->serverid_);
  std::swap(copyguid_, other->copyguid_);
  std::swap(copyid_, other->copyid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterSceneReq_descriptor_;
  metadata.reflection = EnterSceneReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterSceneReq

// optional uint64 RoleID = 1;
void EnterSceneReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 EnterSceneReq::roleid() const {
  // @@protoc_insertion_point(field_get:EnterSceneReq.RoleID)
  return roleid_;
}
 void EnterSceneReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneReq.RoleID)
}

// optional int32 ServerID = 2;
void EnterSceneReq::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 EnterSceneReq::serverid() const {
  // @@protoc_insertion_point(field_get:EnterSceneReq.ServerID)
  return serverid_;
}
 void EnterSceneReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneReq.ServerID)
}

// optional int32 CopyGuid = 3;
void EnterSceneReq::clear_copyguid() {
  copyguid_ = 0;
}
 ::google::protobuf::int32 EnterSceneReq::copyguid() const {
  // @@protoc_insertion_point(field_get:EnterSceneReq.CopyGuid)
  return copyguid_;
}
 void EnterSceneReq::set_copyguid(::google::protobuf::int32 value) {
  
  copyguid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneReq.CopyGuid)
}

// optional int32 CopyID = 4;
void EnterSceneReq::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 EnterSceneReq::copyid() const {
  // @@protoc_insertion_point(field_get:EnterSceneReq.CopyID)
  return copyid_;
}
 void EnterSceneReq::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneReq.CopyID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneAck::kRetCodeFieldNumber;
const int EnterSceneAck::kCopyIDFieldNumber;
const int EnterSceneAck::kCopyGuidFieldNumber;
const int EnterSceneAck::kRoleIDFieldNumber;
const int EnterSceneAck::kCarrerFieldNumber;
const int EnterSceneAck::kActorIDFieldNumber;
const int EnterSceneAck::kRoleNameFieldNumber;
const int EnterSceneAck::kCampFieldNumber;
const int EnterSceneAck::kXFieldNumber;
const int EnterSceneAck::kYFieldNumber;
const int EnterSceneAck::kZFieldNumber;
const int EnterSceneAck::kFtFieldNumber;
const int EnterSceneAck::kHpFieldNumber;
const int EnterSceneAck::kMpFieldNumber;
const int EnterSceneAck::kHpMaxFieldNumber;
const int EnterSceneAck::kMpMaxFieldNumber;
const int EnterSceneAck::kSpeedFieldNumber;
const int EnterSceneAck::kMountIDFieldNumber;
const int EnterSceneAck::kEquipsFieldNumber;
const int EnterSceneAck::kSkillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneAck::EnterSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EnterSceneAck)
}

void EnterSceneAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EnterSceneAck::EnterSceneAck(const EnterSceneAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EnterSceneAck)
}

void EnterSceneAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0u;
  copyid_ = 0;
  copyguid_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  carrer_ = 0;
  actorid_ = 0;
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camp_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  ft_ = 0;
  hp_ = 0;
  mp_ = 0;
  hpmax_ = 0;
  mpmax_ = 0;
  speed_ = 0;
  mountid_ = 0;
}

EnterSceneAck::~EnterSceneAck() {
  // @@protoc_insertion_point(destructor:EnterSceneAck)
  SharedDtor();
}

void EnterSceneAck::SharedDtor() {
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EnterSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnterSceneAck_descriptor_;
}

const EnterSceneAck& EnterSceneAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

EnterSceneAck* EnterSceneAck::default_instance_ = NULL;

EnterSceneAck* EnterSceneAck::New(::google::protobuf::Arena* arena) const {
  EnterSceneAck* n = new EnterSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:EnterSceneAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EnterSceneAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EnterSceneAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(retcode_, carrer_);
  ZR_(actorid_, camp_);
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(x_, mpmax_);
  ZR_(speed_, mountid_);

#undef ZR_HELPER_
#undef ZR_

  equips_.Clear();
  skills_.Clear();
}

bool EnterSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EnterSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyID;
        break;
      }

      // optional int32 CopyID = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CopyGuid;
        break;
      }

      // optional int32 CopyGuid = 3;
      case 3: {
        if (tag == 24) {
         parse_CopyGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RoleID;
        break;
      }

      // optional uint64 RoleID = 4;
      case 4: {
        if (tag == 32) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Carrer;
        break;
      }

      // optional int32 Carrer = 5;
      case 5: {
        if (tag == 40) {
         parse_Carrer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrer_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 6;
      case 6: {
        if (tag == 48) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_RoleName;
        break;
      }

      // optional string RoleName = 7;
      case 7: {
        if (tag == 58) {
         parse_RoleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "EnterSceneAck.RoleName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_Camp;
        break;
      }

      // optional int32 Camp = 8;
      case 8: {
        if (tag == 64) {
         parse_Camp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_X;
        break;
      }

      // optional float X = 9;
      case 9: {
        if (tag == 77) {
         parse_X:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_Y;
        break;
      }

      // optional float Y = 10;
      case 10: {
        if (tag == 85) {
         parse_Y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_Z;
        break;
      }

      // optional float Z = 11;
      case 11: {
        if (tag == 93) {
         parse_Z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(101)) goto parse_Ft;
        break;
      }

      // optional float Ft = 12;
      case 12: {
        if (tag == 101) {
         parse_Ft:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ft_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_Hp;
        break;
      }

      // optional int32 Hp = 13;
      case 13: {
        if (tag == 104) {
         parse_Hp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_Mp;
        break;
      }

      // optional int32 Mp = 14;
      case 14: {
        if (tag == 112) {
         parse_Mp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_HpMax;
        break;
      }

      // optional int32 HpMax = 15;
      case 15: {
        if (tag == 120) {
         parse_HpMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hpmax_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_MpMax;
        break;
      }

      // optional int32 MpMax = 16;
      case 16: {
        if (tag == 128) {
         parse_MpMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mpmax_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_Speed;
        break;
      }

      // optional int32 Speed = 17;
      case 17: {
        if (tag == 136) {
         parse_Speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_MountID;
        break;
      }

      // optional int32 MountID = 18;
      case 18: {
        if (tag == 144) {
         parse_MountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_Equips;
        break;
      }

      // repeated int32 Equips = 19;
      case 19: {
        if (tag == 154) {
         parse_Equips:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_equips())));
        } else if (tag == 152) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 154, input, this->mutable_equips())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_Skills;
        break;
      }

      // repeated .SkillItem Skills = 20;
      case 20: {
        if (tag == 162) {
         parse_Skills:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_loop_Skills;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EnterSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EnterSceneAck)
  return false;
#undef DO_
}

void EnterSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EnterSceneAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // optional uint64 RoleID = 4;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->roleid(), output);
  }

  // optional int32 Carrer = 5;
  if (this->carrer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->carrer(), output);
  }

  // optional int32 ActorID = 6;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->actorid(), output);
  }

  // optional string RoleName = 7;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnterSceneAck.RoleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->rolename(), output);
  }

  // optional int32 Camp = 8;
  if (this->camp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->camp(), output);
  }

  // optional float X = 9;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->x(), output);
  }

  // optional float Y = 10;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->y(), output);
  }

  // optional float Z = 11;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->z(), output);
  }

  // optional float Ft = 12;
  if (this->ft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->ft(), output);
  }

  // optional int32 Hp = 13;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->hp(), output);
  }

  // optional int32 Mp = 14;
  if (this->mp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->mp(), output);
  }

  // optional int32 HpMax = 15;
  if (this->hpmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->hpmax(), output);
  }

  // optional int32 MpMax = 16;
  if (this->mpmax() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->mpmax(), output);
  }

  // optional int32 Speed = 17;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->speed(), output);
  }

  // optional int32 MountID = 18;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->mountid(), output);
  }

  // repeated int32 Equips = 19;
  if (this->equips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(19, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_equips_cached_byte_size_);
  }
  for (int i = 0; i < this->equips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->equips(i), output);
  }

  // repeated .SkillItem Skills = 20;
  for (unsigned int i = 0, n = this->skills_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->skills(i), output);
  }

  // @@protoc_insertion_point(serialize_end:EnterSceneAck)
}

::google::protobuf::uint8* EnterSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EnterSceneAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // optional uint64 RoleID = 4;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->roleid(), target);
  }

  // optional int32 Carrer = 5;
  if (this->carrer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->carrer(), target);
  }

  // optional int32 ActorID = 6;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->actorid(), target);
  }

  // optional string RoleName = 7;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "EnterSceneAck.RoleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->rolename(), target);
  }

  // optional int32 Camp = 8;
  if (this->camp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->camp(), target);
  }

  // optional float X = 9;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->x(), target);
  }

  // optional float Y = 10;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->y(), target);
  }

  // optional float Z = 11;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->z(), target);
  }

  // optional float Ft = 12;
  if (this->ft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->ft(), target);
  }

  // optional int32 Hp = 13;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->hp(), target);
  }

  // optional int32 Mp = 14;
  if (this->mp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->mp(), target);
  }

  // optional int32 HpMax = 15;
  if (this->hpmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->hpmax(), target);
  }

  // optional int32 MpMax = 16;
  if (this->mpmax() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->mpmax(), target);
  }

  // optional int32 Speed = 17;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->speed(), target);
  }

  // optional int32 MountID = 18;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->mountid(), target);
  }

  // repeated int32 Equips = 19;
  if (this->equips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      19,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _equips_cached_byte_size_, target);
  }
  for (int i = 0; i < this->equips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->equips(i), target);
  }

  // repeated .SkillItem Skills = 20;
  for (unsigned int i = 0, n = this->skills_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->skills(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:EnterSceneAck)
  return target;
}

int EnterSceneAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:EnterSceneAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // optional uint64 RoleID = 4;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 Carrer = 5;
  if (this->carrer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrer());
  }

  // optional int32 ActorID = 6;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional string RoleName = 7;
  if (this->rolename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rolename());
  }

  // optional int32 Camp = 8;
  if (this->camp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());
  }

  // optional float X = 9;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // optional float Y = 10;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // optional float Z = 11;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // optional float Ft = 12;
  if (this->ft() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 Hp = 13;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // optional int32 Mp = 14;
  if (this->mp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mp());
  }

  // optional int32 HpMax = 15;
  if (this->hpmax() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hpmax());
  }

  // optional int32 MpMax = 16;
  if (this->mpmax() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mpmax());
  }

  // optional int32 Speed = 17;
  if (this->speed() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->speed());
  }

  // optional int32 MountID = 18;
  if (this->mountid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mountid());
  }

  // repeated int32 Equips = 19;
  {
    int data_size = 0;
    for (int i = 0; i < this->equips_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->equips(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equips_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .SkillItem Skills = 20;
  total_size += 2 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EnterSceneAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EnterSceneAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EnterSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EnterSceneAck)
    MergeFrom(*source);
  }
}

void EnterSceneAck::MergeFrom(const EnterSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EnterSceneAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  equips_.MergeFrom(from.equips_);
  skills_.MergeFrom(from.skills_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.carrer() != 0) {
    set_carrer(from.carrer());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.rolename().size() > 0) {

    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  if (from.camp() != 0) {
    set_camp(from.camp());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.ft() != 0) {
    set_ft(from.ft());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.mp() != 0) {
    set_mp(from.mp());
  }
  if (from.hpmax() != 0) {
    set_hpmax(from.hpmax());
  }
  if (from.mpmax() != 0) {
    set_mpmax(from.mpmax());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
}

void EnterSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EnterSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneAck::CopyFrom(const EnterSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnterSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneAck::IsInitialized() const {

  return true;
}

void EnterSceneAck::Swap(EnterSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneAck::InternalSwap(EnterSceneAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(copyid_, other->copyid_);
  std::swap(copyguid_, other->copyguid_);
  std::swap(roleid_, other->roleid_);
  std::swap(carrer_, other->carrer_);
  std::swap(actorid_, other->actorid_);
  rolename_.Swap(&other->rolename_);
  std::swap(camp_, other->camp_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(ft_, other->ft_);
  std::swap(hp_, other->hp_);
  std::swap(mp_, other->mp_);
  std::swap(hpmax_, other->hpmax_);
  std::swap(mpmax_, other->mpmax_);
  std::swap(speed_, other->speed_);
  std::swap(mountid_, other->mountid_);
  equips_.UnsafeArenaSwap(&other->equips_);
  skills_.UnsafeArenaSwap(&other->skills_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EnterSceneAck_descriptor_;
  metadata.reflection = EnterSceneAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterSceneAck

// optional uint32 RetCode = 1;
void EnterSceneAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 EnterSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RetCode)
  return retcode_;
}
 void EnterSceneAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.RetCode)
}

// optional int32 CopyID = 2;
void EnterSceneAck::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::copyid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.CopyID)
  return copyid_;
}
 void EnterSceneAck::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.CopyID)
}

// optional int32 CopyGuid = 3;
void EnterSceneAck::clear_copyguid() {
  copyguid_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::copyguid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.CopyGuid)
  return copyguid_;
}
 void EnterSceneAck::set_copyguid(::google::protobuf::int32 value) {
  
  copyguid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.CopyGuid)
}

// optional uint64 RoleID = 4;
void EnterSceneAck::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 EnterSceneAck::roleid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RoleID)
  return roleid_;
}
 void EnterSceneAck::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.RoleID)
}

// optional int32 Carrer = 5;
void EnterSceneAck::clear_carrer() {
  carrer_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::carrer() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Carrer)
  return carrer_;
}
 void EnterSceneAck::set_carrer(::google::protobuf::int32 value) {
  
  carrer_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.Carrer)
}

// optional int32 ActorID = 6;
void EnterSceneAck::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::actorid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.ActorID)
  return actorid_;
}
 void EnterSceneAck::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.ActorID)
}

// optional string RoleName = 7;
void EnterSceneAck::clear_rolename() {
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EnterSceneAck::rolename() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.RoleName)
  return rolename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnterSceneAck::set_rolename(const ::std::string& value) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.RoleName)
}
 void EnterSceneAck::set_rolename(const char* value) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EnterSceneAck.RoleName)
}
 void EnterSceneAck::set_rolename(const char* value, size_t size) {
  
  rolename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EnterSceneAck.RoleName)
}
 ::std::string* EnterSceneAck::mutable_rolename() {
  
  // @@protoc_insertion_point(field_mutable:EnterSceneAck.RoleName)
  return rolename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EnterSceneAck::release_rolename() {
  // @@protoc_insertion_point(field_release:EnterSceneAck.RoleName)
  
  return rolename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EnterSceneAck::set_allocated_rolename(::std::string* rolename) {
  if (rolename != NULL) {
    
  } else {
    
  }
  rolename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rolename);
  // @@protoc_insertion_point(field_set_allocated:EnterSceneAck.RoleName)
}

// optional int32 Camp = 8;
void EnterSceneAck::clear_camp() {
  camp_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::camp() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Camp)
  return camp_;
}
 void EnterSceneAck::set_camp(::google::protobuf::int32 value) {
  
  camp_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.Camp)
}

// optional float X = 9;
void EnterSceneAck::clear_x() {
  x_ = 0;
}
 float EnterSceneAck::x() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.X)
  return x_;
}
 void EnterSceneAck::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.X)
}

// optional float Y = 10;
void EnterSceneAck::clear_y() {
  y_ = 0;
}
 float EnterSceneAck::y() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Y)
  return y_;
}
 void EnterSceneAck::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.Y)
}

// optional float Z = 11;
void EnterSceneAck::clear_z() {
  z_ = 0;
}
 float EnterSceneAck::z() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Z)
  return z_;
}
 void EnterSceneAck::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.Z)
}

// optional float Ft = 12;
void EnterSceneAck::clear_ft() {
  ft_ = 0;
}
 float EnterSceneAck::ft() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Ft)
  return ft_;
}
 void EnterSceneAck::set_ft(float value) {
  
  ft_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.Ft)
}

// optional int32 Hp = 13;
void EnterSceneAck::clear_hp() {
  hp_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::hp() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Hp)
  return hp_;
}
 void EnterSceneAck::set_hp(::google::protobuf::int32 value) {
  
  hp_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.Hp)
}

// optional int32 Mp = 14;
void EnterSceneAck::clear_mp() {
  mp_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::mp() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Mp)
  return mp_;
}
 void EnterSceneAck::set_mp(::google::protobuf::int32 value) {
  
  mp_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.Mp)
}

// optional int32 HpMax = 15;
void EnterSceneAck::clear_hpmax() {
  hpmax_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::hpmax() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.HpMax)
  return hpmax_;
}
 void EnterSceneAck::set_hpmax(::google::protobuf::int32 value) {
  
  hpmax_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.HpMax)
}

// optional int32 MpMax = 16;
void EnterSceneAck::clear_mpmax() {
  mpmax_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::mpmax() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.MpMax)
  return mpmax_;
}
 void EnterSceneAck::set_mpmax(::google::protobuf::int32 value) {
  
  mpmax_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.MpMax)
}

// optional int32 Speed = 17;
void EnterSceneAck::clear_speed() {
  speed_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::speed() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Speed)
  return speed_;
}
 void EnterSceneAck::set_speed(::google::protobuf::int32 value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.Speed)
}

// optional int32 MountID = 18;
void EnterSceneAck::clear_mountid() {
  mountid_ = 0;
}
 ::google::protobuf::int32 EnterSceneAck::mountid() const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.MountID)
  return mountid_;
}
 void EnterSceneAck::set_mountid(::google::protobuf::int32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:EnterSceneAck.MountID)
}

// repeated int32 Equips = 19;
int EnterSceneAck::equips_size() const {
  return equips_.size();
}
void EnterSceneAck::clear_equips() {
  equips_.Clear();
}
 ::google::protobuf::int32 EnterSceneAck::equips(int index) const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Equips)
  return equips_.Get(index);
}
 void EnterSceneAck::set_equips(int index, ::google::protobuf::int32 value) {
  equips_.Set(index, value);
  // @@protoc_insertion_point(field_set:EnterSceneAck.Equips)
}
 void EnterSceneAck::add_equips(::google::protobuf::int32 value) {
  equips_.Add(value);
  // @@protoc_insertion_point(field_add:EnterSceneAck.Equips)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
EnterSceneAck::equips() const {
  // @@protoc_insertion_point(field_list:EnterSceneAck.Equips)
  return equips_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
EnterSceneAck::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:EnterSceneAck.Equips)
  return &equips_;
}

// repeated .SkillItem Skills = 20;
int EnterSceneAck::skills_size() const {
  return skills_.size();
}
void EnterSceneAck::clear_skills() {
  skills_.Clear();
}
const ::SkillItem& EnterSceneAck::skills(int index) const {
  // @@protoc_insertion_point(field_get:EnterSceneAck.Skills)
  return skills_.Get(index);
}
::SkillItem* EnterSceneAck::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:EnterSceneAck.Skills)
  return skills_.Mutable(index);
}
::SkillItem* EnterSceneAck::add_skills() {
  // @@protoc_insertion_point(field_add:EnterSceneAck.Skills)
  return skills_.Add();
}
::google::protobuf::RepeatedPtrField< ::SkillItem >*
EnterSceneAck::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:EnterSceneAck.Skills)
  return &skills_;
}
const ::google::protobuf::RepeatedPtrField< ::SkillItem >&
EnterSceneAck::skills() const {
  // @@protoc_insertion_point(field_list:EnterSceneAck.Skills)
  return skills_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackToCityReq::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackToCityReq::BackToCityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BackToCityReq)
}

void BackToCityReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BackToCityReq::BackToCityReq(const BackToCityReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BackToCityReq)
}

void BackToCityReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  param_ = 0u;
}

BackToCityReq::~BackToCityReq() {
  // @@protoc_insertion_point(destructor:BackToCityReq)
  SharedDtor();
}

void BackToCityReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BackToCityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackToCityReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BackToCityReq_descriptor_;
}

const BackToCityReq& BackToCityReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

BackToCityReq* BackToCityReq::default_instance_ = NULL;

BackToCityReq* BackToCityReq::New(::google::protobuf::Arena* arena) const {
  BackToCityReq* n = new BackToCityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackToCityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:BackToCityReq)
  param_ = 0u;
}

bool BackToCityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BackToCityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Param = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BackToCityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BackToCityReq)
  return false;
#undef DO_
}

void BackToCityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BackToCityReq)
  // optional uint32 Param = 1;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->param(), output);
  }

  // @@protoc_insertion_point(serialize_end:BackToCityReq)
}

::google::protobuf::uint8* BackToCityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BackToCityReq)
  // optional uint32 Param = 1;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->param(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BackToCityReq)
  return target;
}

int BackToCityReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:BackToCityReq)
  int total_size = 0;

  // optional uint32 Param = 1;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackToCityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BackToCityReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BackToCityReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BackToCityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BackToCityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BackToCityReq)
    MergeFrom(*source);
  }
}

void BackToCityReq::MergeFrom(const BackToCityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BackToCityReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
}

void BackToCityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BackToCityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackToCityReq::CopyFrom(const BackToCityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BackToCityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackToCityReq::IsInitialized() const {

  return true;
}

void BackToCityReq::Swap(BackToCityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackToCityReq::InternalSwap(BackToCityReq* other) {
  std::swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackToCityReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BackToCityReq_descriptor_;
  metadata.reflection = BackToCityReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BackToCityReq

// optional uint32 Param = 1;
void BackToCityReq::clear_param() {
  param_ = 0u;
}
 ::google::protobuf::uint32 BackToCityReq::param() const {
  // @@protoc_insertion_point(field_get:BackToCityReq.Param)
  return param_;
}
 void BackToCityReq::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:BackToCityReq.Param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackToCityAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackToCityAck::BackToCityAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BackToCityAck)
}

void BackToCityAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BackToCityAck::BackToCityAck(const BackToCityAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BackToCityAck)
}

void BackToCityAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

BackToCityAck::~BackToCityAck() {
  // @@protoc_insertion_point(destructor:BackToCityAck)
  SharedDtor();
}

void BackToCityAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BackToCityAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackToCityAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BackToCityAck_descriptor_;
}

const BackToCityAck& BackToCityAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

BackToCityAck* BackToCityAck::default_instance_ = NULL;

BackToCityAck* BackToCityAck::New(::google::protobuf::Arena* arena) const {
  BackToCityAck* n = new BackToCityAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackToCityAck::Clear() {
// @@protoc_insertion_point(message_clear_start:BackToCityAck)
  retcode_ = 0u;
}

bool BackToCityAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BackToCityAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BackToCityAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BackToCityAck)
  return false;
#undef DO_
}

void BackToCityAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BackToCityAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:BackToCityAck)
}

::google::protobuf::uint8* BackToCityAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BackToCityAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BackToCityAck)
  return target;
}

int BackToCityAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:BackToCityAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackToCityAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BackToCityAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BackToCityAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BackToCityAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BackToCityAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BackToCityAck)
    MergeFrom(*source);
  }
}

void BackToCityAck::MergeFrom(const BackToCityAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BackToCityAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void BackToCityAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BackToCityAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackToCityAck::CopyFrom(const BackToCityAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BackToCityAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackToCityAck::IsInitialized() const {

  return true;
}

void BackToCityAck::Swap(BackToCityAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackToCityAck::InternalSwap(BackToCityAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackToCityAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BackToCityAck_descriptor_;
  metadata.reflection = BackToCityAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BackToCityAck

// optional uint32 RetCode = 1;
void BackToCityAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 BackToCityAck::retcode() const {
  // @@protoc_insertion_point(field_get:BackToCityAck.RetCode)
  return retcode_;
}
 void BackToCityAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:BackToCityAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveSceneReq::kRoleIDFieldNumber;
const int LeaveSceneReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveSceneReq::LeaveSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LeaveSceneReq)
}

void LeaveSceneReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LeaveSceneReq::LeaveSceneReq(const LeaveSceneReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LeaveSceneReq)
}

void LeaveSceneReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  reason_ = 0;
}

LeaveSceneReq::~LeaveSceneReq() {
  // @@protoc_insertion_point(destructor:LeaveSceneReq)
  SharedDtor();
}

void LeaveSceneReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LeaveSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveSceneReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveSceneReq_descriptor_;
}

const LeaveSceneReq& LeaveSceneReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

LeaveSceneReq* LeaveSceneReq::default_instance_ = NULL;

LeaveSceneReq* LeaveSceneReq::New(::google::protobuf::Arena* arena) const {
  LeaveSceneReq* n = new LeaveSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LeaveSceneReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LeaveSceneReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LeaveSceneReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, reason_);

#undef ZR_HELPER_
#undef ZR_

}

bool LeaveSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LeaveSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Reason;
        break;
      }

      // optional int32 Reason = 2;
      case 2: {
        if (tag == 16) {
         parse_Reason:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reason_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LeaveSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LeaveSceneReq)
  return false;
#undef DO_
}

void LeaveSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LeaveSceneReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int32 Reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:LeaveSceneReq)
}

::google::protobuf::uint8* LeaveSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LeaveSceneReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int32 Reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LeaveSceneReq)
  return target;
}

int LeaveSceneReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:LeaveSceneReq)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 Reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reason());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LeaveSceneReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LeaveSceneReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LeaveSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LeaveSceneReq)
    MergeFrom(*source);
  }
}

void LeaveSceneReq::MergeFrom(const LeaveSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LeaveSceneReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void LeaveSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LeaveSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveSceneReq::CopyFrom(const LeaveSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LeaveSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveSceneReq::IsInitialized() const {

  return true;
}

void LeaveSceneReq::Swap(LeaveSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveSceneReq::InternalSwap(LeaveSceneReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveSceneReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveSceneReq_descriptor_;
  metadata.reflection = LeaveSceneReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveSceneReq

// optional uint64 RoleID = 1;
void LeaveSceneReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 LeaveSceneReq::roleid() const {
  // @@protoc_insertion_point(field_get:LeaveSceneReq.RoleID)
  return roleid_;
}
 void LeaveSceneReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:LeaveSceneReq.RoleID)
}

// optional int32 Reason = 2;
void LeaveSceneReq::clear_reason() {
  reason_ = 0;
}
 ::google::protobuf::int32 LeaveSceneReq::reason() const {
  // @@protoc_insertion_point(field_get:LeaveSceneReq.Reason)
  return reason_;
}
 void LeaveSceneReq::set_reason(::google::protobuf::int32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:LeaveSceneReq.Reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveSceneAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveSceneAck::LeaveSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LeaveSceneAck)
}

void LeaveSceneAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LeaveSceneAck::LeaveSceneAck(const LeaveSceneAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LeaveSceneAck)
}

void LeaveSceneAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

LeaveSceneAck::~LeaveSceneAck() {
  // @@protoc_insertion_point(destructor:LeaveSceneAck)
  SharedDtor();
}

void LeaveSceneAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LeaveSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveSceneAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LeaveSceneAck_descriptor_;
}

const LeaveSceneAck& LeaveSceneAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

LeaveSceneAck* LeaveSceneAck::default_instance_ = NULL;

LeaveSceneAck* LeaveSceneAck::New(::google::protobuf::Arena* arena) const {
  LeaveSceneAck* n = new LeaveSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:LeaveSceneAck)
  retcode_ = 0u;
}

bool LeaveSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LeaveSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LeaveSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LeaveSceneAck)
  return false;
#undef DO_
}

void LeaveSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LeaveSceneAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:LeaveSceneAck)
}

::google::protobuf::uint8* LeaveSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LeaveSceneAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LeaveSceneAck)
  return target;
}

int LeaveSceneAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:LeaveSceneAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LeaveSceneAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LeaveSceneAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LeaveSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LeaveSceneAck)
    MergeFrom(*source);
  }
}

void LeaveSceneAck::MergeFrom(const LeaveSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LeaveSceneAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void LeaveSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LeaveSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveSceneAck::CopyFrom(const LeaveSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LeaveSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveSceneAck::IsInitialized() const {

  return true;
}

void LeaveSceneAck::Swap(LeaveSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveSceneAck::InternalSwap(LeaveSceneAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveSceneAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LeaveSceneAck_descriptor_;
  metadata.reflection = LeaveSceneAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveSceneAck

// optional uint32 RetCode = 1;
void LeaveSceneAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 LeaveSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:LeaveSceneAck.RetCode)
  return retcode_;
}
 void LeaveSceneAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:LeaveSceneAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbortSceneReq::kRoleIDFieldNumber;
const int AbortSceneReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbortSceneReq::AbortSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AbortSceneReq)
}

void AbortSceneReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AbortSceneReq::AbortSceneReq(const AbortSceneReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AbortSceneReq)
}

void AbortSceneReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  reason_ = 0;
}

AbortSceneReq::~AbortSceneReq() {
  // @@protoc_insertion_point(destructor:AbortSceneReq)
  SharedDtor();
}

void AbortSceneReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AbortSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortSceneReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AbortSceneReq_descriptor_;
}

const AbortSceneReq& AbortSceneReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

AbortSceneReq* AbortSceneReq::default_instance_ = NULL;

AbortSceneReq* AbortSceneReq::New(::google::protobuf::Arena* arena) const {
  AbortSceneReq* n = new AbortSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbortSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:AbortSceneReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AbortSceneReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AbortSceneReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, reason_);

#undef ZR_HELPER_
#undef ZR_

}

bool AbortSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AbortSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Reason;
        break;
      }

      // optional int32 Reason = 2;
      case 2: {
        if (tag == 16) {
         parse_Reason:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reason_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AbortSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AbortSceneReq)
  return false;
#undef DO_
}

void AbortSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AbortSceneReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int32 Reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:AbortSceneReq)
}

::google::protobuf::uint8* AbortSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AbortSceneReq)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int32 Reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AbortSceneReq)
  return target;
}

int AbortSceneReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AbortSceneReq)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 Reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reason());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbortSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AbortSceneReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AbortSceneReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AbortSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AbortSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AbortSceneReq)
    MergeFrom(*source);
  }
}

void AbortSceneReq::MergeFrom(const AbortSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AbortSceneReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void AbortSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AbortSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortSceneReq::CopyFrom(const AbortSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AbortSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortSceneReq::IsInitialized() const {

  return true;
}

void AbortSceneReq::Swap(AbortSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbortSceneReq::InternalSwap(AbortSceneReq* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbortSceneReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AbortSceneReq_descriptor_;
  metadata.reflection = AbortSceneReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbortSceneReq

// optional uint64 RoleID = 1;
void AbortSceneReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 AbortSceneReq::roleid() const {
  // @@protoc_insertion_point(field_get:AbortSceneReq.RoleID)
  return roleid_;
}
 void AbortSceneReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:AbortSceneReq.RoleID)
}

// optional int32 Reason = 2;
void AbortSceneReq::clear_reason() {
  reason_ = 0;
}
 ::google::protobuf::int32 AbortSceneReq::reason() const {
  // @@protoc_insertion_point(field_get:AbortSceneReq.Reason)
  return reason_;
}
 void AbortSceneReq::set_reason(::google::protobuf::int32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:AbortSceneReq.Reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbortSceneAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbortSceneAck::AbortSceneAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AbortSceneAck)
}

void AbortSceneAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AbortSceneAck::AbortSceneAck(const AbortSceneAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AbortSceneAck)
}

void AbortSceneAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

AbortSceneAck::~AbortSceneAck() {
  // @@protoc_insertion_point(destructor:AbortSceneAck)
  SharedDtor();
}

void AbortSceneAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AbortSceneAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortSceneAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AbortSceneAck_descriptor_;
}

const AbortSceneAck& AbortSceneAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

AbortSceneAck* AbortSceneAck::default_instance_ = NULL;

AbortSceneAck* AbortSceneAck::New(::google::protobuf::Arena* arena) const {
  AbortSceneAck* n = new AbortSceneAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbortSceneAck::Clear() {
// @@protoc_insertion_point(message_clear_start:AbortSceneAck)
  retcode_ = 0u;
}

bool AbortSceneAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AbortSceneAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AbortSceneAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AbortSceneAck)
  return false;
#undef DO_
}

void AbortSceneAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AbortSceneAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:AbortSceneAck)
}

::google::protobuf::uint8* AbortSceneAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AbortSceneAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AbortSceneAck)
  return target;
}

int AbortSceneAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AbortSceneAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbortSceneAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AbortSceneAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AbortSceneAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AbortSceneAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AbortSceneAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AbortSceneAck)
    MergeFrom(*source);
  }
}

void AbortSceneAck::MergeFrom(const AbortSceneAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AbortSceneAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void AbortSceneAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AbortSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortSceneAck::CopyFrom(const AbortSceneAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AbortSceneAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortSceneAck::IsInitialized() const {

  return true;
}

void AbortSceneAck::Swap(AbortSceneAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbortSceneAck::InternalSwap(AbortSceneAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbortSceneAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AbortSceneAck_descriptor_;
  metadata.reflection = AbortSceneAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbortSceneAck

// optional uint32 RetCode = 1;
void AbortSceneAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 AbortSceneAck::retcode() const {
  // @@protoc_insertion_point(field_get:AbortSceneAck.RetCode)
  return retcode_;
}
 void AbortSceneAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AbortSceneAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbortSceneNty::kRoleIDFieldNumber;
const int AbortSceneNty::kCopyIDFieldNumber;
const int AbortSceneNty::kCopyGuidFieldNumber;
const int AbortSceneNty::kCopyTypeFieldNumber;
const int AbortSceneNty::kServerIDFieldNumber;
const int AbortSceneNty::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbortSceneNty::AbortSceneNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AbortSceneNty)
}

void AbortSceneNty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AbortSceneNty::AbortSceneNty(const AbortSceneNty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AbortSceneNty)
}

void AbortSceneNty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  copyid_ = 0;
  copyguid_ = 0;
  copytype_ = 0;
  serverid_ = 0;
  param_ = 0;
}

AbortSceneNty::~AbortSceneNty() {
  // @@protoc_insertion_point(destructor:AbortSceneNty)
  SharedDtor();
}

void AbortSceneNty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AbortSceneNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortSceneNty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AbortSceneNty_descriptor_;
}

const AbortSceneNty& AbortSceneNty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

AbortSceneNty* AbortSceneNty::default_instance_ = NULL;

AbortSceneNty* AbortSceneNty::New(::google::protobuf::Arena* arena) const {
  AbortSceneNty* n = new AbortSceneNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbortSceneNty::Clear() {
// @@protoc_insertion_point(message_clear_start:AbortSceneNty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AbortSceneNty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AbortSceneNty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, param_);

#undef ZR_HELPER_
#undef ZR_

}

bool AbortSceneNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AbortSceneNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyID;
        break;
      }

      // optional int32 CopyID = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CopyGuid;
        break;
      }

      // optional int32 CopyGuid = 3;
      case 3: {
        if (tag == 24) {
         parse_CopyGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CopyType;
        break;
      }

      // optional int32 CopyType = 4;
      case 4: {
        if (tag == 32) {
         parse_CopyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ServerID;
        break;
      }

      // optional int32 ServerID = 5;
      case 5: {
        if (tag == 40) {
         parse_ServerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_Param;
        break;
      }

      // optional int32 Param = 6;
      case 6: {
        if (tag == 48) {
         parse_Param:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AbortSceneNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AbortSceneNty)
  return false;
#undef DO_
}

void AbortSceneNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AbortSceneNty)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // optional int32 CopyType = 4;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->copytype(), output);
  }

  // optional int32 ServerID = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverid(), output);
  }

  // optional int32 Param = 6;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->param(), output);
  }

  // @@protoc_insertion_point(serialize_end:AbortSceneNty)
}

::google::protobuf::uint8* AbortSceneNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AbortSceneNty)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // optional int32 CopyType = 4;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->copytype(), target);
  }

  // optional int32 ServerID = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverid(), target);
  }

  // optional int32 Param = 6;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->param(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AbortSceneNty)
  return target;
}

int AbortSceneNty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AbortSceneNty)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // optional int32 CopyType = 4;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // optional int32 ServerID = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // optional int32 Param = 6;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbortSceneNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AbortSceneNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AbortSceneNty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AbortSceneNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AbortSceneNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AbortSceneNty)
    MergeFrom(*source);
  }
}

void AbortSceneNty::MergeFrom(const AbortSceneNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AbortSceneNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
}

void AbortSceneNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AbortSceneNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortSceneNty::CopyFrom(const AbortSceneNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AbortSceneNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortSceneNty::IsInitialized() const {

  return true;
}

void AbortSceneNty::Swap(AbortSceneNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbortSceneNty::InternalSwap(AbortSceneNty* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(copyid_, other->copyid_);
  std::swap(copyguid_, other->copyguid_);
  std::swap(copytype_, other->copytype_);
  std::swap(serverid_, other->serverid_);
  std::swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbortSceneNty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AbortSceneNty_descriptor_;
  metadata.reflection = AbortSceneNty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbortSceneNty

// optional uint64 RoleID = 1;
void AbortSceneNty::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 AbortSceneNty::roleid() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.RoleID)
  return roleid_;
}
 void AbortSceneNty::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:AbortSceneNty.RoleID)
}

// optional int32 CopyID = 2;
void AbortSceneNty::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 AbortSceneNty::copyid() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.CopyID)
  return copyid_;
}
 void AbortSceneNty::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:AbortSceneNty.CopyID)
}

// optional int32 CopyGuid = 3;
void AbortSceneNty::clear_copyguid() {
  copyguid_ = 0;
}
 ::google::protobuf::int32 AbortSceneNty::copyguid() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.CopyGuid)
  return copyguid_;
}
 void AbortSceneNty::set_copyguid(::google::protobuf::int32 value) {
  
  copyguid_ = value;
  // @@protoc_insertion_point(field_set:AbortSceneNty.CopyGuid)
}

// optional int32 CopyType = 4;
void AbortSceneNty::clear_copytype() {
  copytype_ = 0;
}
 ::google::protobuf::int32 AbortSceneNty::copytype() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.CopyType)
  return copytype_;
}
 void AbortSceneNty::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:AbortSceneNty.CopyType)
}

// optional int32 ServerID = 5;
void AbortSceneNty::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 AbortSceneNty::serverid() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.ServerID)
  return serverid_;
}
 void AbortSceneNty::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:AbortSceneNty.ServerID)
}

// optional int32 Param = 6;
void AbortSceneNty::clear_param() {
  param_ = 0;
}
 ::google::protobuf::int32 AbortSceneNty::param() const {
  // @@protoc_insertion_point(field_get:AbortSceneNty.Param)
  return param_;
}
 void AbortSceneNty::set_param(::google::protobuf::int32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:AbortSceneNty.Param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransRoleData::kRoleIDFieldNumber;
const int TransRoleData::kNameFieldNumber;
const int TransRoleData::kCarrerIDFieldNumber;
const int TransRoleData::kActorIDFieldNumber;
const int TransRoleData::kLevelFieldNumber;
const int TransRoleData::kMountIDFieldNumber;
const int TransRoleData::kRobotFieldNumber;
const int TransRoleData::kEquipsFieldNumber;
const int TransRoleData::kPropertysFieldNumber;
const int TransRoleData::kSkillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransRoleData::TransRoleData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransRoleData)
}

void TransRoleData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TransRoleData::TransRoleData(const TransRoleData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TransRoleData)
}

void TransRoleData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  carrerid_ = 0;
  actorid_ = 0;
  level_ = 0;
  mountid_ = 0;
  robot_ = 0;
}

TransRoleData::~TransRoleData() {
  // @@protoc_insertion_point(destructor:TransRoleData)
  SharedDtor();
}

void TransRoleData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransRoleData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransRoleData_descriptor_;
}

const TransRoleData& TransRoleData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

TransRoleData* TransRoleData::default_instance_ = NULL;

TransRoleData* TransRoleData::New(::google::protobuf::Arena* arena) const {
  TransRoleData* n = new TransRoleData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransRoleData::Clear() {
// @@protoc_insertion_point(message_clear_start:TransRoleData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TransRoleData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransRoleData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(carrerid_, mountid_);
  roleid_ = GOOGLE_ULONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robot_ = 0;

#undef ZR_HELPER_
#undef ZR_

  equips_.Clear();
  propertys_.Clear();
  skills_.Clear();
}

bool TransRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransRoleData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Name;
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (tag == 18) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TransRoleData.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CarrerID;
        break;
      }

      // optional int32 CarrerID = 3;
      case 3: {
        if (tag == 24) {
         parse_CarrerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 4;
      case 4: {
        if (tag == 32) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Level;
        break;
      }

      // optional int32 Level = 5;
      case 5: {
        if (tag == 40) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_MountID;
        break;
      }

      // optional int32 MountID = 6;
      case 6: {
        if (tag == 48) {
         parse_MountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Robot;
        break;
      }

      // optional int32 Robot = 7;
      case 7: {
        if (tag == 56) {
         parse_Robot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robot_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Equips;
        break;
      }

      // repeated int32 Equips = 8;
      case 8: {
        if (tag == 66) {
         parse_Equips:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_equips())));
        } else if (tag == 64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66, input, this->mutable_equips())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_Propertys;
        break;
      }

      // repeated int32 Propertys = 9;
      case 9: {
        if (tag == 74) {
         parse_Propertys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_propertys())));
        } else if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 74, input, this->mutable_propertys())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_Skills;
        break;
      }

      // repeated .SkillItem Skills = 10;
      case 10: {
        if (tag == 82) {
         parse_Skills:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_Skills;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransRoleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransRoleData)
  return false;
#undef DO_
}

void TransRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransRoleData)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransRoleData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->carrerid(), output);
  }

  // optional int32 ActorID = 4;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->actorid(), output);
  }

  // optional int32 Level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // optional int32 MountID = 6;
  if (this->mountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mountid(), output);
  }

  // optional int32 Robot = 7;
  if (this->robot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->robot(), output);
  }

  // repeated int32 Equips = 8;
  if (this->equips_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_equips_cached_byte_size_);
  }
  for (int i = 0; i < this->equips_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->equips(i), output);
  }

  // repeated int32 Propertys = 9;
  if (this->propertys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_propertys_cached_byte_size_);
  }
  for (int i = 0; i < this->propertys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->propertys(i), output);
  }

  // repeated .SkillItem Skills = 10;
  for (unsigned int i = 0, n = this->skills_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->skills(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TransRoleData)
}

::google::protobuf::uint8* TransRoleData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransRoleData)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransRoleData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->carrerid(), target);
  }

  // optional int32 ActorID = 4;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->actorid(), target);
  }

  // optional int32 Level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // optional int32 MountID = 6;
  if (this->mountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mountid(), target);
  }

  // optional int32 Robot = 7;
  if (this->robot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->robot(), target);
  }

  // repeated int32 Equips = 8;
  if (this->equips_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _equips_cached_byte_size_, target);
  }
  for (int i = 0; i < this->equips_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->equips(i), target);
  }

  // repeated int32 Propertys = 9;
  if (this->propertys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _propertys_cached_byte_size_, target);
  }
  for (int i = 0; i < this->propertys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->propertys(i), target);
  }

  // repeated .SkillItem Skills = 10;
  for (unsigned int i = 0, n = this->skills_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->skills(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransRoleData)
  return target;
}

int TransRoleData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:TransRoleData)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrerid());
  }

  // optional int32 ActorID = 4;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional int32 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional int32 MountID = 6;
  if (this->mountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mountid());
  }

  // optional int32 Robot = 7;
  if (this->robot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robot());
  }

  // repeated int32 Equips = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->equips_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->equips(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equips_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 Propertys = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->propertys_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->propertys(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _propertys_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .SkillItem Skills = 10;
  total_size += 1 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransRoleData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransRoleData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TransRoleData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TransRoleData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransRoleData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransRoleData)
    MergeFrom(*source);
  }
}

void TransRoleData::MergeFrom(const TransRoleData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransRoleData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  equips_.MergeFrom(from.equips_);
  propertys_.MergeFrom(from.propertys_);
  skills_.MergeFrom(from.skills_);
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.carrerid() != 0) {
    set_carrerid(from.carrerid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.mountid() != 0) {
    set_mountid(from.mountid());
  }
  if (from.robot() != 0) {
    set_robot(from.robot());
  }
}

void TransRoleData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransRoleData::CopyFrom(const TransRoleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransRoleData::IsInitialized() const {

  return true;
}

void TransRoleData::Swap(TransRoleData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransRoleData::InternalSwap(TransRoleData* other) {
  std::swap(roleid_, other->roleid_);
  name_.Swap(&other->name_);
  std::swap(carrerid_, other->carrerid_);
  std::swap(actorid_, other->actorid_);
  std::swap(level_, other->level_);
  std::swap(mountid_, other->mountid_);
  std::swap(robot_, other->robot_);
  equips_.UnsafeArenaSwap(&other->equips_);
  propertys_.UnsafeArenaSwap(&other->propertys_);
  skills_.UnsafeArenaSwap(&other->skills_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransRoleData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransRoleData_descriptor_;
  metadata.reflection = TransRoleData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransRoleData

// optional uint64 RoleID = 1;
void TransRoleData::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 TransRoleData::roleid() const {
  // @@protoc_insertion_point(field_get:TransRoleData.RoleID)
  return roleid_;
}
 void TransRoleData::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleData.RoleID)
}

// optional string Name = 2;
void TransRoleData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransRoleData::name() const {
  // @@protoc_insertion_point(field_get:TransRoleData.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransRoleData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransRoleData.Name)
}
 void TransRoleData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransRoleData.Name)
}
 void TransRoleData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransRoleData.Name)
}
 ::std::string* TransRoleData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:TransRoleData.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransRoleData::release_name() {
  // @@protoc_insertion_point(field_release:TransRoleData.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransRoleData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TransRoleData.Name)
}

// optional int32 CarrerID = 3;
void TransRoleData::clear_carrerid() {
  carrerid_ = 0;
}
 ::google::protobuf::int32 TransRoleData::carrerid() const {
  // @@protoc_insertion_point(field_get:TransRoleData.CarrerID)
  return carrerid_;
}
 void TransRoleData::set_carrerid(::google::protobuf::int32 value) {
  
  carrerid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleData.CarrerID)
}

// optional int32 ActorID = 4;
void TransRoleData::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 TransRoleData::actorid() const {
  // @@protoc_insertion_point(field_get:TransRoleData.ActorID)
  return actorid_;
}
 void TransRoleData::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleData.ActorID)
}

// optional int32 Level = 5;
void TransRoleData::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 TransRoleData::level() const {
  // @@protoc_insertion_point(field_get:TransRoleData.Level)
  return level_;
}
 void TransRoleData::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:TransRoleData.Level)
}

// optional int32 MountID = 6;
void TransRoleData::clear_mountid() {
  mountid_ = 0;
}
 ::google::protobuf::int32 TransRoleData::mountid() const {
  // @@protoc_insertion_point(field_get:TransRoleData.MountID)
  return mountid_;
}
 void TransRoleData::set_mountid(::google::protobuf::int32 value) {
  
  mountid_ = value;
  // @@protoc_insertion_point(field_set:TransRoleData.MountID)
}

// optional int32 Robot = 7;
void TransRoleData::clear_robot() {
  robot_ = 0;
}
 ::google::protobuf::int32 TransRoleData::robot() const {
  // @@protoc_insertion_point(field_get:TransRoleData.Robot)
  return robot_;
}
 void TransRoleData::set_robot(::google::protobuf::int32 value) {
  
  robot_ = value;
  // @@protoc_insertion_point(field_set:TransRoleData.Robot)
}

// repeated int32 Equips = 8;
int TransRoleData::equips_size() const {
  return equips_.size();
}
void TransRoleData::clear_equips() {
  equips_.Clear();
}
 ::google::protobuf::int32 TransRoleData::equips(int index) const {
  // @@protoc_insertion_point(field_get:TransRoleData.Equips)
  return equips_.Get(index);
}
 void TransRoleData::set_equips(int index, ::google::protobuf::int32 value) {
  equips_.Set(index, value);
  // @@protoc_insertion_point(field_set:TransRoleData.Equips)
}
 void TransRoleData::add_equips(::google::protobuf::int32 value) {
  equips_.Add(value);
  // @@protoc_insertion_point(field_add:TransRoleData.Equips)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransRoleData::equips() const {
  // @@protoc_insertion_point(field_list:TransRoleData.Equips)
  return equips_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransRoleData::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:TransRoleData.Equips)
  return &equips_;
}

// repeated int32 Propertys = 9;
int TransRoleData::propertys_size() const {
  return propertys_.size();
}
void TransRoleData::clear_propertys() {
  propertys_.Clear();
}
 ::google::protobuf::int32 TransRoleData::propertys(int index) const {
  // @@protoc_insertion_point(field_get:TransRoleData.Propertys)
  return propertys_.Get(index);
}
 void TransRoleData::set_propertys(int index, ::google::protobuf::int32 value) {
  propertys_.Set(index, value);
  // @@protoc_insertion_point(field_set:TransRoleData.Propertys)
}
 void TransRoleData::add_propertys(::google::protobuf::int32 value) {
  propertys_.Add(value);
  // @@protoc_insertion_point(field_add:TransRoleData.Propertys)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransRoleData::propertys() const {
  // @@protoc_insertion_point(field_list:TransRoleData.Propertys)
  return propertys_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransRoleData::mutable_propertys() {
  // @@protoc_insertion_point(field_mutable_list:TransRoleData.Propertys)
  return &propertys_;
}

// repeated .SkillItem Skills = 10;
int TransRoleData::skills_size() const {
  return skills_.size();
}
void TransRoleData::clear_skills() {
  skills_.Clear();
}
const ::SkillItem& TransRoleData::skills(int index) const {
  // @@protoc_insertion_point(field_get:TransRoleData.Skills)
  return skills_.Get(index);
}
::SkillItem* TransRoleData::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:TransRoleData.Skills)
  return skills_.Mutable(index);
}
::SkillItem* TransRoleData::add_skills() {
  // @@protoc_insertion_point(field_add:TransRoleData.Skills)
  return skills_.Add();
}
::google::protobuf::RepeatedPtrField< ::SkillItem >*
TransRoleData::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:TransRoleData.Skills)
  return &skills_;
}
const ::google::protobuf::RepeatedPtrField< ::SkillItem >&
TransRoleData::skills() const {
  // @@protoc_insertion_point(field_list:TransRoleData.Skills)
  return skills_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransPetData::kPetGuidFieldNumber;
const int TransPetData::kPetIDFieldNumber;
const int TransPetData::kActorIDFieldNumber;
const int TransPetData::kNameFieldNumber;
const int TransPetData::kLevelFieldNumber;
const int TransPetData::kPropertysFieldNumber;
const int TransPetData::kSkillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransPetData::TransPetData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransPetData)
}

void TransPetData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TransPetData::TransPetData(const TransPetData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TransPetData)
}

void TransPetData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  petguid_ = GOOGLE_ULONGLONG(0);
  petid_ = 0;
  actorid_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
}

TransPetData::~TransPetData() {
  // @@protoc_insertion_point(destructor:TransPetData)
  SharedDtor();
}

void TransPetData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransPetData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransPetData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransPetData_descriptor_;
}

const TransPetData& TransPetData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

TransPetData* TransPetData::default_instance_ = NULL;

TransPetData* TransPetData::New(::google::protobuf::Arena* arena) const {
  TransPetData* n = new TransPetData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransPetData::Clear() {
// @@protoc_insertion_point(message_clear_start:TransPetData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TransPetData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransPetData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(petguid_, actorid_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;

#undef ZR_HELPER_
#undef ZR_

  propertys_.Clear();
  skills_.Clear();
}

bool TransPetData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransPetData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 PetGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &petguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PetID;
        break;
      }

      // optional int32 PetID = 2;
      case 2: {
        if (tag == 16) {
         parse_PetID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &petid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 3;
      case 3: {
        if (tag == 24) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Name;
        break;
      }

      // optional string Name = 4;
      case 4: {
        if (tag == 34) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TransPetData.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Level;
        break;
      }

      // optional int32 Level = 5;
      case 5: {
        if (tag == 40) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Propertys;
        break;
      }

      // repeated int32 Propertys = 6;
      case 6: {
        if (tag == 50) {
         parse_Propertys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_propertys())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50, input, this->mutable_propertys())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Skills;
        break;
      }

      // repeated .SkillItem Skills = 7;
      case 7: {
        if (tag == 58) {
         parse_Skills:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_Skills;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransPetData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransPetData)
  return false;
#undef DO_
}

void TransPetData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransPetData)
  // optional uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->petguid(), output);
  }

  // optional int32 PetID = 2;
  if (this->petid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->petid(), output);
  }

  // optional int32 ActorID = 3;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->actorid(), output);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransPetData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional int32 Level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // repeated int32 Propertys = 6;
  if (this->propertys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_propertys_cached_byte_size_);
  }
  for (int i = 0; i < this->propertys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->propertys(i), output);
  }

  // repeated .SkillItem Skills = 7;
  for (unsigned int i = 0, n = this->skills_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->skills(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TransPetData)
}

::google::protobuf::uint8* TransPetData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransPetData)
  // optional uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->petguid(), target);
  }

  // optional int32 PetID = 2;
  if (this->petid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->petid(), target);
  }

  // optional int32 ActorID = 3;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->actorid(), target);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransPetData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional int32 Level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // repeated int32 Propertys = 6;
  if (this->propertys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _propertys_cached_byte_size_, target);
  }
  for (int i = 0; i < this->propertys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->propertys(i), target);
  }

  // repeated .SkillItem Skills = 7;
  for (unsigned int i = 0, n = this->skills_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->skills(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransPetData)
  return target;
}

int TransPetData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:TransPetData)
  int total_size = 0;

  // optional uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->petguid());
  }

  // optional int32 PetID = 2;
  if (this->petid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->petid());
  }

  // optional int32 ActorID = 3;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // repeated int32 Propertys = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->propertys_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->propertys(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _propertys_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .SkillItem Skills = 7;
  total_size += 1 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransPetData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransPetData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TransPetData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TransPetData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransPetData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransPetData)
    MergeFrom(*source);
  }
}

void TransPetData::MergeFrom(const TransPetData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransPetData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  propertys_.MergeFrom(from.propertys_);
  skills_.MergeFrom(from.skills_);
  if (from.petguid() != 0) {
    set_petguid(from.petguid());
  }
  if (from.petid() != 0) {
    set_petid(from.petid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void TransPetData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransPetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransPetData::CopyFrom(const TransPetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransPetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransPetData::IsInitialized() const {

  return true;
}

void TransPetData::Swap(TransPetData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransPetData::InternalSwap(TransPetData* other) {
  std::swap(petguid_, other->petguid_);
  std::swap(petid_, other->petid_);
  std::swap(actorid_, other->actorid_);
  name_.Swap(&other->name_);
  std::swap(level_, other->level_);
  propertys_.UnsafeArenaSwap(&other->propertys_);
  skills_.UnsafeArenaSwap(&other->skills_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransPetData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransPetData_descriptor_;
  metadata.reflection = TransPetData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransPetData

// optional uint64 PetGuid = 1;
void TransPetData::clear_petguid() {
  petguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 TransPetData::petguid() const {
  // @@protoc_insertion_point(field_get:TransPetData.PetGuid)
  return petguid_;
}
 void TransPetData::set_petguid(::google::protobuf::uint64 value) {
  
  petguid_ = value;
  // @@protoc_insertion_point(field_set:TransPetData.PetGuid)
}

// optional int32 PetID = 2;
void TransPetData::clear_petid() {
  petid_ = 0;
}
 ::google::protobuf::int32 TransPetData::petid() const {
  // @@protoc_insertion_point(field_get:TransPetData.PetID)
  return petid_;
}
 void TransPetData::set_petid(::google::protobuf::int32 value) {
  
  petid_ = value;
  // @@protoc_insertion_point(field_set:TransPetData.PetID)
}

// optional int32 ActorID = 3;
void TransPetData::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 TransPetData::actorid() const {
  // @@protoc_insertion_point(field_get:TransPetData.ActorID)
  return actorid_;
}
 void TransPetData::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:TransPetData.ActorID)
}

// optional string Name = 4;
void TransPetData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransPetData::name() const {
  // @@protoc_insertion_point(field_get:TransPetData.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransPetData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransPetData.Name)
}
 void TransPetData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransPetData.Name)
}
 void TransPetData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransPetData.Name)
}
 ::std::string* TransPetData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:TransPetData.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransPetData::release_name() {
  // @@protoc_insertion_point(field_release:TransPetData.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransPetData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TransPetData.Name)
}

// optional int32 Level = 5;
void TransPetData::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 TransPetData::level() const {
  // @@protoc_insertion_point(field_get:TransPetData.Level)
  return level_;
}
 void TransPetData::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:TransPetData.Level)
}

// repeated int32 Propertys = 6;
int TransPetData::propertys_size() const {
  return propertys_.size();
}
void TransPetData::clear_propertys() {
  propertys_.Clear();
}
 ::google::protobuf::int32 TransPetData::propertys(int index) const {
  // @@protoc_insertion_point(field_get:TransPetData.Propertys)
  return propertys_.Get(index);
}
 void TransPetData::set_propertys(int index, ::google::protobuf::int32 value) {
  propertys_.Set(index, value);
  // @@protoc_insertion_point(field_set:TransPetData.Propertys)
}
 void TransPetData::add_propertys(::google::protobuf::int32 value) {
  propertys_.Add(value);
  // @@protoc_insertion_point(field_add:TransPetData.Propertys)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransPetData::propertys() const {
  // @@protoc_insertion_point(field_list:TransPetData.Propertys)
  return propertys_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransPetData::mutable_propertys() {
  // @@protoc_insertion_point(field_mutable_list:TransPetData.Propertys)
  return &propertys_;
}

// repeated .SkillItem Skills = 7;
int TransPetData::skills_size() const {
  return skills_.size();
}
void TransPetData::clear_skills() {
  skills_.Clear();
}
const ::SkillItem& TransPetData::skills(int index) const {
  // @@protoc_insertion_point(field_get:TransPetData.Skills)
  return skills_.Get(index);
}
::SkillItem* TransPetData::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:TransPetData.Skills)
  return skills_.Mutable(index);
}
::SkillItem* TransPetData::add_skills() {
  // @@protoc_insertion_point(field_add:TransPetData.Skills)
  return skills_.Add();
}
::google::protobuf::RepeatedPtrField< ::SkillItem >*
TransPetData::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:TransPetData.Skills)
  return &skills_;
}
const ::google::protobuf::RepeatedPtrField< ::SkillItem >&
TransPetData::skills() const {
  // @@protoc_insertion_point(field_list:TransPetData.Skills)
  return skills_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransPartnerData::kPartnerGuidFieldNumber;
const int TransPartnerData::kPartnerIDFieldNumber;
const int TransPartnerData::kActorIDFieldNumber;
const int TransPartnerData::kNameFieldNumber;
const int TransPartnerData::kLevelFieldNumber;
const int TransPartnerData::kPropertysFieldNumber;
const int TransPartnerData::kSkillsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransPartnerData::TransPartnerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransPartnerData)
}

void TransPartnerData::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TransPartnerData::TransPartnerData(const TransPartnerData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TransPartnerData)
}

void TransPartnerData::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  partnerguid_ = GOOGLE_ULONGLONG(0);
  partnerid_ = 0;
  actorid_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
}

TransPartnerData::~TransPartnerData() {
  // @@protoc_insertion_point(destructor:TransPartnerData)
  SharedDtor();
}

void TransPartnerData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransPartnerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransPartnerData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransPartnerData_descriptor_;
}

const TransPartnerData& TransPartnerData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

TransPartnerData* TransPartnerData::default_instance_ = NULL;

TransPartnerData* TransPartnerData::New(::google::protobuf::Arena* arena) const {
  TransPartnerData* n = new TransPartnerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransPartnerData::Clear() {
// @@protoc_insertion_point(message_clear_start:TransPartnerData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TransPartnerData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransPartnerData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(partnerguid_, actorid_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;

#undef ZR_HELPER_
#undef ZR_

  propertys_.Clear();
  skills_.Clear();
}

bool TransPartnerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransPartnerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 PartnerGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partnerguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PartnerID;
        break;
      }

      // optional int32 PartnerID = 2;
      case 2: {
        if (tag == 16) {
         parse_PartnerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partnerid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 3;
      case 3: {
        if (tag == 24) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Name;
        break;
      }

      // optional string Name = 4;
      case 4: {
        if (tag == 34) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TransPartnerData.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Level;
        break;
      }

      // optional int32 Level = 5;
      case 5: {
        if (tag == 40) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Propertys;
        break;
      }

      // repeated int32 Propertys = 6;
      case 6: {
        if (tag == 50) {
         parse_Propertys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_propertys())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50, input, this->mutable_propertys())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_Skills;
        break;
      }

      // repeated .SkillItem Skills = 7;
      case 7: {
        if (tag == 58) {
         parse_Skills:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Skills:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_skills()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_Skills;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransPartnerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransPartnerData)
  return false;
#undef DO_
}

void TransPartnerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransPartnerData)
  // optional uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->partnerguid(), output);
  }

  // optional int32 PartnerID = 2;
  if (this->partnerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->partnerid(), output);
  }

  // optional int32 ActorID = 3;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->actorid(), output);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransPartnerData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // optional int32 Level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }

  // repeated int32 Propertys = 6;
  if (this->propertys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_propertys_cached_byte_size_);
  }
  for (int i = 0; i < this->propertys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->propertys(i), output);
  }

  // repeated .SkillItem Skills = 7;
  for (unsigned int i = 0, n = this->skills_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->skills(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TransPartnerData)
}

::google::protobuf::uint8* TransPartnerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransPartnerData)
  // optional uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->partnerguid(), target);
  }

  // optional int32 PartnerID = 2;
  if (this->partnerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->partnerid(), target);
  }

  // optional int32 ActorID = 3;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->actorid(), target);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TransPartnerData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // optional int32 Level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }

  // repeated int32 Propertys = 6;
  if (this->propertys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _propertys_cached_byte_size_, target);
  }
  for (int i = 0; i < this->propertys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->propertys(i), target);
  }

  // repeated .SkillItem Skills = 7;
  for (unsigned int i = 0, n = this->skills_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->skills(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransPartnerData)
  return target;
}

int TransPartnerData::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:TransPartnerData)
  int total_size = 0;

  // optional uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->partnerguid());
  }

  // optional int32 PartnerID = 2;
  if (this->partnerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->partnerid());
  }

  // optional int32 ActorID = 3;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 Level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // repeated int32 Propertys = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->propertys_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->propertys(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _propertys_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .SkillItem Skills = 7;
  total_size += 1 * this->skills_size();
  for (int i = 0; i < this->skills_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skills(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransPartnerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransPartnerData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TransPartnerData* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TransPartnerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransPartnerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransPartnerData)
    MergeFrom(*source);
  }
}

void TransPartnerData::MergeFrom(const TransPartnerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransPartnerData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  propertys_.MergeFrom(from.propertys_);
  skills_.MergeFrom(from.skills_);
  if (from.partnerguid() != 0) {
    set_partnerguid(from.partnerguid());
  }
  if (from.partnerid() != 0) {
    set_partnerid(from.partnerid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void TransPartnerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransPartnerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransPartnerData::CopyFrom(const TransPartnerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransPartnerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransPartnerData::IsInitialized() const {

  return true;
}

void TransPartnerData::Swap(TransPartnerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransPartnerData::InternalSwap(TransPartnerData* other) {
  std::swap(partnerguid_, other->partnerguid_);
  std::swap(partnerid_, other->partnerid_);
  std::swap(actorid_, other->actorid_);
  name_.Swap(&other->name_);
  std::swap(level_, other->level_);
  propertys_.UnsafeArenaSwap(&other->propertys_);
  skills_.UnsafeArenaSwap(&other->skills_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransPartnerData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransPartnerData_descriptor_;
  metadata.reflection = TransPartnerData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransPartnerData

// optional uint64 PartnerGuid = 1;
void TransPartnerData::clear_partnerguid() {
  partnerguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 TransPartnerData::partnerguid() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.PartnerGuid)
  return partnerguid_;
}
 void TransPartnerData::set_partnerguid(::google::protobuf::uint64 value) {
  
  partnerguid_ = value;
  // @@protoc_insertion_point(field_set:TransPartnerData.PartnerGuid)
}

// optional int32 PartnerID = 2;
void TransPartnerData::clear_partnerid() {
  partnerid_ = 0;
}
 ::google::protobuf::int32 TransPartnerData::partnerid() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.PartnerID)
  return partnerid_;
}
 void TransPartnerData::set_partnerid(::google::protobuf::int32 value) {
  
  partnerid_ = value;
  // @@protoc_insertion_point(field_set:TransPartnerData.PartnerID)
}

// optional int32 ActorID = 3;
void TransPartnerData::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 TransPartnerData::actorid() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.ActorID)
  return actorid_;
}
 void TransPartnerData::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:TransPartnerData.ActorID)
}

// optional string Name = 4;
void TransPartnerData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& TransPartnerData::name() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransPartnerData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TransPartnerData.Name)
}
 void TransPartnerData::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TransPartnerData.Name)
}
 void TransPartnerData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TransPartnerData.Name)
}
 ::std::string* TransPartnerData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:TransPartnerData.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransPartnerData::release_name() {
  // @@protoc_insertion_point(field_release:TransPartnerData.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransPartnerData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:TransPartnerData.Name)
}

// optional int32 Level = 5;
void TransPartnerData::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 TransPartnerData::level() const {
  // @@protoc_insertion_point(field_get:TransPartnerData.Level)
  return level_;
}
 void TransPartnerData::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:TransPartnerData.Level)
}

// repeated int32 Propertys = 6;
int TransPartnerData::propertys_size() const {
  return propertys_.size();
}
void TransPartnerData::clear_propertys() {
  propertys_.Clear();
}
 ::google::protobuf::int32 TransPartnerData::propertys(int index) const {
  // @@protoc_insertion_point(field_get:TransPartnerData.Propertys)
  return propertys_.Get(index);
}
 void TransPartnerData::set_propertys(int index, ::google::protobuf::int32 value) {
  propertys_.Set(index, value);
  // @@protoc_insertion_point(field_set:TransPartnerData.Propertys)
}
 void TransPartnerData::add_propertys(::google::protobuf::int32 value) {
  propertys_.Add(value);
  // @@protoc_insertion_point(field_add:TransPartnerData.Propertys)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TransPartnerData::propertys() const {
  // @@protoc_insertion_point(field_list:TransPartnerData.Propertys)
  return propertys_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TransPartnerData::mutable_propertys() {
  // @@protoc_insertion_point(field_mutable_list:TransPartnerData.Propertys)
  return &propertys_;
}

// repeated .SkillItem Skills = 7;
int TransPartnerData::skills_size() const {
  return skills_.size();
}
void TransPartnerData::clear_skills() {
  skills_.Clear();
}
const ::SkillItem& TransPartnerData::skills(int index) const {
  // @@protoc_insertion_point(field_get:TransPartnerData.Skills)
  return skills_.Get(index);
}
::SkillItem* TransPartnerData::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:TransPartnerData.Skills)
  return skills_.Mutable(index);
}
::SkillItem* TransPartnerData::add_skills() {
  // @@protoc_insertion_point(field_add:TransPartnerData.Skills)
  return skills_.Add();
}
::google::protobuf::RepeatedPtrField< ::SkillItem >*
TransPartnerData::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:TransPartnerData.Skills)
  return &skills_;
}
const ::google::protobuf::RepeatedPtrField< ::SkillItem >&
TransPartnerData::skills() const {
  // @@protoc_insertion_point(field_list:TransPartnerData.Skills)
  return skills_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferDataItem::kCampFieldNumber;
const int TransferDataItem::kRoleDataFieldNumber;
const int TransferDataItem::kPetDataFieldNumber;
const int TransferDataItem::kPartnerDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferDataItem::TransferDataItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransferDataItem)
}

void TransferDataItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  roledata_ = const_cast< ::TransRoleData*>(&::TransRoleData::default_instance());
  petdata_ = const_cast< ::TransPetData*>(&::TransPetData::default_instance());
  partnerdata_ = const_cast< ::TransPartnerData*>(&::TransPartnerData::default_instance());
}

TransferDataItem::TransferDataItem(const TransferDataItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TransferDataItem)
}

void TransferDataItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  camp_ = 0;
  roledata_ = NULL;
  petdata_ = NULL;
  partnerdata_ = NULL;
}

TransferDataItem::~TransferDataItem() {
  // @@protoc_insertion_point(destructor:TransferDataItem)
  SharedDtor();
}

void TransferDataItem::SharedDtor() {
  if (this != default_instance_) {
    delete roledata_;
    delete petdata_;
    delete partnerdata_;
  }
}

void TransferDataItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferDataItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferDataItem_descriptor_;
}

const TransferDataItem& TransferDataItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

TransferDataItem* TransferDataItem::default_instance_ = NULL;

TransferDataItem* TransferDataItem::New(::google::protobuf::Arena* arena) const {
  TransferDataItem* n = new TransferDataItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferDataItem::Clear() {
// @@protoc_insertion_point(message_clear_start:TransferDataItem)
  camp_ = 0;
  if (GetArenaNoVirtual() == NULL && roledata_ != NULL) delete roledata_;
  roledata_ = NULL;
  if (GetArenaNoVirtual() == NULL && petdata_ != NULL) delete petdata_;
  petdata_ = NULL;
  if (GetArenaNoVirtual() == NULL && partnerdata_ != NULL) delete partnerdata_;
  partnerdata_ = NULL;
}

bool TransferDataItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransferDataItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Camp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_RoleData;
        break;
      }

      // optional .TransRoleData RoleData = 2;
      case 2: {
        if (tag == 18) {
         parse_RoleData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roledata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_PetData;
        break;
      }

      // optional .TransPetData PetData = 3;
      case 3: {
        if (tag == 26) {
         parse_PetData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_petdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_PartnerData;
        break;
      }

      // optional .TransPartnerData PartnerData = 4;
      case 4: {
        if (tag == 34) {
         parse_PartnerData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_partnerdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransferDataItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransferDataItem)
  return false;
#undef DO_
}

void TransferDataItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransferDataItem)
  // optional int32 Camp = 1;
  if (this->camp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->camp(), output);
  }

  // optional .TransRoleData RoleData = 2;
  if (this->has_roledata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->roledata_, output);
  }

  // optional .TransPetData PetData = 3;
  if (this->has_petdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->petdata_, output);
  }

  // optional .TransPartnerData PartnerData = 4;
  if (this->has_partnerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->partnerdata_, output);
  }

  // @@protoc_insertion_point(serialize_end:TransferDataItem)
}

::google::protobuf::uint8* TransferDataItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransferDataItem)
  // optional int32 Camp = 1;
  if (this->camp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->camp(), target);
  }

  // optional .TransRoleData RoleData = 2;
  if (this->has_roledata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->roledata_, false, target);
  }

  // optional .TransPetData PetData = 3;
  if (this->has_petdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->petdata_, false, target);
  }

  // optional .TransPartnerData PartnerData = 4;
  if (this->has_partnerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->partnerdata_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransferDataItem)
  return target;
}

int TransferDataItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:TransferDataItem)
  int total_size = 0;

  // optional int32 Camp = 1;
  if (this->camp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());
  }

  // optional .TransRoleData RoleData = 2;
  if (this->has_roledata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roledata_);
  }

  // optional .TransPetData PetData = 3;
  if (this->has_petdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->petdata_);
  }

  // optional .TransPartnerData PartnerData = 4;
  if (this->has_partnerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->partnerdata_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferDataItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransferDataItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TransferDataItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferDataItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransferDataItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransferDataItem)
    MergeFrom(*source);
  }
}

void TransferDataItem::MergeFrom(const TransferDataItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransferDataItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.camp() != 0) {
    set_camp(from.camp());
  }
  if (from.has_roledata()) {
    mutable_roledata()->::TransRoleData::MergeFrom(from.roledata());
  }
  if (from.has_petdata()) {
    mutable_petdata()->::TransPetData::MergeFrom(from.petdata());
  }
  if (from.has_partnerdata()) {
    mutable_partnerdata()->::TransPartnerData::MergeFrom(from.partnerdata());
  }
}

void TransferDataItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransferDataItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferDataItem::CopyFrom(const TransferDataItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransferDataItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferDataItem::IsInitialized() const {

  return true;
}

void TransferDataItem::Swap(TransferDataItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferDataItem::InternalSwap(TransferDataItem* other) {
  std::swap(camp_, other->camp_);
  std::swap(roledata_, other->roledata_);
  std::swap(petdata_, other->petdata_);
  std::swap(partnerdata_, other->partnerdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferDataItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferDataItem_descriptor_;
  metadata.reflection = TransferDataItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferDataItem

// optional int32 Camp = 1;
void TransferDataItem::clear_camp() {
  camp_ = 0;
}
 ::google::protobuf::int32 TransferDataItem::camp() const {
  // @@protoc_insertion_point(field_get:TransferDataItem.Camp)
  return camp_;
}
 void TransferDataItem::set_camp(::google::protobuf::int32 value) {
  
  camp_ = value;
  // @@protoc_insertion_point(field_set:TransferDataItem.Camp)
}

// optional .TransRoleData RoleData = 2;
bool TransferDataItem::has_roledata() const {
  return !_is_default_instance_ && roledata_ != NULL;
}
void TransferDataItem::clear_roledata() {
  if (GetArenaNoVirtual() == NULL && roledata_ != NULL) delete roledata_;
  roledata_ = NULL;
}
const ::TransRoleData& TransferDataItem::roledata() const {
  // @@protoc_insertion_point(field_get:TransferDataItem.RoleData)
  return roledata_ != NULL ? *roledata_ : *default_instance_->roledata_;
}
::TransRoleData* TransferDataItem::mutable_roledata() {
  
  if (roledata_ == NULL) {
    roledata_ = new ::TransRoleData;
  }
  // @@protoc_insertion_point(field_mutable:TransferDataItem.RoleData)
  return roledata_;
}
::TransRoleData* TransferDataItem::release_roledata() {
  // @@protoc_insertion_point(field_release:TransferDataItem.RoleData)
  
  ::TransRoleData* temp = roledata_;
  roledata_ = NULL;
  return temp;
}
void TransferDataItem::set_allocated_roledata(::TransRoleData* roledata) {
  delete roledata_;
  roledata_ = roledata;
  if (roledata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TransferDataItem.RoleData)
}

// optional .TransPetData PetData = 3;
bool TransferDataItem::has_petdata() const {
  return !_is_default_instance_ && petdata_ != NULL;
}
void TransferDataItem::clear_petdata() {
  if (GetArenaNoVirtual() == NULL && petdata_ != NULL) delete petdata_;
  petdata_ = NULL;
}
const ::TransPetData& TransferDataItem::petdata() const {
  // @@protoc_insertion_point(field_get:TransferDataItem.PetData)
  return petdata_ != NULL ? *petdata_ : *default_instance_->petdata_;
}
::TransPetData* TransferDataItem::mutable_petdata() {
  
  if (petdata_ == NULL) {
    petdata_ = new ::TransPetData;
  }
  // @@protoc_insertion_point(field_mutable:TransferDataItem.PetData)
  return petdata_;
}
::TransPetData* TransferDataItem::release_petdata() {
  // @@protoc_insertion_point(field_release:TransferDataItem.PetData)
  
  ::TransPetData* temp = petdata_;
  petdata_ = NULL;
  return temp;
}
void TransferDataItem::set_allocated_petdata(::TransPetData* petdata) {
  delete petdata_;
  petdata_ = petdata;
  if (petdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TransferDataItem.PetData)
}

// optional .TransPartnerData PartnerData = 4;
bool TransferDataItem::has_partnerdata() const {
  return !_is_default_instance_ && partnerdata_ != NULL;
}
void TransferDataItem::clear_partnerdata() {
  if (GetArenaNoVirtual() == NULL && partnerdata_ != NULL) delete partnerdata_;
  partnerdata_ = NULL;
}
const ::TransPartnerData& TransferDataItem::partnerdata() const {
  // @@protoc_insertion_point(field_get:TransferDataItem.PartnerData)
  return partnerdata_ != NULL ? *partnerdata_ : *default_instance_->partnerdata_;
}
::TransPartnerData* TransferDataItem::mutable_partnerdata() {
  
  if (partnerdata_ == NULL) {
    partnerdata_ = new ::TransPartnerData;
  }
  // @@protoc_insertion_point(field_mutable:TransferDataItem.PartnerData)
  return partnerdata_;
}
::TransPartnerData* TransferDataItem::release_partnerdata() {
  // @@protoc_insertion_point(field_release:TransferDataItem.PartnerData)
  
  ::TransPartnerData* temp = partnerdata_;
  partnerdata_ = NULL;
  return temp;
}
void TransferDataItem::set_allocated_partnerdata(::TransPartnerData* partnerdata) {
  delete partnerdata_;
  partnerdata_ = partnerdata;
  if (partnerdata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TransferDataItem.PartnerData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferDataReq::kTransDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferDataReq::TransferDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransferDataReq)
}

void TransferDataReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TransferDataReq::TransferDataReq(const TransferDataReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TransferDataReq)
}

void TransferDataReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

TransferDataReq::~TransferDataReq() {
  // @@protoc_insertion_point(destructor:TransferDataReq)
  SharedDtor();
}

void TransferDataReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TransferDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferDataReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferDataReq_descriptor_;
}

const TransferDataReq& TransferDataReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

TransferDataReq* TransferDataReq::default_instance_ = NULL;

TransferDataReq* TransferDataReq::New(::google::protobuf::Arena* arena) const {
  TransferDataReq* n = new TransferDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TransferDataReq)
  transdatas_.Clear();
}

bool TransferDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransferDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TransferDataItem TransDatas = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_TransDatas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_transdatas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_TransDatas;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransferDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransferDataReq)
  return false;
#undef DO_
}

void TransferDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransferDataReq)
  // repeated .TransferDataItem TransDatas = 1;
  for (unsigned int i = 0, n = this->transdatas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transdatas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TransferDataReq)
}

::google::protobuf::uint8* TransferDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransferDataReq)
  // repeated .TransferDataItem TransDatas = 1;
  for (unsigned int i = 0, n = this->transdatas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->transdatas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransferDataReq)
  return target;
}

int TransferDataReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:TransferDataReq)
  int total_size = 0;

  // repeated .TransferDataItem TransDatas = 1;
  total_size += 1 * this->transdatas_size();
  for (int i = 0; i < this->transdatas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->transdatas(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransferDataReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TransferDataReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransferDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransferDataReq)
    MergeFrom(*source);
  }
}

void TransferDataReq::MergeFrom(const TransferDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransferDataReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  transdatas_.MergeFrom(from.transdatas_);
}

void TransferDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransferDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferDataReq::CopyFrom(const TransferDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransferDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferDataReq::IsInitialized() const {

  return true;
}

void TransferDataReq::Swap(TransferDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferDataReq::InternalSwap(TransferDataReq* other) {
  transdatas_.UnsafeArenaSwap(&other->transdatas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferDataReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferDataReq_descriptor_;
  metadata.reflection = TransferDataReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferDataReq

// repeated .TransferDataItem TransDatas = 1;
int TransferDataReq::transdatas_size() const {
  return transdatas_.size();
}
void TransferDataReq::clear_transdatas() {
  transdatas_.Clear();
}
const ::TransferDataItem& TransferDataReq::transdatas(int index) const {
  // @@protoc_insertion_point(field_get:TransferDataReq.TransDatas)
  return transdatas_.Get(index);
}
::TransferDataItem* TransferDataReq::mutable_transdatas(int index) {
  // @@protoc_insertion_point(field_mutable:TransferDataReq.TransDatas)
  return transdatas_.Mutable(index);
}
::TransferDataItem* TransferDataReq::add_transdatas() {
  // @@protoc_insertion_point(field_add:TransferDataReq.TransDatas)
  return transdatas_.Add();
}
::google::protobuf::RepeatedPtrField< ::TransferDataItem >*
TransferDataReq::mutable_transdatas() {
  // @@protoc_insertion_point(field_mutable_list:TransferDataReq.TransDatas)
  return &transdatas_;
}
const ::google::protobuf::RepeatedPtrField< ::TransferDataItem >&
TransferDataReq::transdatas() const {
  // @@protoc_insertion_point(field_list:TransferDataReq.TransDatas)
  return transdatas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferDataAck::kRetCodeFieldNumber;
const int TransferDataAck::kRoleIDFieldNumber;
const int TransferDataAck::kCopyIDFieldNumber;
const int TransferDataAck::kCopyGuidFieldNumber;
const int TransferDataAck::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferDataAck::TransferDataAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TransferDataAck)
}

void TransferDataAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TransferDataAck::TransferDataAck(const TransferDataAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TransferDataAck)
}

void TransferDataAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  roleid_ = GOOGLE_ULONGLONG(0);
  copyid_ = 0;
  copyguid_ = 0;
  serverid_ = 0;
}

TransferDataAck::~TransferDataAck() {
  // @@protoc_insertion_point(destructor:TransferDataAck)
  SharedDtor();
}

void TransferDataAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TransferDataAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferDataAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferDataAck_descriptor_;
}

const TransferDataAck& TransferDataAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

TransferDataAck* TransferDataAck::default_instance_ = NULL;

TransferDataAck* TransferDataAck::New(::google::protobuf::Arena* arena) const {
  TransferDataAck* n = new TransferDataAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferDataAck::Clear() {
// @@protoc_insertion_point(message_clear_start:TransferDataAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TransferDataAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransferDataAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, serverid_);

#undef ZR_HELPER_
#undef ZR_

}

bool TransferDataAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TransferDataAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RoleID;
        break;
      }

      // optional uint64 RoleID = 2;
      case 2: {
        if (tag == 16) {
         parse_RoleID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CopyID;
        break;
      }

      // optional int32 CopyID = 3;
      case 3: {
        if (tag == 24) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CopyGuid;
        break;
      }

      // optional int32 CopyGuid = 4;
      case 4: {
        if (tag == 32) {
         parse_CopyGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ServerID;
        break;
      }

      // optional int32 ServerID = 5;
      case 5: {
        if (tag == 40) {
         parse_ServerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TransferDataAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TransferDataAck)
  return false;
#undef DO_
}

void TransferDataAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TransferDataAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // optional int32 CopyID = 3;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyid(), output);
  }

  // optional int32 CopyGuid = 4;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->copyguid(), output);
  }

  // optional int32 ServerID = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:TransferDataAck)
}

::google::protobuf::uint8* TransferDataAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TransferDataAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // optional int32 CopyID = 3;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyid(), target);
  }

  // optional int32 CopyGuid = 4;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->copyguid(), target);
  }

  // optional int32 ServerID = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TransferDataAck)
  return target;
}

int TransferDataAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:TransferDataAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 CopyID = 3;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // optional int32 CopyGuid = 4;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // optional int32 ServerID = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferDataAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TransferDataAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TransferDataAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferDataAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TransferDataAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TransferDataAck)
    MergeFrom(*source);
  }
}

void TransferDataAck::MergeFrom(const TransferDataAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TransferDataAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void TransferDataAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TransferDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferDataAck::CopyFrom(const TransferDataAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TransferDataAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransferDataAck::IsInitialized() const {

  return true;
}

void TransferDataAck::Swap(TransferDataAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferDataAck::InternalSwap(TransferDataAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(roleid_, other->roleid_);
  std::swap(copyid_, other->copyid_);
  std::swap(copyguid_, other->copyguid_);
  std::swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferDataAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferDataAck_descriptor_;
  metadata.reflection = TransferDataAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferDataAck

// optional uint32 RetCode = 1;
void TransferDataAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 TransferDataAck::retcode() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.RetCode)
  return retcode_;
}
 void TransferDataAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:TransferDataAck.RetCode)
}

// optional uint64 RoleID = 2;
void TransferDataAck::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 TransferDataAck::roleid() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.RoleID)
  return roleid_;
}
 void TransferDataAck::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:TransferDataAck.RoleID)
}

// optional int32 CopyID = 3;
void TransferDataAck::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 TransferDataAck::copyid() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.CopyID)
  return copyid_;
}
 void TransferDataAck::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:TransferDataAck.CopyID)
}

// optional int32 CopyGuid = 4;
void TransferDataAck::clear_copyguid() {
  copyguid_ = 0;
}
 ::google::protobuf::int32 TransferDataAck::copyguid() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.CopyGuid)
  return copyguid_;
}
 void TransferDataAck::set_copyguid(::google::protobuf::int32 value) {
  
  copyguid_ = value;
  // @@protoc_insertion_point(field_set:TransferDataAck.CopyGuid)
}

// optional int32 ServerID = 5;
void TransferDataAck::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 TransferDataAck::serverid() const {
  // @@protoc_insertion_point(field_get:TransferDataAck.ServerID)
  return serverid_;
}
 void TransferDataAck::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:TransferDataAck.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyIntoScene::kRoleIDFieldNumber;
const int NotifyIntoScene::kCopyIDFieldNumber;
const int NotifyIntoScene::kCopyGuidFieldNumber;
const int NotifyIntoScene::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyIntoScene::NotifyIntoScene()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NotifyIntoScene)
}

void NotifyIntoScene::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NotifyIntoScene::NotifyIntoScene(const NotifyIntoScene& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NotifyIntoScene)
}

void NotifyIntoScene::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  copyid_ = 0;
  copyguid_ = 0;
  serverid_ = 0;
}

NotifyIntoScene::~NotifyIntoScene() {
  // @@protoc_insertion_point(destructor:NotifyIntoScene)
  SharedDtor();
}

void NotifyIntoScene::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NotifyIntoScene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotifyIntoScene::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NotifyIntoScene_descriptor_;
}

const NotifyIntoScene& NotifyIntoScene::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

NotifyIntoScene* NotifyIntoScene::default_instance_ = NULL;

NotifyIntoScene* NotifyIntoScene::New(::google::protobuf::Arena* arena) const {
  NotifyIntoScene* n = new NotifyIntoScene;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotifyIntoScene::Clear() {
// @@protoc_insertion_point(message_clear_start:NotifyIntoScene)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(NotifyIntoScene, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NotifyIntoScene*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, serverid_);

#undef ZR_HELPER_
#undef ZR_

}

bool NotifyIntoScene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NotifyIntoScene)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyID;
        break;
      }

      // optional int32 CopyID = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CopyGuid;
        break;
      }

      // optional int32 CopyGuid = 3;
      case 3: {
        if (tag == 24) {
         parse_CopyGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ServerID;
        break;
      }

      // optional int32 ServerID = 4;
      case 4: {
        if (tag == 32) {
         parse_ServerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NotifyIntoScene)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NotifyIntoScene)
  return false;
#undef DO_
}

void NotifyIntoScene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NotifyIntoScene)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copyguid(), output);
  }

  // optional int32 ServerID = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:NotifyIntoScene)
}

::google::protobuf::uint8* NotifyIntoScene::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NotifyIntoScene)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copyguid(), target);
  }

  // optional int32 ServerID = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NotifyIntoScene)
  return target;
}

int NotifyIntoScene::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:NotifyIntoScene)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // optional int32 CopyGuid = 3;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyguid());
  }

  // optional int32 ServerID = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotifyIntoScene::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NotifyIntoScene)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NotifyIntoScene* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NotifyIntoScene>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NotifyIntoScene)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NotifyIntoScene)
    MergeFrom(*source);
  }
}

void NotifyIntoScene::MergeFrom(const NotifyIntoScene& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NotifyIntoScene)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void NotifyIntoScene::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NotifyIntoScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyIntoScene::CopyFrom(const NotifyIntoScene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NotifyIntoScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyIntoScene::IsInitialized() const {

  return true;
}

void NotifyIntoScene::Swap(NotifyIntoScene* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyIntoScene::InternalSwap(NotifyIntoScene* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(copyid_, other->copyid_);
  std::swap(copyguid_, other->copyguid_);
  std::swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotifyIntoScene::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NotifyIntoScene_descriptor_;
  metadata.reflection = NotifyIntoScene_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotifyIntoScene

// optional uint64 RoleID = 1;
void NotifyIntoScene::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 NotifyIntoScene::roleid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.RoleID)
  return roleid_;
}
 void NotifyIntoScene::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:NotifyIntoScene.RoleID)
}

// optional int32 CopyID = 2;
void NotifyIntoScene::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 NotifyIntoScene::copyid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.CopyID)
  return copyid_;
}
 void NotifyIntoScene::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:NotifyIntoScene.CopyID)
}

// optional int32 CopyGuid = 3;
void NotifyIntoScene::clear_copyguid() {
  copyguid_ = 0;
}
 ::google::protobuf::int32 NotifyIntoScene::copyguid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.CopyGuid)
  return copyguid_;
}
 void NotifyIntoScene::set_copyguid(::google::protobuf::int32 value) {
  
  copyguid_ = value;
  // @@protoc_insertion_point(field_set:NotifyIntoScene.CopyGuid)
}

// optional int32 ServerID = 4;
void NotifyIntoScene::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 NotifyIntoScene::serverid() const {
  // @@protoc_insertion_point(field_get:NotifyIntoScene.ServerID)
  return serverid_;
}
 void NotifyIntoScene::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:NotifyIntoScene.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NearByRoleItem::kRoleIDFieldNumber;
const int NearByRoleItem::kActorIDFieldNumber;
const int NearByRoleItem::kLevelFieldNumber;
const int NearByRoleItem::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NearByRoleItem::NearByRoleItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NearByRoleItem)
}

void NearByRoleItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NearByRoleItem::NearByRoleItem(const NearByRoleItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NearByRoleItem)
}

void NearByRoleItem::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roleid_ = GOOGLE_ULONGLONG(0);
  actorid_ = 0;
  level_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NearByRoleItem::~NearByRoleItem() {
  // @@protoc_insertion_point(destructor:NearByRoleItem)
  SharedDtor();
}

void NearByRoleItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NearByRoleItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NearByRoleItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NearByRoleItem_descriptor_;
}

const NearByRoleItem& NearByRoleItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

NearByRoleItem* NearByRoleItem::default_instance_ = NULL;

NearByRoleItem* NearByRoleItem::New(::google::protobuf::Arena* arena) const {
  NearByRoleItem* n = new NearByRoleItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NearByRoleItem::Clear() {
// @@protoc_insertion_point(message_clear_start:NearByRoleItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(NearByRoleItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<NearByRoleItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, level_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool NearByRoleItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NearByRoleItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ActorID;
        break;
      }

      // optional int32 ActorID = 2;
      case 2: {
        if (tag == 16) {
         parse_ActorID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actorid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Level;
        break;
      }

      // optional int32 Level = 3;
      case 3: {
        if (tag == 24) {
         parse_Level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Name;
        break;
      }

      // optional string Name = 4;
      case 4: {
        if (tag == 34) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NearByRoleItem.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NearByRoleItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NearByRoleItem)
  return false;
#undef DO_
}

void NearByRoleItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NearByRoleItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roleid(), output);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->actorid(), output);
  }

  // optional int32 Level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NearByRoleItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:NearByRoleItem)
}

::google::protobuf::uint8* NearByRoleItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NearByRoleItem)
  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roleid(), target);
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->actorid(), target);
  }

  // optional int32 Level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NearByRoleItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NearByRoleItem)
  return target;
}

int NearByRoleItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:NearByRoleItem)
  int total_size = 0;

  // optional uint64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // optional int32 ActorID = 2;
  if (this->actorid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actorid());
  }

  // optional int32 Level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NearByRoleItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NearByRoleItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NearByRoleItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NearByRoleItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NearByRoleItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NearByRoleItem)
    MergeFrom(*source);
  }
}

void NearByRoleItem::MergeFrom(const NearByRoleItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NearByRoleItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.actorid() != 0) {
    set_actorid(from.actorid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void NearByRoleItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NearByRoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NearByRoleItem::CopyFrom(const NearByRoleItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NearByRoleItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NearByRoleItem::IsInitialized() const {

  return true;
}

void NearByRoleItem::Swap(NearByRoleItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NearByRoleItem::InternalSwap(NearByRoleItem* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(actorid_, other->actorid_);
  std::swap(level_, other->level_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NearByRoleItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NearByRoleItem_descriptor_;
  metadata.reflection = NearByRoleItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NearByRoleItem

// optional uint64 RoleID = 1;
void NearByRoleItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 NearByRoleItem::roleid() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.RoleID)
  return roleid_;
}
 void NearByRoleItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:NearByRoleItem.RoleID)
}

// optional int32 ActorID = 2;
void NearByRoleItem::clear_actorid() {
  actorid_ = 0;
}
 ::google::protobuf::int32 NearByRoleItem::actorid() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.ActorID)
  return actorid_;
}
 void NearByRoleItem::set_actorid(::google::protobuf::int32 value) {
  
  actorid_ = value;
  // @@protoc_insertion_point(field_set:NearByRoleItem.ActorID)
}

// optional int32 Level = 3;
void NearByRoleItem::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 NearByRoleItem::level() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.Level)
  return level_;
}
 void NearByRoleItem::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:NearByRoleItem.Level)
}

// optional string Name = 4;
void NearByRoleItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NearByRoleItem::name() const {
  // @@protoc_insertion_point(field_get:NearByRoleItem.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NearByRoleItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NearByRoleItem.Name)
}
 void NearByRoleItem::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NearByRoleItem.Name)
}
 void NearByRoleItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NearByRoleItem.Name)
}
 ::std::string* NearByRoleItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NearByRoleItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NearByRoleItem::release_name() {
  // @@protoc_insertion_point(field_release:NearByRoleItem.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NearByRoleItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NearByRoleItem.Name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CopyInsItem::kCopyGuidFieldNumber;
const int CopyInsItem::kCopyIDFieldNumber;
const int CopyInsItem::kCopyTypeFieldNumber;
const int CopyInsItem::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CopyInsItem::CopyInsItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CopyInsItem)
}

void CopyInsItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CopyInsItem::CopyInsItem(const CopyInsItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CopyInsItem)
}

void CopyInsItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  copyguid_ = 0u;
  copyid_ = 0;
  copytype_ = 0;
  serverid_ = 0;
}

CopyInsItem::~CopyInsItem() {
  // @@protoc_insertion_point(destructor:CopyInsItem)
  SharedDtor();
}

void CopyInsItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CopyInsItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CopyInsItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CopyInsItem_descriptor_;
}

const CopyInsItem& CopyInsItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

CopyInsItem* CopyInsItem::default_instance_ = NULL;

CopyInsItem* CopyInsItem::New(::google::protobuf::Arena* arena) const {
  CopyInsItem* n = new CopyInsItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CopyInsItem::Clear() {
// @@protoc_insertion_point(message_clear_start:CopyInsItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CopyInsItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CopyInsItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(copyguid_, serverid_);

#undef ZR_HELPER_
#undef ZR_

}

bool CopyInsItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CopyInsItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 CopyGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &copyguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_CopyID;
        break;
      }

      // optional int32 CopyID = 2;
      case 2: {
        if (tag == 16) {
         parse_CopyID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copyid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_CopyType;
        break;
      }

      // optional int32 CopyType = 3;
      case 3: {
        if (tag == 24) {
         parse_CopyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copytype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ServerID;
        break;
      }

      // optional int32 ServerID = 4;
      case 4: {
        if (tag == 32) {
         parse_ServerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CopyInsItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CopyInsItem)
  return false;
#undef DO_
}

void CopyInsItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CopyInsItem)
  // optional uint32 CopyGuid = 1;
  if (this->copyguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->copyguid(), output);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->copyid(), output);
  }

  // optional int32 CopyType = 3;
  if (this->copytype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->copytype(), output);
  }

  // optional int32 ServerID = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:CopyInsItem)
}

::google::protobuf::uint8* CopyInsItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CopyInsItem)
  // optional uint32 CopyGuid = 1;
  if (this->copyguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->copyguid(), target);
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->copyid(), target);
  }

  // optional int32 CopyType = 3;
  if (this->copytype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->copytype(), target);
  }

  // optional int32 ServerID = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CopyInsItem)
  return target;
}

int CopyInsItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CopyInsItem)
  int total_size = 0;

  // optional uint32 CopyGuid = 1;
  if (this->copyguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->copyguid());
  }

  // optional int32 CopyID = 2;
  if (this->copyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copyid());
  }

  // optional int32 CopyType = 3;
  if (this->copytype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->copytype());
  }

  // optional int32 ServerID = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CopyInsItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CopyInsItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CopyInsItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CopyInsItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CopyInsItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CopyInsItem)
    MergeFrom(*source);
  }
}

void CopyInsItem::MergeFrom(const CopyInsItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CopyInsItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.copyguid() != 0) {
    set_copyguid(from.copyguid());
  }
  if (from.copyid() != 0) {
    set_copyid(from.copyid());
  }
  if (from.copytype() != 0) {
    set_copytype(from.copytype());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void CopyInsItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CopyInsItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CopyInsItem::CopyFrom(const CopyInsItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CopyInsItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CopyInsItem::IsInitialized() const {

  return true;
}

void CopyInsItem::Swap(CopyInsItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CopyInsItem::InternalSwap(CopyInsItem* other) {
  std::swap(copyguid_, other->copyguid_);
  std::swap(copyid_, other->copyid_);
  std::swap(copytype_, other->copytype_);
  std::swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CopyInsItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CopyInsItem_descriptor_;
  metadata.reflection = CopyInsItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CopyInsItem

// optional uint32 CopyGuid = 1;
void CopyInsItem::clear_copyguid() {
  copyguid_ = 0u;
}
 ::google::protobuf::uint32 CopyInsItem::copyguid() const {
  // @@protoc_insertion_point(field_get:CopyInsItem.CopyGuid)
  return copyguid_;
}
 void CopyInsItem::set_copyguid(::google::protobuf::uint32 value) {
  
  copyguid_ = value;
  // @@protoc_insertion_point(field_set:CopyInsItem.CopyGuid)
}

// optional int32 CopyID = 2;
void CopyInsItem::clear_copyid() {
  copyid_ = 0;
}
 ::google::protobuf::int32 CopyInsItem::copyid() const {
  // @@protoc_insertion_point(field_get:CopyInsItem.CopyID)
  return copyid_;
}
 void CopyInsItem::set_copyid(::google::protobuf::int32 value) {
  
  copyid_ = value;
  // @@protoc_insertion_point(field_set:CopyInsItem.CopyID)
}

// optional int32 CopyType = 3;
void CopyInsItem::clear_copytype() {
  copytype_ = 0;
}
 ::google::protobuf::int32 CopyInsItem::copytype() const {
  // @@protoc_insertion_point(field_get:CopyInsItem.CopyType)
  return copytype_;
}
 void CopyInsItem::set_copytype(::google::protobuf::int32 value) {
  
  copytype_ = value;
  // @@protoc_insertion_point(field_set:CopyInsItem.CopyType)
}

// optional int32 ServerID = 4;
void CopyInsItem::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 CopyInsItem::serverid() const {
  // @@protoc_insertion_point(field_get:CopyInsItem.ServerID)
  return serverid_;
}
 void CopyInsItem::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:CopyInsItem.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CopyReportReq::kServerIDFieldNumber;
const int CopyReportReq::kCopyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CopyReportReq::CopyReportReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CopyReportReq)
}

void CopyReportReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CopyReportReq::CopyReportReq(const CopyReportReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CopyReportReq)
}

void CopyReportReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  serverid_ = 0;
}

CopyReportReq::~CopyReportReq() {
  // @@protoc_insertion_point(destructor:CopyReportReq)
  SharedDtor();
}

void CopyReportReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CopyReportReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CopyReportReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CopyReportReq_descriptor_;
}

const CopyReportReq& CopyReportReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

CopyReportReq* CopyReportReq::default_instance_ = NULL;

CopyReportReq* CopyReportReq::New(::google::protobuf::Arena* arena) const {
  CopyReportReq* n = new CopyReportReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CopyReportReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CopyReportReq)
  serverid_ = 0;
  copylist_.Clear();
}

bool CopyReportReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CopyReportReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ServerID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_CopyList;
        break;
      }

      // repeated .CopyInsItem CopyList = 2;
      case 2: {
        if (tag == 18) {
         parse_CopyList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_CopyList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_copylist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_CopyList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CopyReportReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CopyReportReq)
  return false;
#undef DO_
}

void CopyReportReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CopyReportReq)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // repeated .CopyInsItem CopyList = 2;
  for (unsigned int i = 0, n = this->copylist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->copylist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:CopyReportReq)
}

::google::protobuf::uint8* CopyReportReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CopyReportReq)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // repeated .CopyInsItem CopyList = 2;
  for (unsigned int i = 0, n = this->copylist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->copylist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CopyReportReq)
  return target;
}

int CopyReportReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CopyReportReq)
  int total_size = 0;

  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // repeated .CopyInsItem CopyList = 2;
  total_size += 1 * this->copylist_size();
  for (int i = 0; i < this->copylist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->copylist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CopyReportReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CopyReportReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CopyReportReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CopyReportReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CopyReportReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CopyReportReq)
    MergeFrom(*source);
  }
}

void CopyReportReq::MergeFrom(const CopyReportReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CopyReportReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  copylist_.MergeFrom(from.copylist_);
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void CopyReportReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CopyReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CopyReportReq::CopyFrom(const CopyReportReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CopyReportReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CopyReportReq::IsInitialized() const {

  return true;
}

void CopyReportReq::Swap(CopyReportReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CopyReportReq::InternalSwap(CopyReportReq* other) {
  std::swap(serverid_, other->serverid_);
  copylist_.UnsafeArenaSwap(&other->copylist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CopyReportReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CopyReportReq_descriptor_;
  metadata.reflection = CopyReportReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CopyReportReq

// optional int32 ServerID = 1;
void CopyReportReq::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 CopyReportReq::serverid() const {
  // @@protoc_insertion_point(field_get:CopyReportReq.ServerID)
  return serverid_;
}
 void CopyReportReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:CopyReportReq.ServerID)
}

// repeated .CopyInsItem CopyList = 2;
int CopyReportReq::copylist_size() const {
  return copylist_.size();
}
void CopyReportReq::clear_copylist() {
  copylist_.Clear();
}
const ::CopyInsItem& CopyReportReq::copylist(int index) const {
  // @@protoc_insertion_point(field_get:CopyReportReq.CopyList)
  return copylist_.Get(index);
}
::CopyInsItem* CopyReportReq::mutable_copylist(int index) {
  // @@protoc_insertion_point(field_mutable:CopyReportReq.CopyList)
  return copylist_.Mutable(index);
}
::CopyInsItem* CopyReportReq::add_copylist() {
  // @@protoc_insertion_point(field_add:CopyReportReq.CopyList)
  return copylist_.Add();
}
::google::protobuf::RepeatedPtrField< ::CopyInsItem >*
CopyReportReq::mutable_copylist() {
  // @@protoc_insertion_point(field_mutable_list:CopyReportReq.CopyList)
  return &copylist_;
}
const ::google::protobuf::RepeatedPtrField< ::CopyInsItem >&
CopyReportReq::copylist() const {
  // @@protoc_insertion_point(field_list:CopyReportReq.CopyList)
  return copylist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseHpBottleReq::UseHpBottleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseHpBottleReq)
}

void UseHpBottleReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UseHpBottleReq::UseHpBottleReq(const UseHpBottleReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UseHpBottleReq)
}

void UseHpBottleReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UseHpBottleReq::~UseHpBottleReq() {
  // @@protoc_insertion_point(destructor:UseHpBottleReq)
  SharedDtor();
}

void UseHpBottleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseHpBottleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseHpBottleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseHpBottleReq_descriptor_;
}

const UseHpBottleReq& UseHpBottleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UseHpBottleReq* UseHpBottleReq::default_instance_ = NULL;

UseHpBottleReq* UseHpBottleReq::New(::google::protobuf::Arena* arena) const {
  UseHpBottleReq* n = new UseHpBottleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseHpBottleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UseHpBottleReq)
}

bool UseHpBottleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseHpBottleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:UseHpBottleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseHpBottleReq)
  return false;
#undef DO_
}

void UseHpBottleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseHpBottleReq)
  // @@protoc_insertion_point(serialize_end:UseHpBottleReq)
}

::google::protobuf::uint8* UseHpBottleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseHpBottleReq)
  // @@protoc_insertion_point(serialize_to_array_end:UseHpBottleReq)
  return target;
}

int UseHpBottleReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UseHpBottleReq)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseHpBottleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseHpBottleReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UseHpBottleReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UseHpBottleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseHpBottleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseHpBottleReq)
    MergeFrom(*source);
  }
}

void UseHpBottleReq::MergeFrom(const UseHpBottleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseHpBottleReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void UseHpBottleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseHpBottleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseHpBottleReq::CopyFrom(const UseHpBottleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseHpBottleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseHpBottleReq::IsInitialized() const {

  return true;
}

void UseHpBottleReq::Swap(UseHpBottleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseHpBottleReq::InternalSwap(UseHpBottleReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseHpBottleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseHpBottleReq_descriptor_;
  metadata.reflection = UseHpBottleReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseHpBottleReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseHpBottleAck::kRetCodeFieldNumber;
const int UseHpBottleAck::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseHpBottleAck::UseHpBottleAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseHpBottleAck)
}

void UseHpBottleAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UseHpBottleAck::UseHpBottleAck(const UseHpBottleAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UseHpBottleAck)
}

void UseHpBottleAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  count_ = 0;
}

UseHpBottleAck::~UseHpBottleAck() {
  // @@protoc_insertion_point(destructor:UseHpBottleAck)
  SharedDtor();
}

void UseHpBottleAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseHpBottleAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseHpBottleAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseHpBottleAck_descriptor_;
}

const UseHpBottleAck& UseHpBottleAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UseHpBottleAck* UseHpBottleAck::default_instance_ = NULL;

UseHpBottleAck* UseHpBottleAck::New(::google::protobuf::Arena* arena) const {
  UseHpBottleAck* n = new UseHpBottleAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseHpBottleAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UseHpBottleAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UseHpBottleAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UseHpBottleAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(retcode_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool UseHpBottleAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseHpBottleAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Count;
        break;
      }

      // optional int32 Count = 2;
      case 2: {
        if (tag == 16) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UseHpBottleAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseHpBottleAck)
  return false;
#undef DO_
}

void UseHpBottleAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseHpBottleAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional int32 Count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:UseHpBottleAck)
}

::google::protobuf::uint8* UseHpBottleAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseHpBottleAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional int32 Count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UseHpBottleAck)
  return target;
}

int UseHpBottleAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UseHpBottleAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional int32 Count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseHpBottleAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseHpBottleAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UseHpBottleAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UseHpBottleAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseHpBottleAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseHpBottleAck)
    MergeFrom(*source);
  }
}

void UseHpBottleAck::MergeFrom(const UseHpBottleAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseHpBottleAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void UseHpBottleAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseHpBottleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseHpBottleAck::CopyFrom(const UseHpBottleAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseHpBottleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseHpBottleAck::IsInitialized() const {

  return true;
}

void UseHpBottleAck::Swap(UseHpBottleAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseHpBottleAck::InternalSwap(UseHpBottleAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseHpBottleAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseHpBottleAck_descriptor_;
  metadata.reflection = UseHpBottleAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseHpBottleAck

// optional uint32 RetCode = 1;
void UseHpBottleAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 UseHpBottleAck::retcode() const {
  // @@protoc_insertion_point(field_get:UseHpBottleAck.RetCode)
  return retcode_;
}
 void UseHpBottleAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:UseHpBottleAck.RetCode)
}

// optional int32 Count = 2;
void UseHpBottleAck::clear_count() {
  count_ = 0;
}
 ::google::protobuf::int32 UseHpBottleAck::count() const {
  // @@protoc_insertion_point(field_get:UseHpBottleAck.Count)
  return count_;
}
 void UseHpBottleAck::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:UseHpBottleAck.Count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseMpBottleReq::UseMpBottleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseMpBottleReq)
}

void UseMpBottleReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UseMpBottleReq::UseMpBottleReq(const UseMpBottleReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UseMpBottleReq)
}

void UseMpBottleReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UseMpBottleReq::~UseMpBottleReq() {
  // @@protoc_insertion_point(destructor:UseMpBottleReq)
  SharedDtor();
}

void UseMpBottleReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseMpBottleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseMpBottleReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseMpBottleReq_descriptor_;
}

const UseMpBottleReq& UseMpBottleReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UseMpBottleReq* UseMpBottleReq::default_instance_ = NULL;

UseMpBottleReq* UseMpBottleReq::New(::google::protobuf::Arena* arena) const {
  UseMpBottleReq* n = new UseMpBottleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseMpBottleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UseMpBottleReq)
}

bool UseMpBottleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseMpBottleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:UseMpBottleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseMpBottleReq)
  return false;
#undef DO_
}

void UseMpBottleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseMpBottleReq)
  // @@protoc_insertion_point(serialize_end:UseMpBottleReq)
}

::google::protobuf::uint8* UseMpBottleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseMpBottleReq)
  // @@protoc_insertion_point(serialize_to_array_end:UseMpBottleReq)
  return target;
}

int UseMpBottleReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UseMpBottleReq)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseMpBottleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseMpBottleReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UseMpBottleReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UseMpBottleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseMpBottleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseMpBottleReq)
    MergeFrom(*source);
  }
}

void UseMpBottleReq::MergeFrom(const UseMpBottleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseMpBottleReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void UseMpBottleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseMpBottleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseMpBottleReq::CopyFrom(const UseMpBottleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseMpBottleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseMpBottleReq::IsInitialized() const {

  return true;
}

void UseMpBottleReq::Swap(UseMpBottleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseMpBottleReq::InternalSwap(UseMpBottleReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseMpBottleReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseMpBottleReq_descriptor_;
  metadata.reflection = UseMpBottleReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseMpBottleReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseMpBottleAck::kRetCodeFieldNumber;
const int UseMpBottleAck::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseMpBottleAck::UseMpBottleAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseMpBottleAck)
}

void UseMpBottleAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UseMpBottleAck::UseMpBottleAck(const UseMpBottleAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UseMpBottleAck)
}

void UseMpBottleAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  count_ = 0;
}

UseMpBottleAck::~UseMpBottleAck() {
  // @@protoc_insertion_point(destructor:UseMpBottleAck)
  SharedDtor();
}

void UseMpBottleAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseMpBottleAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseMpBottleAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseMpBottleAck_descriptor_;
}

const UseMpBottleAck& UseMpBottleAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UseMpBottleAck* UseMpBottleAck::default_instance_ = NULL;

UseMpBottleAck* UseMpBottleAck::New(::google::protobuf::Arena* arena) const {
  UseMpBottleAck* n = new UseMpBottleAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseMpBottleAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UseMpBottleAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UseMpBottleAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UseMpBottleAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(retcode_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool UseMpBottleAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseMpBottleAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Count;
        break;
      }

      // optional int32 Count = 2;
      case 2: {
        if (tag == 16) {
         parse_Count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UseMpBottleAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseMpBottleAck)
  return false;
#undef DO_
}

void UseMpBottleAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseMpBottleAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional int32 Count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:UseMpBottleAck)
}

::google::protobuf::uint8* UseMpBottleAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseMpBottleAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional int32 Count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UseMpBottleAck)
  return target;
}

int UseMpBottleAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UseMpBottleAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional int32 Count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseMpBottleAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseMpBottleAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UseMpBottleAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UseMpBottleAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseMpBottleAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseMpBottleAck)
    MergeFrom(*source);
  }
}

void UseMpBottleAck::MergeFrom(const UseMpBottleAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseMpBottleAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void UseMpBottleAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseMpBottleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseMpBottleAck::CopyFrom(const UseMpBottleAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseMpBottleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseMpBottleAck::IsInitialized() const {

  return true;
}

void UseMpBottleAck::Swap(UseMpBottleAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseMpBottleAck::InternalSwap(UseMpBottleAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseMpBottleAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseMpBottleAck_descriptor_;
  metadata.reflection = UseMpBottleAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseMpBottleAck

// optional uint32 RetCode = 1;
void UseMpBottleAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 UseMpBottleAck::retcode() const {
  // @@protoc_insertion_point(field_get:UseMpBottleAck.RetCode)
  return retcode_;
}
 void UseMpBottleAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:UseMpBottleAck.RetCode)
}

// optional int32 Count = 2;
void UseMpBottleAck::clear_count() {
  count_ = 0;
}
 ::google::protobuf::int32 UseMpBottleAck::count() const {
  // @@protoc_insertion_point(field_get:UseMpBottleAck.Count)
  return count_;
}
 void UseMpBottleAck::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:UseMpBottleAck.Count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessageReq::kSrcNameFieldNumber;
const int ChatMessageReq::kSrcIDFieldNumber;
const int ChatMessageReq::kChannelFieldNumber;
const int ChatMessageReq::kGuildIDFieldNumber;
const int ChatMessageReq::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessageReq::ChatMessageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatMessageReq)
}

void ChatMessageReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ChatMessageReq::ChatMessageReq(const ChatMessageReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ChatMessageReq)
}

void ChatMessageReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  srcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcid_ = GOOGLE_ULONGLONG(0);
  channel_ = 0;
  guildid_ = GOOGLE_ULONGLONG(0);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ChatMessageReq::~ChatMessageReq() {
  // @@protoc_insertion_point(destructor:ChatMessageReq)
  SharedDtor();
}

void ChatMessageReq::SharedDtor() {
  srcname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ChatMessageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessageReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatMessageReq_descriptor_;
}

const ChatMessageReq& ChatMessageReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

ChatMessageReq* ChatMessageReq::default_instance_ = NULL;

ChatMessageReq* ChatMessageReq::New(::google::protobuf::Arena* arena) const {
  ChatMessageReq* n = new ChatMessageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMessageReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ChatMessageReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ChatMessageReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(srcid_, guildid_);
  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ChatMessageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatMessageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string SrcName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcname().data(), this->srcname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMessageReq.SrcName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SrcID;
        break;
      }

      // optional uint64 SrcID = 2;
      case 2: {
        if (tag == 16) {
         parse_SrcID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &srcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Channel;
        break;
      }

      // optional int32 Channel = 3;
      case 3: {
        if (tag == 24) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_GuildID;
        break;
      }

      // optional uint64 GuildID = 4;
      case 4: {
        if (tag == 32) {
         parse_GuildID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Content;
        break;
      }

      // optional string Content = 5;
      case 5: {
        if (tag == 42) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMessageReq.Content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatMessageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatMessageReq)
  return false;
#undef DO_
}

void ChatMessageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatMessageReq)
  // optional string SrcName = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), this->srcname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageReq.SrcName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->srcname(), output);
  }

  // optional uint64 SrcID = 2;
  if (this->srcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->srcid(), output);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // optional uint64 GuildID = 4;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->guildid(), output);
  }

  // optional string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageReq.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // @@protoc_insertion_point(serialize_end:ChatMessageReq)
}

::google::protobuf::uint8* ChatMessageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatMessageReq)
  // optional string SrcName = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), this->srcname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageReq.SrcName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->srcname(), target);
  }

  // optional uint64 SrcID = 2;
  if (this->srcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->srcid(), target);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // optional uint64 GuildID = 4;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->guildid(), target);
  }

  // optional string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageReq.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ChatMessageReq)
  return target;
}

int ChatMessageReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ChatMessageReq)
  int total_size = 0;

  // optional string SrcName = 1;
  if (this->srcname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcname());
  }

  // optional uint64 SrcID = 2;
  if (this->srcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->srcid());
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // optional uint64 GuildID = 4;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // optional string Content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatMessageReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatMessageReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatMessageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatMessageReq)
    MergeFrom(*source);
  }
}

void ChatMessageReq::MergeFrom(const ChatMessageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatMessageReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.srcname().size() > 0) {

    srcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcname_);
  }
  if (from.srcid() != 0) {
    set_srcid(from.srcid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void ChatMessageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessageReq::CopyFrom(const ChatMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessageReq::IsInitialized() const {

  return true;
}

void ChatMessageReq::Swap(ChatMessageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessageReq::InternalSwap(ChatMessageReq* other) {
  srcname_.Swap(&other->srcname_);
  std::swap(srcid_, other->srcid_);
  std::swap(channel_, other->channel_);
  std::swap(guildid_, other->guildid_);
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMessageReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatMessageReq_descriptor_;
  metadata.reflection = ChatMessageReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatMessageReq

// optional string SrcName = 1;
void ChatMessageReq::clear_srcname() {
  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ChatMessageReq::srcname() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.SrcName)
  return srcname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMessageReq::set_srcname(const ::std::string& value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.SrcName)
}
 void ChatMessageReq::set_srcname(const char* value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMessageReq.SrcName)
}
 void ChatMessageReq::set_srcname(const char* value, size_t size) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMessageReq.SrcName)
}
 ::std::string* ChatMessageReq::mutable_srcname() {
  
  // @@protoc_insertion_point(field_mutable:ChatMessageReq.SrcName)
  return srcname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatMessageReq::release_srcname() {
  // @@protoc_insertion_point(field_release:ChatMessageReq.SrcName)
  
  return srcname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMessageReq::set_allocated_srcname(::std::string* srcname) {
  if (srcname != NULL) {
    
  } else {
    
  }
  srcname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcname);
  // @@protoc_insertion_point(field_set_allocated:ChatMessageReq.SrcName)
}

// optional uint64 SrcID = 2;
void ChatMessageReq::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ChatMessageReq::srcid() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.SrcID)
  return srcid_;
}
 void ChatMessageReq::set_srcid(::google::protobuf::uint64 value) {
  
  srcid_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageReq.SrcID)
}

// optional int32 Channel = 3;
void ChatMessageReq::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 ChatMessageReq::channel() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.Channel)
  return channel_;
}
 void ChatMessageReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageReq.Channel)
}

// optional uint64 GuildID = 4;
void ChatMessageReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ChatMessageReq::guildid() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.GuildID)
  return guildid_;
}
 void ChatMessageReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageReq.GuildID)
}

// optional string Content = 5;
void ChatMessageReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ChatMessageReq::content() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMessageReq::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.Content)
}
 void ChatMessageReq::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMessageReq.Content)
}
 void ChatMessageReq::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMessageReq.Content)
}
 ::std::string* ChatMessageReq::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatMessageReq.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatMessageReq::release_content() {
  // @@protoc_insertion_point(field_release:ChatMessageReq.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMessageReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatMessageReq.Content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessageAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessageAck::ChatMessageAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatMessageAck)
}

void ChatMessageAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ChatMessageAck::ChatMessageAck(const ChatMessageAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ChatMessageAck)
}

void ChatMessageAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

ChatMessageAck::~ChatMessageAck() {
  // @@protoc_insertion_point(destructor:ChatMessageAck)
  SharedDtor();
}

void ChatMessageAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChatMessageAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessageAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatMessageAck_descriptor_;
}

const ChatMessageAck& ChatMessageAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

ChatMessageAck* ChatMessageAck::default_instance_ = NULL;

ChatMessageAck* ChatMessageAck::New(::google::protobuf::Arena* arena) const {
  ChatMessageAck* n = new ChatMessageAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMessageAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMessageAck)
  retcode_ = 0u;
}

bool ChatMessageAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatMessageAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatMessageAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatMessageAck)
  return false;
#undef DO_
}

void ChatMessageAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatMessageAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:ChatMessageAck)
}

::google::protobuf::uint8* ChatMessageAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatMessageAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ChatMessageAck)
  return target;
}

int ChatMessageAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ChatMessageAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessageAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatMessageAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatMessageAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessageAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatMessageAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatMessageAck)
    MergeFrom(*source);
  }
}

void ChatMessageAck::MergeFrom(const ChatMessageAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatMessageAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ChatMessageAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatMessageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessageAck::CopyFrom(const ChatMessageAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMessageAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessageAck::IsInitialized() const {

  return true;
}

void ChatMessageAck::Swap(ChatMessageAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessageAck::InternalSwap(ChatMessageAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMessageAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatMessageAck_descriptor_;
  metadata.reflection = ChatMessageAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatMessageAck

// optional uint32 RetCode = 1;
void ChatMessageAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 ChatMessageAck::retcode() const {
  // @@protoc_insertion_point(field_get:ChatMessageAck.RetCode)
  return retcode_;
}
 void ChatMessageAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMessageNty::kSrcNameFieldNumber;
const int ChatMessageNty::kSrcIDFieldNumber;
const int ChatMessageNty::kChannelFieldNumber;
const int ChatMessageNty::kGuildIDFieldNumber;
const int ChatMessageNty::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMessageNty::ChatMessageNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChatMessageNty)
}

void ChatMessageNty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ChatMessageNty::ChatMessageNty(const ChatMessageNty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ChatMessageNty)
}

void ChatMessageNty::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  srcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcid_ = GOOGLE_ULONGLONG(0);
  channel_ = 0;
  guildid_ = GOOGLE_ULONGLONG(0);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ChatMessageNty::~ChatMessageNty() {
  // @@protoc_insertion_point(destructor:ChatMessageNty)
  SharedDtor();
}

void ChatMessageNty::SharedDtor() {
  srcname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ChatMessageNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMessageNty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChatMessageNty_descriptor_;
}

const ChatMessageNty& ChatMessageNty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

ChatMessageNty* ChatMessageNty::default_instance_ = NULL;

ChatMessageNty* ChatMessageNty::New(::google::protobuf::Arena* arena) const {
  ChatMessageNty* n = new ChatMessageNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMessageNty::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatMessageNty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ChatMessageNty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ChatMessageNty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(srcid_, guildid_);
  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0;
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ChatMessageNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChatMessageNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string SrcName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcname().data(), this->srcname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMessageNty.SrcName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SrcID;
        break;
      }

      // optional uint64 SrcID = 2;
      case 2: {
        if (tag == 16) {
         parse_SrcID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &srcid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Channel;
        break;
      }

      // optional int32 Channel = 3;
      case 3: {
        if (tag == 24) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_GuildID;
        break;
      }

      // optional uint64 GuildID = 4;
      case 4: {
        if (tag == 32) {
         parse_GuildID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guildid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Content;
        break;
      }

      // optional string Content = 5;
      case 5: {
        if (tag == 42) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ChatMessageNty.Content"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChatMessageNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChatMessageNty)
  return false;
#undef DO_
}

void ChatMessageNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChatMessageNty)
  // optional string SrcName = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), this->srcname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageNty.SrcName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->srcname(), output);
  }

  // optional uint64 SrcID = 2;
  if (this->srcid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->srcid(), output);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // optional uint64 GuildID = 4;
  if (this->guildid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->guildid(), output);
  }

  // optional string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageNty.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // @@protoc_insertion_point(serialize_end:ChatMessageNty)
}

::google::protobuf::uint8* ChatMessageNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChatMessageNty)
  // optional string SrcName = 1;
  if (this->srcname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcname().data(), this->srcname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageNty.SrcName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->srcname(), target);
  }

  // optional uint64 SrcID = 2;
  if (this->srcid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->srcid(), target);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // optional uint64 GuildID = 4;
  if (this->guildid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->guildid(), target);
  }

  // optional string Content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ChatMessageNty.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ChatMessageNty)
  return target;
}

int ChatMessageNty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ChatMessageNty)
  int total_size = 0;

  // optional string SrcName = 1;
  if (this->srcname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcname());
  }

  // optional uint64 SrcID = 2;
  if (this->srcid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->srcid());
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // optional uint64 GuildID = 4;
  if (this->guildid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guildid());
  }

  // optional string Content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMessageNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChatMessageNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ChatMessageNty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMessageNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChatMessageNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChatMessageNty)
    MergeFrom(*source);
  }
}

void ChatMessageNty::MergeFrom(const ChatMessageNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatMessageNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.srcname().size() > 0) {

    srcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcname_);
  }
  if (from.srcid() != 0) {
    set_srcid(from.srcid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.guildid() != 0) {
    set_guildid(from.guildid());
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void ChatMessageNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChatMessageNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMessageNty::CopyFrom(const ChatMessageNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatMessageNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMessageNty::IsInitialized() const {

  return true;
}

void ChatMessageNty::Swap(ChatMessageNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMessageNty::InternalSwap(ChatMessageNty* other) {
  srcname_.Swap(&other->srcname_);
  std::swap(srcid_, other->srcid_);
  std::swap(channel_, other->channel_);
  std::swap(guildid_, other->guildid_);
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMessageNty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChatMessageNty_descriptor_;
  metadata.reflection = ChatMessageNty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatMessageNty

// optional string SrcName = 1;
void ChatMessageNty::clear_srcname() {
  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ChatMessageNty::srcname() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.SrcName)
  return srcname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMessageNty::set_srcname(const ::std::string& value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.SrcName)
}
 void ChatMessageNty::set_srcname(const char* value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMessageNty.SrcName)
}
 void ChatMessageNty::set_srcname(const char* value, size_t size) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMessageNty.SrcName)
}
 ::std::string* ChatMessageNty::mutable_srcname() {
  
  // @@protoc_insertion_point(field_mutable:ChatMessageNty.SrcName)
  return srcname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatMessageNty::release_srcname() {
  // @@protoc_insertion_point(field_release:ChatMessageNty.SrcName)
  
  return srcname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMessageNty::set_allocated_srcname(::std::string* srcname) {
  if (srcname != NULL) {
    
  } else {
    
  }
  srcname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcname);
  // @@protoc_insertion_point(field_set_allocated:ChatMessageNty.SrcName)
}

// optional uint64 SrcID = 2;
void ChatMessageNty::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ChatMessageNty::srcid() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.SrcID)
  return srcid_;
}
 void ChatMessageNty::set_srcid(::google::protobuf::uint64 value) {
  
  srcid_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageNty.SrcID)
}

// optional int32 Channel = 3;
void ChatMessageNty::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 ChatMessageNty::channel() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.Channel)
  return channel_;
}
 void ChatMessageNty::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageNty.Channel)
}

// optional uint64 GuildID = 4;
void ChatMessageNty::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ChatMessageNty::guildid() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.GuildID)
  return guildid_;
}
 void ChatMessageNty::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageNty.GuildID)
}

// optional string Content = 5;
void ChatMessageNty::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ChatMessageNty::content() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMessageNty::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.Content)
}
 void ChatMessageNty::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMessageNty.Content)
}
 void ChatMessageNty::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMessageNty.Content)
}
 ::std::string* ChatMessageNty::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatMessageNty.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ChatMessageNty::release_content() {
  // @@protoc_insertion_point(field_release:ChatMessageNty.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ChatMessageNty::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatMessageNty.Content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SealAccountReq::kAccountNameFieldNumber;
const int SealAccountReq::kAccountIDFieldNumber;
const int SealAccountReq::kChannelFieldNumber;
const int SealAccountReq::kSealTimeFieldNumber;
const int SealAccountReq::kSealFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SealAccountReq::SealAccountReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SealAccountReq)
}

void SealAccountReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SealAccountReq::SealAccountReq(const SealAccountReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SealAccountReq)
}

void SealAccountReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_ = GOOGLE_ULONGLONG(0);
  channel_ = 0;
  sealtime_ = 0;
  seal_ = false;
}

SealAccountReq::~SealAccountReq() {
  // @@protoc_insertion_point(destructor:SealAccountReq)
  SharedDtor();
}

void SealAccountReq::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SealAccountReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SealAccountReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SealAccountReq_descriptor_;
}

const SealAccountReq& SealAccountReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SealAccountReq* SealAccountReq::default_instance_ = NULL;

SealAccountReq* SealAccountReq::New(::google::protobuf::Arena* arena) const {
  SealAccountReq* n = new SealAccountReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SealAccountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SealAccountReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SealAccountReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SealAccountReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, seal_);
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SealAccountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SealAccountReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AccountName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SealAccountReq.AccountName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AccountID;
        break;
      }

      // optional uint64 AccountID = 2;
      case 2: {
        if (tag == 16) {
         parse_AccountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Channel;
        break;
      }

      // optional int32 Channel = 3;
      case 3: {
        if (tag == 24) {
         parse_Channel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_SealTime;
        break;
      }

      // optional int32 SealTime = 4;
      case 4: {
        if (tag == 32) {
         parse_SealTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sealtime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Seal;
        break;
      }

      // optional bool Seal = 5;
      case 5: {
        if (tag == 40) {
         parse_Seal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &seal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SealAccountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SealAccountReq)
  return false;
#undef DO_
}

void SealAccountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SealAccountReq)
  // optional string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SealAccountReq.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->accountname(), output);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channel(), output);
  }

  // optional int32 SealTime = 4;
  if (this->sealtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sealtime(), output);
  }

  // optional bool Seal = 5;
  if (this->seal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->seal(), output);
  }

  // @@protoc_insertion_point(serialize_end:SealAccountReq)
}

::google::protobuf::uint8* SealAccountReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SealAccountReq)
  // optional string AccountName = 1;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SealAccountReq.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->accountname(), target);
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channel(), target);
  }

  // optional int32 SealTime = 4;
  if (this->sealtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sealtime(), target);
  }

  // optional bool Seal = 5;
  if (this->seal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->seal(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SealAccountReq)
  return target;
}

int SealAccountReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SealAccountReq)
  int total_size = 0;

  // optional string AccountName = 1;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // optional uint64 AccountID = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional int32 Channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channel());
  }

  // optional int32 SealTime = 4;
  if (this->sealtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sealtime());
  }

  // optional bool Seal = 5;
  if (this->seal() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SealAccountReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SealAccountReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SealAccountReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SealAccountReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SealAccountReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SealAccountReq)
    MergeFrom(*source);
  }
}

void SealAccountReq::MergeFrom(const SealAccountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SealAccountReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
  if (from.sealtime() != 0) {
    set_sealtime(from.sealtime());
  }
  if (from.seal() != 0) {
    set_seal(from.seal());
  }
}

void SealAccountReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SealAccountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SealAccountReq::CopyFrom(const SealAccountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SealAccountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SealAccountReq::IsInitialized() const {

  return true;
}

void SealAccountReq::Swap(SealAccountReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SealAccountReq::InternalSwap(SealAccountReq* other) {
  accountname_.Swap(&other->accountname_);
  std::swap(accountid_, other->accountid_);
  std::swap(channel_, other->channel_);
  std::swap(sealtime_, other->sealtime_);
  std::swap(seal_, other->seal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SealAccountReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SealAccountReq_descriptor_;
  metadata.reflection = SealAccountReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SealAccountReq

// optional string AccountName = 1;
void SealAccountReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SealAccountReq::accountname() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.AccountName)
  return accountname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SealAccountReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SealAccountReq.AccountName)
}
 void SealAccountReq::set_accountname(const char* value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SealAccountReq.AccountName)
}
 void SealAccountReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SealAccountReq.AccountName)
}
 ::std::string* SealAccountReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:SealAccountReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SealAccountReq::release_accountname() {
  // @@protoc_insertion_point(field_release:SealAccountReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SealAccountReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:SealAccountReq.AccountName)
}

// optional uint64 AccountID = 2;
void SealAccountReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SealAccountReq::accountid() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.AccountID)
  return accountid_;
}
 void SealAccountReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:SealAccountReq.AccountID)
}

// optional int32 Channel = 3;
void SealAccountReq::clear_channel() {
  channel_ = 0;
}
 ::google::protobuf::int32 SealAccountReq::channel() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.Channel)
  return channel_;
}
 void SealAccountReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:SealAccountReq.Channel)
}

// optional int32 SealTime = 4;
void SealAccountReq::clear_sealtime() {
  sealtime_ = 0;
}
 ::google::protobuf::int32 SealAccountReq::sealtime() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.SealTime)
  return sealtime_;
}
 void SealAccountReq::set_sealtime(::google::protobuf::int32 value) {
  
  sealtime_ = value;
  // @@protoc_insertion_point(field_set:SealAccountReq.SealTime)
}

// optional bool Seal = 5;
void SealAccountReq::clear_seal() {
  seal_ = false;
}
 bool SealAccountReq::seal() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.Seal)
  return seal_;
}
 void SealAccountReq::set_seal(bool value) {
  
  seal_ = value;
  // @@protoc_insertion_point(field_set:SealAccountReq.Seal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SealAccountAck::kRetCodeFieldNumber;
const int SealAccountAck::kAccountNameFieldNumber;
const int SealAccountAck::kAccountIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SealAccountAck::SealAccountAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SealAccountAck)
}

void SealAccountAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SealAccountAck::SealAccountAck(const SealAccountAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SealAccountAck)
}

void SealAccountAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0u;
  accountname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_ = GOOGLE_ULONGLONG(0);
}

SealAccountAck::~SealAccountAck() {
  // @@protoc_insertion_point(destructor:SealAccountAck)
  SharedDtor();
}

void SealAccountAck::SharedDtor() {
  accountname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SealAccountAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SealAccountAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SealAccountAck_descriptor_;
}

const SealAccountAck& SealAccountAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SealAccountAck* SealAccountAck::default_instance_ = NULL;

SealAccountAck* SealAccountAck::New(::google::protobuf::Arena* arena) const {
  SealAccountAck* n = new SealAccountAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SealAccountAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SealAccountAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SealAccountAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SealAccountAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, retcode_);
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SealAccountAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SealAccountAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_AccountName;
        break;
      }

      // optional string AccountName = 2;
      case 2: {
        if (tag == 18) {
         parse_AccountName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_accountname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->accountname().data(), this->accountname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SealAccountAck.AccountName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_AccountID;
        break;
      }

      // optional uint64 AccountID = 3;
      case 3: {
        if (tag == 24) {
         parse_AccountID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SealAccountAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SealAccountAck)
  return false;
#undef DO_
}

void SealAccountAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SealAccountAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional string AccountName = 2;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SealAccountAck.AccountName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->accountname(), output);
  }

  // optional uint64 AccountID = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->accountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:SealAccountAck)
}

::google::protobuf::uint8* SealAccountAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SealAccountAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional string AccountName = 2;
  if (this->accountname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->accountname().data(), this->accountname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SealAccountAck.AccountName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->accountname(), target);
  }

  // optional uint64 AccountID = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->accountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SealAccountAck)
  return target;
}

int SealAccountAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SealAccountAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional string AccountName = 2;
  if (this->accountname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->accountname());
  }

  // optional uint64 AccountID = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SealAccountAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SealAccountAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SealAccountAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SealAccountAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SealAccountAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SealAccountAck)
    MergeFrom(*source);
  }
}

void SealAccountAck::MergeFrom(const SealAccountAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SealAccountAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.accountname().size() > 0) {

    accountname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.accountname_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void SealAccountAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SealAccountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SealAccountAck::CopyFrom(const SealAccountAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SealAccountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SealAccountAck::IsInitialized() const {

  return true;
}

void SealAccountAck::Swap(SealAccountAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SealAccountAck::InternalSwap(SealAccountAck* other) {
  std::swap(retcode_, other->retcode_);
  accountname_.Swap(&other->accountname_);
  std::swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SealAccountAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SealAccountAck_descriptor_;
  metadata.reflection = SealAccountAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SealAccountAck

// optional uint32 RetCode = 1;
void SealAccountAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 SealAccountAck::retcode() const {
  // @@protoc_insertion_point(field_get:SealAccountAck.RetCode)
  return retcode_;
}
 void SealAccountAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SealAccountAck.RetCode)
}

// optional string AccountName = 2;
void SealAccountAck::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SealAccountAck::accountname() const {
  // @@protoc_insertion_point(field_get:SealAccountAck.AccountName)
  return accountname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SealAccountAck::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SealAccountAck.AccountName)
}
 void SealAccountAck::set_accountname(const char* value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SealAccountAck.AccountName)
}
 void SealAccountAck::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SealAccountAck.AccountName)
}
 ::std::string* SealAccountAck::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:SealAccountAck.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SealAccountAck::release_accountname() {
  // @@protoc_insertion_point(field_release:SealAccountAck.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SealAccountAck::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:SealAccountAck.AccountName)
}

// optional uint64 AccountID = 3;
void SealAccountAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SealAccountAck::accountid() const {
  // @@protoc_insertion_point(field_get:SealAccountAck.AccountID)
  return accountid_;
}
 void SealAccountAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:SealAccountAck.AccountID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetLastServerNty::kAccountIDFieldNumber;
const int SetLastServerNty::kServerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetLastServerNty::SetLastServerNty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetLastServerNty)
}

void SetLastServerNty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetLastServerNty::SetLastServerNty(const SetLastServerNty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetLastServerNty)
}

void SetLastServerNty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  accountid_ = GOOGLE_ULONGLONG(0);
  serverid_ = 0;
}

SetLastServerNty::~SetLastServerNty() {
  // @@protoc_insertion_point(destructor:SetLastServerNty)
  SharedDtor();
}

void SetLastServerNty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetLastServerNty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLastServerNty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLastServerNty_descriptor_;
}

const SetLastServerNty& SetLastServerNty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetLastServerNty* SetLastServerNty::default_instance_ = NULL;

SetLastServerNty* SetLastServerNty::New(::google::protobuf::Arena* arena) const {
  SetLastServerNty* n = new SetLastServerNty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetLastServerNty::Clear() {
// @@protoc_insertion_point(message_clear_start:SetLastServerNty)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SetLastServerNty, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SetLastServerNty*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(accountid_, serverid_);

#undef ZR_HELPER_
#undef ZR_

}

bool SetLastServerNty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetLastServerNty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 AccountID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ServerID;
        break;
      }

      // optional int32 ServerID = 2;
      case 2: {
        if (tag == 16) {
         parse_ServerID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetLastServerNty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetLastServerNty)
  return false;
#undef DO_
}

void SetLastServerNty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetLastServerNty)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // optional int32 ServerID = 2;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serverid(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetLastServerNty)
}

::google::protobuf::uint8* SetLastServerNty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetLastServerNty)
  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // optional int32 ServerID = 2;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serverid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetLastServerNty)
  return target;
}

int SetLastServerNty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetLastServerNty)
  int total_size = 0;

  // optional uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // optional int32 ServerID = 2;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetLastServerNty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetLastServerNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetLastServerNty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetLastServerNty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetLastServerNty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetLastServerNty)
    MergeFrom(*source);
  }
}

void SetLastServerNty::MergeFrom(const SetLastServerNty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetLastServerNty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void SetLastServerNty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetLastServerNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLastServerNty::CopyFrom(const SetLastServerNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetLastServerNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLastServerNty::IsInitialized() const {

  return true;
}

void SetLastServerNty::Swap(SetLastServerNty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetLastServerNty::InternalSwap(SetLastServerNty* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetLastServerNty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetLastServerNty_descriptor_;
  metadata.reflection = SetLastServerNty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetLastServerNty

// optional uint64 AccountID = 1;
void SetLastServerNty::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SetLastServerNty::accountid() const {
  // @@protoc_insertion_point(field_get:SetLastServerNty.AccountID)
  return accountid_;
}
 void SetLastServerNty::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:SetLastServerNty.AccountID)
}

// optional int32 ServerID = 2;
void SetLastServerNty::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 SetLastServerNty::serverid() const {
  // @@protoc_insertion_point(field_get:SetLastServerNty.ServerID)
  return serverid_;
}
 void SetLastServerNty::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:SetLastServerNty.ServerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonReq::kParam1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonReq::CommonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommonReq)
}

void CommonReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CommonReq::CommonReq(const CommonReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CommonReq)
}

void CommonReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  param1_ = 0u;
}

CommonReq::~CommonReq() {
  // @@protoc_insertion_point(destructor:CommonReq)
  SharedDtor();
}

void CommonReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CommonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommonReq_descriptor_;
}

const CommonReq& CommonReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

CommonReq* CommonReq::default_instance_ = NULL;

CommonReq* CommonReq::New(::google::protobuf::Arena* arena) const {
  CommonReq* n = new CommonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CommonReq)
  param1_ = 0u;
}

bool CommonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Param1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommonReq)
  return false;
#undef DO_
}

void CommonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommonReq)
  // optional uint32 Param1 = 1;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->param1(), output);
  }

  // @@protoc_insertion_point(serialize_end:CommonReq)
}

::google::protobuf::uint8* CommonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CommonReq)
  // optional uint32 Param1 = 1;
  if (this->param1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->param1(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CommonReq)
  return target;
}

int CommonReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CommonReq)
  int total_size = 0;

  // optional uint32 Param1 = 1;
  if (this->param1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param1());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CommonReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CommonReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CommonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CommonReq)
    MergeFrom(*source);
  }
}

void CommonReq::MergeFrom(const CommonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommonReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.param1() != 0) {
    set_param1(from.param1());
  }
}

void CommonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CommonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonReq::CopyFrom(const CommonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonReq::IsInitialized() const {

  return true;
}

void CommonReq::Swap(CommonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonReq::InternalSwap(CommonReq* other) {
  std::swap(param1_, other->param1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommonReq_descriptor_;
  metadata.reflection = CommonReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommonReq

// optional uint32 Param1 = 1;
void CommonReq::clear_param1() {
  param1_ = 0u;
}
 ::google::protobuf::uint32 CommonReq::param1() const {
  // @@protoc_insertion_point(field_get:CommonReq.Param1)
  return param1_;
}
 void CommonReq::set_param1(::google::protobuf::uint32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:CommonReq.Param1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommonAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommonAck::CommonAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CommonAck)
}

void CommonAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CommonAck::CommonAck(const CommonAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CommonAck)
}

void CommonAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

CommonAck::~CommonAck() {
  // @@protoc_insertion_point(destructor:CommonAck)
  SharedDtor();
}

void CommonAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CommonAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommonAck_descriptor_;
}

const CommonAck& CommonAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

CommonAck* CommonAck::default_instance_ = NULL;

CommonAck* CommonAck::New(::google::protobuf::Arena* arena) const {
  CommonAck* n = new CommonAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommonAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CommonAck)
  retcode_ = 0u;
}

bool CommonAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CommonAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CommonAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CommonAck)
  return false;
#undef DO_
}

void CommonAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CommonAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:CommonAck)
}

::google::protobuf::uint8* CommonAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CommonAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:CommonAck)
  return target;
}

int CommonAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CommonAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CommonAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CommonAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CommonAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CommonAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CommonAck)
    MergeFrom(*source);
  }
}

void CommonAck::MergeFrom(const CommonAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CommonAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void CommonAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CommonAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonAck::CopyFrom(const CommonAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CommonAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonAck::IsInitialized() const {

  return true;
}

void CommonAck::Swap(CommonAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonAck::InternalSwap(CommonAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommonAck_descriptor_;
  metadata.reflection = CommonAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommonAck

// optional uint32 RetCode = 1;
void CommonAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 CommonAck::retcode() const {
  // @@protoc_insertion_point(field_get:CommonAck.RetCode)
  return retcode_;
}
 void CommonAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:CommonAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BroadMessageNotify::kMsgIDFieldNumber;
const int BroadMessageNotify::kConnIDFieldNumber;
const int BroadMessageNotify::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BroadMessageNotify::BroadMessageNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BroadMessageNotify)
}

void BroadMessageNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BroadMessageNotify::BroadMessageNotify(const BroadMessageNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BroadMessageNotify)
}

void BroadMessageNotify::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgid_ = 0u;
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BroadMessageNotify::~BroadMessageNotify() {
  // @@protoc_insertion_point(destructor:BroadMessageNotify)
  SharedDtor();
}

void BroadMessageNotify::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BroadMessageNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BroadMessageNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BroadMessageNotify_descriptor_;
}

const BroadMessageNotify& BroadMessageNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

BroadMessageNotify* BroadMessageNotify::default_instance_ = NULL;

BroadMessageNotify* BroadMessageNotify::New(::google::protobuf::Arena* arena) const {
  BroadMessageNotify* n = new BroadMessageNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BroadMessageNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:BroadMessageNotify)
  msgid_ = 0u;
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  connid_.Clear();
}

bool BroadMessageNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BroadMessageNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MsgID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ConnID;
        break;
      }

      // repeated uint32 ConnID = 2;
      case 2: {
        if (tag == 18) {
         parse_ConnID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_connid())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_connid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_MsgData;
        break;
      }

      // optional bytes MsgData = 3;
      case 3: {
        if (tag == 26) {
         parse_MsgData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BroadMessageNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BroadMessageNotify)
  return false;
#undef DO_
}

void BroadMessageNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BroadMessageNotify)
  // optional uint32 MsgID = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // repeated uint32 ConnID = 2;
  if (this->connid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_connid_cached_byte_size_);
  }
  for (int i = 0; i < this->connid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->connid(i), output);
  }

  // optional bytes MsgData = 3;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msgdata(), output);
  }

  // @@protoc_insertion_point(serialize_end:BroadMessageNotify)
}

::google::protobuf::uint8* BroadMessageNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BroadMessageNotify)
  // optional uint32 MsgID = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // repeated uint32 ConnID = 2;
  if (this->connid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _connid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->connid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->connid(i), target);
  }

  // optional bytes MsgData = 3;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msgdata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:BroadMessageNotify)
  return target;
}

int BroadMessageNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:BroadMessageNotify)
  int total_size = 0;

  // optional uint32 MsgID = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // optional bytes MsgData = 3;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // repeated uint32 ConnID = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->connid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->connid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _connid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BroadMessageNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BroadMessageNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BroadMessageNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BroadMessageNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BroadMessageNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BroadMessageNotify)
    MergeFrom(*source);
  }
}

void BroadMessageNotify::MergeFrom(const BroadMessageNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BroadMessageNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  connid_.MergeFrom(from.connid_);
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
}

void BroadMessageNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BroadMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BroadMessageNotify::CopyFrom(const BroadMessageNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BroadMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadMessageNotify::IsInitialized() const {

  return true;
}

void BroadMessageNotify::Swap(BroadMessageNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BroadMessageNotify::InternalSwap(BroadMessageNotify* other) {
  std::swap(msgid_, other->msgid_);
  connid_.UnsafeArenaSwap(&other->connid_);
  msgdata_.Swap(&other->msgdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BroadMessageNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BroadMessageNotify_descriptor_;
  metadata.reflection = BroadMessageNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BroadMessageNotify

// optional uint32 MsgID = 1;
void BroadMessageNotify::clear_msgid() {
  msgid_ = 0u;
}
 ::google::protobuf::uint32 BroadMessageNotify::msgid() const {
  // @@protoc_insertion_point(field_get:BroadMessageNotify.MsgID)
  return msgid_;
}
 void BroadMessageNotify::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:BroadMessageNotify.MsgID)
}

// repeated uint32 ConnID = 2;
int BroadMessageNotify::connid_size() const {
  return connid_.size();
}
void BroadMessageNotify::clear_connid() {
  connid_.Clear();
}
 ::google::protobuf::uint32 BroadMessageNotify::connid(int index) const {
  // @@protoc_insertion_point(field_get:BroadMessageNotify.ConnID)
  return connid_.Get(index);
}
 void BroadMessageNotify::set_connid(int index, ::google::protobuf::uint32 value) {
  connid_.Set(index, value);
  // @@protoc_insertion_point(field_set:BroadMessageNotify.ConnID)
}
 void BroadMessageNotify::add_connid(::google::protobuf::uint32 value) {
  connid_.Add(value);
  // @@protoc_insertion_point(field_add:BroadMessageNotify.ConnID)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BroadMessageNotify::connid() const {
  // @@protoc_insertion_point(field_list:BroadMessageNotify.ConnID)
  return connid_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BroadMessageNotify::mutable_connid() {
  // @@protoc_insertion_point(field_mutable_list:BroadMessageNotify.ConnID)
  return &connid_;
}

// optional bytes MsgData = 3;
void BroadMessageNotify::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BroadMessageNotify::msgdata() const {
  // @@protoc_insertion_point(field_get:BroadMessageNotify.MsgData)
  return msgdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadMessageNotify::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BroadMessageNotify.MsgData)
}
 void BroadMessageNotify::set_msgdata(const char* value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BroadMessageNotify.MsgData)
}
 void BroadMessageNotify::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BroadMessageNotify.MsgData)
}
 ::std::string* BroadMessageNotify::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:BroadMessageNotify.MsgData)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BroadMessageNotify::release_msgdata() {
  // @@protoc_insertion_point(field_release:BroadMessageNotify.MsgData)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BroadMessageNotify::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:BroadMessageNotify.MsgData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicRegToLoginReq::kServerIDFieldNumber;
const int LogicRegToLoginReq::kServerNameFieldNumber;
const int LogicRegToLoginReq::kSvrInnerIpFieldNumber;
const int LogicRegToLoginReq::kServerPortFieldNumber;
const int LogicRegToLoginReq::kHttpPortFieldNumber;
const int LogicRegToLoginReq::kWatchPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicRegToLoginReq::LogicRegToLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicRegToLoginReq)
}

void LogicRegToLoginReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LogicRegToLoginReq::LogicRegToLoginReq(const LogicRegToLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LogicRegToLoginReq)
}

void LogicRegToLoginReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  serverid_ = 0;
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svrinnerip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverport_ = 0;
  httpport_ = 0;
  watchport_ = 0;
}

LogicRegToLoginReq::~LogicRegToLoginReq() {
  // @@protoc_insertion_point(destructor:LogicRegToLoginReq)
  SharedDtor();
}

void LogicRegToLoginReq::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svrinnerip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LogicRegToLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicRegToLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogicRegToLoginReq_descriptor_;
}

const LogicRegToLoginReq& LogicRegToLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

LogicRegToLoginReq* LogicRegToLoginReq::default_instance_ = NULL;

LogicRegToLoginReq* LogicRegToLoginReq::New(::google::protobuf::Arena* arena) const {
  LogicRegToLoginReq* n = new LogicRegToLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicRegToLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LogicRegToLoginReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LogicRegToLoginReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LogicRegToLoginReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(serverid_, serverport_);
  ZR_(httpport_, watchport_);
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svrinnerip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool LogicRegToLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicRegToLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ServerID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ServerName;
        break;
      }

      // optional string ServerName = 2;
      case 2: {
        if (tag == 18) {
         parse_ServerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), this->servername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogicRegToLoginReq.ServerName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_SvrInnerIp;
        break;
      }

      // optional string SvrInnerIp = 3;
      case 3: {
        if (tag == 26) {
         parse_SvrInnerIp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_svrinnerip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->svrinnerip().data(), this->svrinnerip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogicRegToLoginReq.SvrInnerIp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_ServerPort;
        break;
      }

      // optional int32 ServerPort = 4;
      case 4: {
        if (tag == 32) {
         parse_ServerPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_HttpPort;
        break;
      }

      // optional int32 HttpPort = 5;
      case 5: {
        if (tag == 40) {
         parse_HttpPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &httpport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_WatchPort;
        break;
      }

      // optional int32 WatchPort = 6;
      case 6: {
        if (tag == 48) {
         parse_WatchPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &watchport_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicRegToLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicRegToLoginReq)
  return false;
#undef DO_
}

void LogicRegToLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicRegToLoginReq)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // optional string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginReq.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // optional string SvrInnerIp = 3;
  if (this->svrinnerip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrinnerip().data(), this->svrinnerip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginReq.SvrInnerIp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->svrinnerip(), output);
  }

  // optional int32 ServerPort = 4;
  if (this->serverport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serverport(), output);
  }

  // optional int32 HttpPort = 5;
  if (this->httpport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->httpport(), output);
  }

  // optional int32 WatchPort = 6;
  if (this->watchport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->watchport(), output);
  }

  // @@protoc_insertion_point(serialize_end:LogicRegToLoginReq)
}

::google::protobuf::uint8* LogicRegToLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogicRegToLoginReq)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // optional string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginReq.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // optional string SvrInnerIp = 3;
  if (this->svrinnerip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->svrinnerip().data(), this->svrinnerip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginReq.SvrInnerIp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->svrinnerip(), target);
  }

  // optional int32 ServerPort = 4;
  if (this->serverport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serverport(), target);
  }

  // optional int32 HttpPort = 5;
  if (this->httpport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->httpport(), target);
  }

  // optional int32 WatchPort = 6;
  if (this->watchport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->watchport(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LogicRegToLoginReq)
  return target;
}

int LogicRegToLoginReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:LogicRegToLoginReq)
  int total_size = 0;

  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // optional string ServerName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // optional string SvrInnerIp = 3;
  if (this->svrinnerip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->svrinnerip());
  }

  // optional int32 ServerPort = 4;
  if (this->serverport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverport());
  }

  // optional int32 HttpPort = 5;
  if (this->httpport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->httpport());
  }

  // optional int32 WatchPort = 6;
  if (this->watchport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->watchport());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicRegToLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogicRegToLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LogicRegToLoginReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicRegToLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogicRegToLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogicRegToLoginReq)
    MergeFrom(*source);
  }
}

void LogicRegToLoginReq::MergeFrom(const LogicRegToLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogicRegToLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.svrinnerip().size() > 0) {

    svrinnerip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.svrinnerip_);
  }
  if (from.serverport() != 0) {
    set_serverport(from.serverport());
  }
  if (from.httpport() != 0) {
    set_httpport(from.httpport());
  }
  if (from.watchport() != 0) {
    set_watchport(from.watchport());
  }
}

void LogicRegToLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogicRegToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicRegToLoginReq::CopyFrom(const LogicRegToLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogicRegToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicRegToLoginReq::IsInitialized() const {

  return true;
}

void LogicRegToLoginReq::Swap(LogicRegToLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicRegToLoginReq::InternalSwap(LogicRegToLoginReq* other) {
  std::swap(serverid_, other->serverid_);
  servername_.Swap(&other->servername_);
  svrinnerip_.Swap(&other->svrinnerip_);
  std::swap(serverport_, other->serverport_);
  std::swap(httpport_, other->httpport_);
  std::swap(watchport_, other->watchport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicRegToLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogicRegToLoginReq_descriptor_;
  metadata.reflection = LogicRegToLoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogicRegToLoginReq

// optional int32 ServerID = 1;
void LogicRegToLoginReq::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 LogicRegToLoginReq::serverid() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.ServerID)
  return serverid_;
}
 void LogicRegToLoginReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.ServerID)
}

// optional string ServerName = 2;
void LogicRegToLoginReq::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LogicRegToLoginReq::servername() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.ServerName)
  return servername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicRegToLoginReq::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.ServerName)
}
 void LogicRegToLoginReq::set_servername(const char* value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LogicRegToLoginReq.ServerName)
}
 void LogicRegToLoginReq::set_servername(const char* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LogicRegToLoginReq.ServerName)
}
 ::std::string* LogicRegToLoginReq::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:LogicRegToLoginReq.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogicRegToLoginReq::release_servername() {
  // @@protoc_insertion_point(field_release:LogicRegToLoginReq.ServerName)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicRegToLoginReq::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:LogicRegToLoginReq.ServerName)
}

// optional string SvrInnerIp = 3;
void LogicRegToLoginReq::clear_svrinnerip() {
  svrinnerip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LogicRegToLoginReq::svrinnerip() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.SvrInnerIp)
  return svrinnerip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicRegToLoginReq::set_svrinnerip(const ::std::string& value) {
  
  svrinnerip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.SvrInnerIp)
}
 void LogicRegToLoginReq::set_svrinnerip(const char* value) {
  
  svrinnerip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LogicRegToLoginReq.SvrInnerIp)
}
 void LogicRegToLoginReq::set_svrinnerip(const char* value, size_t size) {
  
  svrinnerip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LogicRegToLoginReq.SvrInnerIp)
}
 ::std::string* LogicRegToLoginReq::mutable_svrinnerip() {
  
  // @@protoc_insertion_point(field_mutable:LogicRegToLoginReq.SvrInnerIp)
  return svrinnerip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogicRegToLoginReq::release_svrinnerip() {
  // @@protoc_insertion_point(field_release:LogicRegToLoginReq.SvrInnerIp)
  
  return svrinnerip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicRegToLoginReq::set_allocated_svrinnerip(::std::string* svrinnerip) {
  if (svrinnerip != NULL) {
    
  } else {
    
  }
  svrinnerip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), svrinnerip);
  // @@protoc_insertion_point(field_set_allocated:LogicRegToLoginReq.SvrInnerIp)
}

// optional int32 ServerPort = 4;
void LogicRegToLoginReq::clear_serverport() {
  serverport_ = 0;
}
 ::google::protobuf::int32 LogicRegToLoginReq::serverport() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.ServerPort)
  return serverport_;
}
 void LogicRegToLoginReq::set_serverport(::google::protobuf::int32 value) {
  
  serverport_ = value;
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.ServerPort)
}

// optional int32 HttpPort = 5;
void LogicRegToLoginReq::clear_httpport() {
  httpport_ = 0;
}
 ::google::protobuf::int32 LogicRegToLoginReq::httpport() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.HttpPort)
  return httpport_;
}
 void LogicRegToLoginReq::set_httpport(::google::protobuf::int32 value) {
  
  httpport_ = value;
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.HttpPort)
}

// optional int32 WatchPort = 6;
void LogicRegToLoginReq::clear_watchport() {
  watchport_ = 0;
}
 ::google::protobuf::int32 LogicRegToLoginReq::watchport() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginReq.WatchPort)
  return watchport_;
}
 void LogicRegToLoginReq::set_watchport(::google::protobuf::int32 value) {
  
  watchport_ = value;
  // @@protoc_insertion_point(field_set:LogicRegToLoginReq.WatchPort)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicRegToLoginAck::kRetCodeFieldNumber;
const int LogicRegToLoginAck::kNewSvrNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicRegToLoginAck::LogicRegToLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicRegToLoginAck)
}

void LogicRegToLoginAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LogicRegToLoginAck::LogicRegToLoginAck(const LogicRegToLoginAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LogicRegToLoginAck)
}

void LogicRegToLoginAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  retcode_ = 0u;
  newsvrname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LogicRegToLoginAck::~LogicRegToLoginAck() {
  // @@protoc_insertion_point(destructor:LogicRegToLoginAck)
  SharedDtor();
}

void LogicRegToLoginAck::SharedDtor() {
  newsvrname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LogicRegToLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicRegToLoginAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogicRegToLoginAck_descriptor_;
}

const LogicRegToLoginAck& LogicRegToLoginAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

LogicRegToLoginAck* LogicRegToLoginAck::default_instance_ = NULL;

LogicRegToLoginAck* LogicRegToLoginAck::New(::google::protobuf::Arena* arena) const {
  LogicRegToLoginAck* n = new LogicRegToLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicRegToLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:LogicRegToLoginAck)
  retcode_ = 0u;
  newsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LogicRegToLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicRegToLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_NewSvrName;
        break;
      }

      // optional string NewSvrName = 2;
      case 2: {
        if (tag == 18) {
         parse_NewSvrName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newsvrname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newsvrname().data(), this->newsvrname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogicRegToLoginAck.NewSvrName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicRegToLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicRegToLoginAck)
  return false;
#undef DO_
}

void LogicRegToLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicRegToLoginAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsvrname().data(), this->newsvrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginAck.NewSvrName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->newsvrname(), output);
  }

  // @@protoc_insertion_point(serialize_end:LogicRegToLoginAck)
}

::google::protobuf::uint8* LogicRegToLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogicRegToLoginAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newsvrname().data(), this->newsvrname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicRegToLoginAck.NewSvrName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->newsvrname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LogicRegToLoginAck)
  return target;
}

int LogicRegToLoginAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:LogicRegToLoginAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional string NewSvrName = 2;
  if (this->newsvrname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newsvrname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicRegToLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogicRegToLoginAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LogicRegToLoginAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicRegToLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogicRegToLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogicRegToLoginAck)
    MergeFrom(*source);
  }
}

void LogicRegToLoginAck::MergeFrom(const LogicRegToLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogicRegToLoginAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.newsvrname().size() > 0) {

    newsvrname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newsvrname_);
  }
}

void LogicRegToLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogicRegToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicRegToLoginAck::CopyFrom(const LogicRegToLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogicRegToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicRegToLoginAck::IsInitialized() const {

  return true;
}

void LogicRegToLoginAck::Swap(LogicRegToLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicRegToLoginAck::InternalSwap(LogicRegToLoginAck* other) {
  std::swap(retcode_, other->retcode_);
  newsvrname_.Swap(&other->newsvrname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicRegToLoginAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogicRegToLoginAck_descriptor_;
  metadata.reflection = LogicRegToLoginAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogicRegToLoginAck

// optional uint32 RetCode = 1;
void LogicRegToLoginAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 LogicRegToLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginAck.RetCode)
  return retcode_;
}
 void LogicRegToLoginAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:LogicRegToLoginAck.RetCode)
}

// optional string NewSvrName = 2;
void LogicRegToLoginAck::clear_newsvrname() {
  newsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LogicRegToLoginAck::newsvrname() const {
  // @@protoc_insertion_point(field_get:LogicRegToLoginAck.NewSvrName)
  return newsvrname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicRegToLoginAck::set_newsvrname(const ::std::string& value) {
  
  newsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LogicRegToLoginAck.NewSvrName)
}
 void LogicRegToLoginAck::set_newsvrname(const char* value) {
  
  newsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LogicRegToLoginAck.NewSvrName)
}
 void LogicRegToLoginAck::set_newsvrname(const char* value, size_t size) {
  
  newsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LogicRegToLoginAck.NewSvrName)
}
 ::std::string* LogicRegToLoginAck::mutable_newsvrname() {
  
  // @@protoc_insertion_point(field_mutable:LogicRegToLoginAck.NewSvrName)
  return newsvrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogicRegToLoginAck::release_newsvrname() {
  // @@protoc_insertion_point(field_release:LogicRegToLoginAck.NewSvrName)
  
  return newsvrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicRegToLoginAck::set_allocated_newsvrname(::std::string* newsvrname) {
  if (newsvrname != NULL) {
    
  } else {
    
  }
  newsvrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newsvrname);
  // @@protoc_insertion_point(field_set_allocated:LogicRegToLoginAck.NewSvrName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicUpdateInfoReq::kServerIDFieldNumber;
const int LogicUpdateInfoReq::kServerNameFieldNumber;
const int LogicUpdateInfoReq::kMaxOnlineFieldNumber;
const int LogicUpdateInfoReq::kCurOnlineFieldNumber;
const int LogicUpdateInfoReq::kTotalNumFieldNumber;
const int LogicUpdateInfoReq::kCacheNumFieldNumber;
const int LogicUpdateInfoReq::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicUpdateInfoReq::LogicUpdateInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicUpdateInfoReq)
}

void LogicUpdateInfoReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LogicUpdateInfoReq::LogicUpdateInfoReq(const LogicUpdateInfoReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LogicUpdateInfoReq)
}

void LogicUpdateInfoReq::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  serverid_ = 0;
  servername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxonline_ = 0;
  curonline_ = 0;
  totalnum_ = 0;
  cachenum_ = 0;
  status_ = 0;
}

LogicUpdateInfoReq::~LogicUpdateInfoReq() {
  // @@protoc_insertion_point(destructor:LogicUpdateInfoReq)
  SharedDtor();
}

void LogicUpdateInfoReq::SharedDtor() {
  servername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LogicUpdateInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicUpdateInfoReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogicUpdateInfoReq_descriptor_;
}

const LogicUpdateInfoReq& LogicUpdateInfoReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

LogicUpdateInfoReq* LogicUpdateInfoReq::default_instance_ = NULL;

LogicUpdateInfoReq* LogicUpdateInfoReq::New(::google::protobuf::Arena* arena) const {
  LogicUpdateInfoReq* n = new LogicUpdateInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicUpdateInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:LogicUpdateInfoReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LogicUpdateInfoReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LogicUpdateInfoReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(serverid_, status_);
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool LogicUpdateInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicUpdateInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ServerID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serverid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ServerName;
        break;
      }

      // optional string ServerName = 2;
      case 2: {
        if (tag == 18) {
         parse_ServerName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servername().data(), this->servername().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LogicUpdateInfoReq.ServerName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MaxOnline;
        break;
      }

      // optional int32 MaxOnline = 3;
      case 3: {
        if (tag == 24) {
         parse_MaxOnline:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxonline_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_CurOnline;
        break;
      }

      // optional int32 CurOnline = 4;
      case 4: {
        if (tag == 32) {
         parse_CurOnline:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curonline_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_TotalNum;
        break;
      }

      // optional int32 TotalNum = 5;
      case 5: {
        if (tag == 40) {
         parse_TotalNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_CacheNum;
        break;
      }

      // optional int32 CacheNum = 6;
      case 6: {
        if (tag == 48) {
         parse_CacheNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cachenum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_Status;
        break;
      }

      // optional int32 Status = 7;
      case 7: {
        if (tag == 56) {
         parse_Status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicUpdateInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicUpdateInfoReq)
  return false;
#undef DO_
}

void LogicUpdateInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicUpdateInfoReq)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->serverid(), output);
  }

  // optional string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicUpdateInfoReq.ServerName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->servername(), output);
  }

  // optional int32 MaxOnline = 3;
  if (this->maxonline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxonline(), output);
  }

  // optional int32 CurOnline = 4;
  if (this->curonline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->curonline(), output);
  }

  // optional int32 TotalNum = 5;
  if (this->totalnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->totalnum(), output);
  }

  // optional int32 CacheNum = 6;
  if (this->cachenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cachenum(), output);
  }

  // optional int32 Status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:LogicUpdateInfoReq)
}

::google::protobuf::uint8* LogicUpdateInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogicUpdateInfoReq)
  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->serverid(), target);
  }

  // optional string ServerName = 2;
  if (this->servername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servername().data(), this->servername().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LogicUpdateInfoReq.ServerName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->servername(), target);
  }

  // optional int32 MaxOnline = 3;
  if (this->maxonline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxonline(), target);
  }

  // optional int32 CurOnline = 4;
  if (this->curonline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->curonline(), target);
  }

  // optional int32 TotalNum = 5;
  if (this->totalnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->totalnum(), target);
  }

  // optional int32 CacheNum = 6;
  if (this->cachenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cachenum(), target);
  }

  // optional int32 Status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LogicUpdateInfoReq)
  return target;
}

int LogicUpdateInfoReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:LogicUpdateInfoReq)
  int total_size = 0;

  // optional int32 ServerID = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serverid());
  }

  // optional string ServerName = 2;
  if (this->servername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servername());
  }

  // optional int32 MaxOnline = 3;
  if (this->maxonline() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxonline());
  }

  // optional int32 CurOnline = 4;
  if (this->curonline() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->curonline());
  }

  // optional int32 TotalNum = 5;
  if (this->totalnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->totalnum());
  }

  // optional int32 CacheNum = 6;
  if (this->cachenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cachenum());
  }

  // optional int32 Status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicUpdateInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogicUpdateInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LogicUpdateInfoReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicUpdateInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogicUpdateInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogicUpdateInfoReq)
    MergeFrom(*source);
  }
}

void LogicUpdateInfoReq::MergeFrom(const LogicUpdateInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogicUpdateInfoReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.servername().size() > 0) {

    servername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servername_);
  }
  if (from.maxonline() != 0) {
    set_maxonline(from.maxonline());
  }
  if (from.curonline() != 0) {
    set_curonline(from.curonline());
  }
  if (from.totalnum() != 0) {
    set_totalnum(from.totalnum());
  }
  if (from.cachenum() != 0) {
    set_cachenum(from.cachenum());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void LogicUpdateInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogicUpdateInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicUpdateInfoReq::CopyFrom(const LogicUpdateInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogicUpdateInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicUpdateInfoReq::IsInitialized() const {

  return true;
}

void LogicUpdateInfoReq::Swap(LogicUpdateInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicUpdateInfoReq::InternalSwap(LogicUpdateInfoReq* other) {
  std::swap(serverid_, other->serverid_);
  servername_.Swap(&other->servername_);
  std::swap(maxonline_, other->maxonline_);
  std::swap(curonline_, other->curonline_);
  std::swap(totalnum_, other->totalnum_);
  std::swap(cachenum_, other->cachenum_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicUpdateInfoReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogicUpdateInfoReq_descriptor_;
  metadata.reflection = LogicUpdateInfoReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogicUpdateInfoReq

// optional int32 ServerID = 1;
void LogicUpdateInfoReq::clear_serverid() {
  serverid_ = 0;
}
 ::google::protobuf::int32 LogicUpdateInfoReq::serverid() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.ServerID)
  return serverid_;
}
 void LogicUpdateInfoReq::set_serverid(::google::protobuf::int32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.ServerID)
}

// optional string ServerName = 2;
void LogicUpdateInfoReq::clear_servername() {
  servername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& LogicUpdateInfoReq::servername() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.ServerName)
  return servername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicUpdateInfoReq::set_servername(const ::std::string& value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.ServerName)
}
 void LogicUpdateInfoReq::set_servername(const char* value) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LogicUpdateInfoReq.ServerName)
}
 void LogicUpdateInfoReq::set_servername(const char* value, size_t size) {
  
  servername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LogicUpdateInfoReq.ServerName)
}
 ::std::string* LogicUpdateInfoReq::mutable_servername() {
  
  // @@protoc_insertion_point(field_mutable:LogicUpdateInfoReq.ServerName)
  return servername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogicUpdateInfoReq::release_servername() {
  // @@protoc_insertion_point(field_release:LogicUpdateInfoReq.ServerName)
  
  return servername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicUpdateInfoReq::set_allocated_servername(::std::string* servername) {
  if (servername != NULL) {
    
  } else {
    
  }
  servername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), servername);
  // @@protoc_insertion_point(field_set_allocated:LogicUpdateInfoReq.ServerName)
}

// optional int32 MaxOnline = 3;
void LogicUpdateInfoReq::clear_maxonline() {
  maxonline_ = 0;
}
 ::google::protobuf::int32 LogicUpdateInfoReq::maxonline() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.MaxOnline)
  return maxonline_;
}
 void LogicUpdateInfoReq::set_maxonline(::google::protobuf::int32 value) {
  
  maxonline_ = value;
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.MaxOnline)
}

// optional int32 CurOnline = 4;
void LogicUpdateInfoReq::clear_curonline() {
  curonline_ = 0;
}
 ::google::protobuf::int32 LogicUpdateInfoReq::curonline() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.CurOnline)
  return curonline_;
}
 void LogicUpdateInfoReq::set_curonline(::google::protobuf::int32 value) {
  
  curonline_ = value;
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.CurOnline)
}

// optional int32 TotalNum = 5;
void LogicUpdateInfoReq::clear_totalnum() {
  totalnum_ = 0;
}
 ::google::protobuf::int32 LogicUpdateInfoReq::totalnum() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.TotalNum)
  return totalnum_;
}
 void LogicUpdateInfoReq::set_totalnum(::google::protobuf::int32 value) {
  
  totalnum_ = value;
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.TotalNum)
}

// optional int32 CacheNum = 6;
void LogicUpdateInfoReq::clear_cachenum() {
  cachenum_ = 0;
}
 ::google::protobuf::int32 LogicUpdateInfoReq::cachenum() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.CacheNum)
  return cachenum_;
}
 void LogicUpdateInfoReq::set_cachenum(::google::protobuf::int32 value) {
  
  cachenum_ = value;
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.CacheNum)
}

// optional int32 Status = 7;
void LogicUpdateInfoReq::clear_status() {
  status_ = 0;
}
 ::google::protobuf::int32 LogicUpdateInfoReq::status() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoReq.Status)
  return status_;
}
 void LogicUpdateInfoReq::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:LogicUpdateInfoReq.Status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogicUpdateInfoAck::kRetCodeFieldNumber;
const int LogicUpdateInfoAck::kSvrOpenTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogicUpdateInfoAck::LogicUpdateInfoAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicUpdateInfoAck)
}

void LogicUpdateInfoAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

LogicUpdateInfoAck::LogicUpdateInfoAck(const LogicUpdateInfoAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LogicUpdateInfoAck)
}

void LogicUpdateInfoAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  svropentime_ = GOOGLE_ULONGLONG(0);
}

LogicUpdateInfoAck::~LogicUpdateInfoAck() {
  // @@protoc_insertion_point(destructor:LogicUpdateInfoAck)
  SharedDtor();
}

void LogicUpdateInfoAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LogicUpdateInfoAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicUpdateInfoAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogicUpdateInfoAck_descriptor_;
}

const LogicUpdateInfoAck& LogicUpdateInfoAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

LogicUpdateInfoAck* LogicUpdateInfoAck::default_instance_ = NULL;

LogicUpdateInfoAck* LogicUpdateInfoAck::New(::google::protobuf::Arena* arena) const {
  LogicUpdateInfoAck* n = new LogicUpdateInfoAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicUpdateInfoAck::Clear() {
// @@protoc_insertion_point(message_clear_start:LogicUpdateInfoAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LogicUpdateInfoAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LogicUpdateInfoAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(svropentime_, retcode_);

#undef ZR_HELPER_
#undef ZR_

}

bool LogicUpdateInfoAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicUpdateInfoAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_SvrOpenTime;
        break;
      }

      // optional uint64 SvrOpenTime = 2;
      case 2: {
        if (tag == 16) {
         parse_SvrOpenTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &svropentime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicUpdateInfoAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicUpdateInfoAck)
  return false;
#undef DO_
}

void LogicUpdateInfoAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicUpdateInfoAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint64 SvrOpenTime = 2;
  if (this->svropentime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->svropentime(), output);
  }

  // @@protoc_insertion_point(serialize_end:LogicUpdateInfoAck)
}

::google::protobuf::uint8* LogicUpdateInfoAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LogicUpdateInfoAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint64 SvrOpenTime = 2;
  if (this->svropentime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->svropentime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:LogicUpdateInfoAck)
  return target;
}

int LogicUpdateInfoAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:LogicUpdateInfoAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint64 SvrOpenTime = 2;
  if (this->svropentime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->svropentime());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicUpdateInfoAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LogicUpdateInfoAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const LogicUpdateInfoAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicUpdateInfoAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LogicUpdateInfoAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LogicUpdateInfoAck)
    MergeFrom(*source);
  }
}

void LogicUpdateInfoAck::MergeFrom(const LogicUpdateInfoAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LogicUpdateInfoAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.svropentime() != 0) {
    set_svropentime(from.svropentime());
  }
}

void LogicUpdateInfoAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LogicUpdateInfoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicUpdateInfoAck::CopyFrom(const LogicUpdateInfoAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LogicUpdateInfoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicUpdateInfoAck::IsInitialized() const {

  return true;
}

void LogicUpdateInfoAck::Swap(LogicUpdateInfoAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicUpdateInfoAck::InternalSwap(LogicUpdateInfoAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(svropentime_, other->svropentime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicUpdateInfoAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogicUpdateInfoAck_descriptor_;
  metadata.reflection = LogicUpdateInfoAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogicUpdateInfoAck

// optional uint32 RetCode = 1;
void LogicUpdateInfoAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 LogicUpdateInfoAck::retcode() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoAck.RetCode)
  return retcode_;
}
 void LogicUpdateInfoAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:LogicUpdateInfoAck.RetCode)
}

// optional uint64 SvrOpenTime = 2;
void LogicUpdateInfoAck::clear_svropentime() {
  svropentime_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 LogicUpdateInfoAck::svropentime() const {
  // @@protoc_insertion_point(field_get:LogicUpdateInfoAck.SvrOpenTime)
  return svropentime_;
}
 void LogicUpdateInfoAck::set_svropentime(::google::protobuf::uint64 value) {
  
  svropentime_ = value;
  // @@protoc_insertion_point(field_set:LogicUpdateInfoAck.SvrOpenTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchHeartBeatReq::kDataFieldNumber;
const int WatchHeartBeatReq::kProcessIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchHeartBeatReq::WatchHeartBeatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WatchHeartBeatReq)
}

void WatchHeartBeatReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WatchHeartBeatReq::WatchHeartBeatReq(const WatchHeartBeatReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WatchHeartBeatReq)
}

void WatchHeartBeatReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  data_ = 0u;
  processid_ = GOOGLE_ULONGLONG(0);
}

WatchHeartBeatReq::~WatchHeartBeatReq() {
  // @@protoc_insertion_point(destructor:WatchHeartBeatReq)
  SharedDtor();
}

void WatchHeartBeatReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WatchHeartBeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchHeartBeatReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WatchHeartBeatReq_descriptor_;
}

const WatchHeartBeatReq& WatchHeartBeatReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

WatchHeartBeatReq* WatchHeartBeatReq::default_instance_ = NULL;

WatchHeartBeatReq* WatchHeartBeatReq::New(::google::protobuf::Arena* arena) const {
  WatchHeartBeatReq* n = new WatchHeartBeatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchHeartBeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:WatchHeartBeatReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WatchHeartBeatReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WatchHeartBeatReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(processid_, data_);

#undef ZR_HELPER_
#undef ZR_

}

bool WatchHeartBeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WatchHeartBeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ProcessID;
        break;
      }

      // optional uint64 ProcessID = 2;
      case 2: {
        if (tag == 16) {
         parse_ProcessID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &processid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WatchHeartBeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WatchHeartBeatReq)
  return false;
#undef DO_
}

void WatchHeartBeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WatchHeartBeatReq)
  // optional uint32 Data = 1;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data(), output);
  }

  // optional uint64 ProcessID = 2;
  if (this->processid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->processid(), output);
  }

  // @@protoc_insertion_point(serialize_end:WatchHeartBeatReq)
}

::google::protobuf::uint8* WatchHeartBeatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WatchHeartBeatReq)
  // optional uint32 Data = 1;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data(), target);
  }

  // optional uint64 ProcessID = 2;
  if (this->processid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->processid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:WatchHeartBeatReq)
  return target;
}

int WatchHeartBeatReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:WatchHeartBeatReq)
  int total_size = 0;

  // optional uint32 Data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  // optional uint64 ProcessID = 2;
  if (this->processid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->processid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchHeartBeatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WatchHeartBeatReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WatchHeartBeatReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchHeartBeatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WatchHeartBeatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WatchHeartBeatReq)
    MergeFrom(*source);
  }
}

void WatchHeartBeatReq::MergeFrom(const WatchHeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WatchHeartBeatReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
  if (from.processid() != 0) {
    set_processid(from.processid());
  }
}

void WatchHeartBeatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WatchHeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchHeartBeatReq::CopyFrom(const WatchHeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WatchHeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchHeartBeatReq::IsInitialized() const {

  return true;
}

void WatchHeartBeatReq::Swap(WatchHeartBeatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchHeartBeatReq::InternalSwap(WatchHeartBeatReq* other) {
  std::swap(data_, other->data_);
  std::swap(processid_, other->processid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchHeartBeatReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WatchHeartBeatReq_descriptor_;
  metadata.reflection = WatchHeartBeatReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WatchHeartBeatReq

// optional uint32 Data = 1;
void WatchHeartBeatReq::clear_data() {
  data_ = 0u;
}
 ::google::protobuf::uint32 WatchHeartBeatReq::data() const {
  // @@protoc_insertion_point(field_get:WatchHeartBeatReq.Data)
  return data_;
}
 void WatchHeartBeatReq::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:WatchHeartBeatReq.Data)
}

// optional uint64 ProcessID = 2;
void WatchHeartBeatReq::clear_processid() {
  processid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 WatchHeartBeatReq::processid() const {
  // @@protoc_insertion_point(field_get:WatchHeartBeatReq.ProcessID)
  return processid_;
}
 void WatchHeartBeatReq::set_processid(::google::protobuf::uint64 value) {
  
  processid_ = value;
  // @@protoc_insertion_point(field_set:WatchHeartBeatReq.ProcessID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchHeartBeatAck::kRetCodeFieldNumber;
const int WatchHeartBeatAck::kDataFieldNumber;
const int WatchHeartBeatAck::kProcessIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchHeartBeatAck::WatchHeartBeatAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WatchHeartBeatAck)
}

void WatchHeartBeatAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

WatchHeartBeatAck::WatchHeartBeatAck(const WatchHeartBeatAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:WatchHeartBeatAck)
}

void WatchHeartBeatAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
  data_ = 0u;
  processid_ = GOOGLE_ULONGLONG(0);
}

WatchHeartBeatAck::~WatchHeartBeatAck() {
  // @@protoc_insertion_point(destructor:WatchHeartBeatAck)
  SharedDtor();
}

void WatchHeartBeatAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void WatchHeartBeatAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchHeartBeatAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WatchHeartBeatAck_descriptor_;
}

const WatchHeartBeatAck& WatchHeartBeatAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

WatchHeartBeatAck* WatchHeartBeatAck::default_instance_ = NULL;

WatchHeartBeatAck* WatchHeartBeatAck::New(::google::protobuf::Arena* arena) const {
  WatchHeartBeatAck* n = new WatchHeartBeatAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchHeartBeatAck::Clear() {
// @@protoc_insertion_point(message_clear_start:WatchHeartBeatAck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(WatchHeartBeatAck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<WatchHeartBeatAck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(retcode_, processid_);

#undef ZR_HELPER_
#undef ZR_

}

bool WatchHeartBeatAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WatchHeartBeatAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Data;
        break;
      }

      // optional uint32 Data = 2;
      case 2: {
        if (tag == 16) {
         parse_Data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_ProcessID;
        break;
      }

      // optional uint64 ProcessID = 3;
      case 3: {
        if (tag == 24) {
         parse_ProcessID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &processid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WatchHeartBeatAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WatchHeartBeatAck)
  return false;
#undef DO_
}

void WatchHeartBeatAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WatchHeartBeatAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional uint32 Data = 2;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data(), output);
  }

  // optional uint64 ProcessID = 3;
  if (this->processid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->processid(), output);
  }

  // @@protoc_insertion_point(serialize_end:WatchHeartBeatAck)
}

::google::protobuf::uint8* WatchHeartBeatAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:WatchHeartBeatAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional uint32 Data = 2;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data(), target);
  }

  // optional uint64 ProcessID = 3;
  if (this->processid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->processid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:WatchHeartBeatAck)
  return target;
}

int WatchHeartBeatAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:WatchHeartBeatAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  // optional uint32 Data = 2;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data());
  }

  // optional uint64 ProcessID = 3;
  if (this->processid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->processid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchHeartBeatAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WatchHeartBeatAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const WatchHeartBeatAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchHeartBeatAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WatchHeartBeatAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WatchHeartBeatAck)
    MergeFrom(*source);
  }
}

void WatchHeartBeatAck::MergeFrom(const WatchHeartBeatAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WatchHeartBeatAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
  if (from.processid() != 0) {
    set_processid(from.processid());
  }
}

void WatchHeartBeatAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WatchHeartBeatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchHeartBeatAck::CopyFrom(const WatchHeartBeatAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WatchHeartBeatAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchHeartBeatAck::IsInitialized() const {

  return true;
}

void WatchHeartBeatAck::Swap(WatchHeartBeatAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchHeartBeatAck::InternalSwap(WatchHeartBeatAck* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(data_, other->data_);
  std::swap(processid_, other->processid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchHeartBeatAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WatchHeartBeatAck_descriptor_;
  metadata.reflection = WatchHeartBeatAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WatchHeartBeatAck

// optional uint32 RetCode = 1;
void WatchHeartBeatAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 WatchHeartBeatAck::retcode() const {
  // @@protoc_insertion_point(field_get:WatchHeartBeatAck.RetCode)
  return retcode_;
}
 void WatchHeartBeatAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:WatchHeartBeatAck.RetCode)
}

// optional uint32 Data = 2;
void WatchHeartBeatAck::clear_data() {
  data_ = 0u;
}
 ::google::protobuf::uint32 WatchHeartBeatAck::data() const {
  // @@protoc_insertion_point(field_get:WatchHeartBeatAck.Data)
  return data_;
}
 void WatchHeartBeatAck::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:WatchHeartBeatAck.Data)
}

// optional uint64 ProcessID = 3;
void WatchHeartBeatAck::clear_processid() {
  processid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 WatchHeartBeatAck::processid() const {
  // @@protoc_insertion_point(field_get:WatchHeartBeatAck.ProcessID)
  return processid_;
}
 void WatchHeartBeatAck::set_processid(::google::protobuf::uint64 value) {
  
  processid_ = value;
  // @@protoc_insertion_point(field_set:WatchHeartBeatAck.ProcessID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupEquipReq::kEquipGuidFieldNumber;
const int SetupEquipReq::kBagGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupEquipReq::SetupEquipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupEquipReq)
}

void SetupEquipReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupEquipReq::SetupEquipReq(const SetupEquipReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupEquipReq)
}

void SetupEquipReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  equipguid_ = GOOGLE_ULONGLONG(0);
  bagguid_ = GOOGLE_ULONGLONG(0);
}

SetupEquipReq::~SetupEquipReq() {
  // @@protoc_insertion_point(destructor:SetupEquipReq)
  SharedDtor();
}

void SetupEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupEquipReq_descriptor_;
}

const SetupEquipReq& SetupEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupEquipReq* SetupEquipReq::default_instance_ = NULL;

SetupEquipReq* SetupEquipReq::New(::google::protobuf::Arena* arena) const {
  SetupEquipReq* n = new SetupEquipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupEquipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupEquipReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SetupEquipReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SetupEquipReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(equipguid_, bagguid_);

#undef ZR_HELPER_
#undef ZR_

}

bool SetupEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 EquipGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &equipguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BagGuid;
        break;
      }

      // optional uint64 BagGuid = 2;
      case 2: {
        if (tag == 16) {
         parse_BagGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bagguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupEquipReq)
  return false;
#undef DO_
}

void SetupEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupEquipReq)
  // optional uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->equipguid(), output);
  }

  // optional uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bagguid(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupEquipReq)
}

::google::protobuf::uint8* SetupEquipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupEquipReq)
  // optional uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->equipguid(), target);
  }

  // optional uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bagguid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupEquipReq)
  return target;
}

int SetupEquipReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupEquipReq)
  int total_size = 0;

  // optional uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->equipguid());
  }

  // optional uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bagguid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupEquipReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupEquipReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupEquipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupEquipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupEquipReq)
    MergeFrom(*source);
  }
}

void SetupEquipReq::MergeFrom(const SetupEquipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupEquipReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.equipguid() != 0) {
    set_equipguid(from.equipguid());
  }
  if (from.bagguid() != 0) {
    set_bagguid(from.bagguid());
  }
}

void SetupEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupEquipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupEquipReq::CopyFrom(const SetupEquipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupEquipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupEquipReq::IsInitialized() const {

  return true;
}

void SetupEquipReq::Swap(SetupEquipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupEquipReq::InternalSwap(SetupEquipReq* other) {
  std::swap(equipguid_, other->equipguid_);
  std::swap(bagguid_, other->bagguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupEquipReq_descriptor_;
  metadata.reflection = SetupEquipReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupEquipReq

// optional uint64 EquipGuid = 1;
void SetupEquipReq::clear_equipguid() {
  equipguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SetupEquipReq::equipguid() const {
  // @@protoc_insertion_point(field_get:SetupEquipReq.EquipGuid)
  return equipguid_;
}
 void SetupEquipReq::set_equipguid(::google::protobuf::uint64 value) {
  
  equipguid_ = value;
  // @@protoc_insertion_point(field_set:SetupEquipReq.EquipGuid)
}

// optional uint64 BagGuid = 2;
void SetupEquipReq::clear_bagguid() {
  bagguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SetupEquipReq::bagguid() const {
  // @@protoc_insertion_point(field_get:SetupEquipReq.BagGuid)
  return bagguid_;
}
 void SetupEquipReq::set_bagguid(::google::protobuf::uint64 value) {
  
  bagguid_ = value;
  // @@protoc_insertion_point(field_set:SetupEquipReq.BagGuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupEquipAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupEquipAck::SetupEquipAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupEquipAck)
}

void SetupEquipAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupEquipAck::SetupEquipAck(const SetupEquipAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupEquipAck)
}

void SetupEquipAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

SetupEquipAck::~SetupEquipAck() {
  // @@protoc_insertion_point(destructor:SetupEquipAck)
  SharedDtor();
}

void SetupEquipAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupEquipAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupEquipAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupEquipAck_descriptor_;
}

const SetupEquipAck& SetupEquipAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupEquipAck* SetupEquipAck::default_instance_ = NULL;

SetupEquipAck* SetupEquipAck::New(::google::protobuf::Arena* arena) const {
  SetupEquipAck* n = new SetupEquipAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupEquipAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupEquipAck)
  retcode_ = 0u;
}

bool SetupEquipAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupEquipAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupEquipAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupEquipAck)
  return false;
#undef DO_
}

void SetupEquipAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupEquipAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupEquipAck)
}

::google::protobuf::uint8* SetupEquipAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupEquipAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupEquipAck)
  return target;
}

int SetupEquipAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupEquipAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupEquipAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupEquipAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupEquipAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupEquipAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupEquipAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupEquipAck)
    MergeFrom(*source);
  }
}

void SetupEquipAck::MergeFrom(const SetupEquipAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupEquipAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupEquipAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupEquipAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupEquipAck::CopyFrom(const SetupEquipAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupEquipAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupEquipAck::IsInitialized() const {

  return true;
}

void SetupEquipAck::Swap(SetupEquipAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupEquipAck::InternalSwap(SetupEquipAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupEquipAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupEquipAck_descriptor_;
  metadata.reflection = SetupEquipAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupEquipAck

// optional uint32 RetCode = 1;
void SetupEquipAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 SetupEquipAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupEquipAck.RetCode)
  return retcode_;
}
 void SetupEquipAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SetupEquipAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetEquipReq::kEquipGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetEquipReq::UnsetEquipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetEquipReq)
}

void UnsetEquipReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetEquipReq::UnsetEquipReq(const UnsetEquipReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetEquipReq)
}

void UnsetEquipReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  equipguid_ = GOOGLE_ULONGLONG(0);
}

UnsetEquipReq::~UnsetEquipReq() {
  // @@protoc_insertion_point(destructor:UnsetEquipReq)
  SharedDtor();
}

void UnsetEquipReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetEquipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetEquipReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetEquipReq_descriptor_;
}

const UnsetEquipReq& UnsetEquipReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetEquipReq* UnsetEquipReq::default_instance_ = NULL;

UnsetEquipReq* UnsetEquipReq::New(::google::protobuf::Arena* arena) const {
  UnsetEquipReq* n = new UnsetEquipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetEquipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetEquipReq)
  equipguid_ = GOOGLE_ULONGLONG(0);
}

bool UnsetEquipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetEquipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 EquipGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &equipguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetEquipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetEquipReq)
  return false;
#undef DO_
}

void UnsetEquipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetEquipReq)
  // optional uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->equipguid(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetEquipReq)
}

::google::protobuf::uint8* UnsetEquipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetEquipReq)
  // optional uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->equipguid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetEquipReq)
  return target;
}

int UnsetEquipReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetEquipReq)
  int total_size = 0;

  // optional uint64 EquipGuid = 1;
  if (this->equipguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->equipguid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetEquipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetEquipReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetEquipReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetEquipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetEquipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetEquipReq)
    MergeFrom(*source);
  }
}

void UnsetEquipReq::MergeFrom(const UnsetEquipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetEquipReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.equipguid() != 0) {
    set_equipguid(from.equipguid());
  }
}

void UnsetEquipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetEquipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetEquipReq::CopyFrom(const UnsetEquipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetEquipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetEquipReq::IsInitialized() const {

  return true;
}

void UnsetEquipReq::Swap(UnsetEquipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetEquipReq::InternalSwap(UnsetEquipReq* other) {
  std::swap(equipguid_, other->equipguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetEquipReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetEquipReq_descriptor_;
  metadata.reflection = UnsetEquipReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetEquipReq

// optional uint64 EquipGuid = 1;
void UnsetEquipReq::clear_equipguid() {
  equipguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UnsetEquipReq::equipguid() const {
  // @@protoc_insertion_point(field_get:UnsetEquipReq.EquipGuid)
  return equipguid_;
}
 void UnsetEquipReq::set_equipguid(::google::protobuf::uint64 value) {
  
  equipguid_ = value;
  // @@protoc_insertion_point(field_set:UnsetEquipReq.EquipGuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetEquipAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetEquipAck::UnsetEquipAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetEquipAck)
}

void UnsetEquipAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetEquipAck::UnsetEquipAck(const UnsetEquipAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetEquipAck)
}

void UnsetEquipAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

UnsetEquipAck::~UnsetEquipAck() {
  // @@protoc_insertion_point(destructor:UnsetEquipAck)
  SharedDtor();
}

void UnsetEquipAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetEquipAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetEquipAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetEquipAck_descriptor_;
}

const UnsetEquipAck& UnsetEquipAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetEquipAck* UnsetEquipAck::default_instance_ = NULL;

UnsetEquipAck* UnsetEquipAck::New(::google::protobuf::Arena* arena) const {
  UnsetEquipAck* n = new UnsetEquipAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetEquipAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetEquipAck)
  retcode_ = 0u;
}

bool UnsetEquipAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetEquipAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetEquipAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetEquipAck)
  return false;
#undef DO_
}

void UnsetEquipAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetEquipAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetEquipAck)
}

::google::protobuf::uint8* UnsetEquipAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetEquipAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetEquipAck)
  return target;
}

int UnsetEquipAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetEquipAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetEquipAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetEquipAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetEquipAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetEquipAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetEquipAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetEquipAck)
    MergeFrom(*source);
  }
}

void UnsetEquipAck::MergeFrom(const UnsetEquipAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetEquipAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetEquipAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetEquipAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetEquipAck::CopyFrom(const UnsetEquipAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetEquipAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetEquipAck::IsInitialized() const {

  return true;
}

void UnsetEquipAck::Swap(UnsetEquipAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetEquipAck::InternalSwap(UnsetEquipAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetEquipAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetEquipAck_descriptor_;
  metadata.reflection = UnsetEquipAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetEquipAck

// optional uint32 RetCode = 1;
void UnsetEquipAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 UnsetEquipAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetEquipAck.RetCode)
  return retcode_;
}
 void UnsetEquipAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:UnsetEquipAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupGemReq::kGemGuidFieldNumber;
const int SetupGemReq::kBagGuidFieldNumber;
const int SetupGemReq::kTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupGemReq::SetupGemReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupGemReq)
}

void SetupGemReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupGemReq::SetupGemReq(const SetupGemReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupGemReq)
}

void SetupGemReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  gemguid_ = GOOGLE_ULONGLONG(0);
  bagguid_ = GOOGLE_ULONGLONG(0);
  targetpos_ = 0;
}

SetupGemReq::~SetupGemReq() {
  // @@protoc_insertion_point(destructor:SetupGemReq)
  SharedDtor();
}

void SetupGemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupGemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupGemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupGemReq_descriptor_;
}

const SetupGemReq& SetupGemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupGemReq* SetupGemReq::default_instance_ = NULL;

SetupGemReq* SetupGemReq::New(::google::protobuf::Arena* arena) const {
  SetupGemReq* n = new SetupGemReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupGemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupGemReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SetupGemReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SetupGemReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(gemguid_, targetpos_);

#undef ZR_HELPER_
#undef ZR_

}

bool SetupGemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupGemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 GemGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gemguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_BagGuid;
        break;
      }

      // optional uint64 BagGuid = 2;
      case 2: {
        if (tag == 16) {
         parse_BagGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bagguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_TargetPos;
        break;
      }

      // optional int32 TargetPos = 3;
      case 3: {
        if (tag == 24) {
         parse_TargetPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetpos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupGemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupGemReq)
  return false;
#undef DO_
}

void SetupGemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupGemReq)
  // optional uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gemguid(), output);
  }

  // optional uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bagguid(), output);
  }

  // optional int32 TargetPos = 3;
  if (this->targetpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->targetpos(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupGemReq)
}

::google::protobuf::uint8* SetupGemReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupGemReq)
  // optional uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gemguid(), target);
  }

  // optional uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bagguid(), target);
  }

  // optional int32 TargetPos = 3;
  if (this->targetpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->targetpos(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupGemReq)
  return target;
}

int SetupGemReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupGemReq)
  int total_size = 0;

  // optional uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gemguid());
  }

  // optional uint64 BagGuid = 2;
  if (this->bagguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bagguid());
  }

  // optional int32 TargetPos = 3;
  if (this->targetpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetpos());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupGemReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupGemReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupGemReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupGemReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupGemReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupGemReq)
    MergeFrom(*source);
  }
}

void SetupGemReq::MergeFrom(const SetupGemReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupGemReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.gemguid() != 0) {
    set_gemguid(from.gemguid());
  }
  if (from.bagguid() != 0) {
    set_bagguid(from.bagguid());
  }
  if (from.targetpos() != 0) {
    set_targetpos(from.targetpos());
  }
}

void SetupGemReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupGemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupGemReq::CopyFrom(const SetupGemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupGemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupGemReq::IsInitialized() const {

  return true;
}

void SetupGemReq::Swap(SetupGemReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupGemReq::InternalSwap(SetupGemReq* other) {
  std::swap(gemguid_, other->gemguid_);
  std::swap(bagguid_, other->bagguid_);
  std::swap(targetpos_, other->targetpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupGemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupGemReq_descriptor_;
  metadata.reflection = SetupGemReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupGemReq

// optional uint64 GemGuid = 1;
void SetupGemReq::clear_gemguid() {
  gemguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SetupGemReq::gemguid() const {
  // @@protoc_insertion_point(field_get:SetupGemReq.GemGuid)
  return gemguid_;
}
 void SetupGemReq::set_gemguid(::google::protobuf::uint64 value) {
  
  gemguid_ = value;
  // @@protoc_insertion_point(field_set:SetupGemReq.GemGuid)
}

// optional uint64 BagGuid = 2;
void SetupGemReq::clear_bagguid() {
  bagguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SetupGemReq::bagguid() const {
  // @@protoc_insertion_point(field_get:SetupGemReq.BagGuid)
  return bagguid_;
}
 void SetupGemReq::set_bagguid(::google::protobuf::uint64 value) {
  
  bagguid_ = value;
  // @@protoc_insertion_point(field_set:SetupGemReq.BagGuid)
}

// optional int32 TargetPos = 3;
void SetupGemReq::clear_targetpos() {
  targetpos_ = 0;
}
 ::google::protobuf::int32 SetupGemReq::targetpos() const {
  // @@protoc_insertion_point(field_get:SetupGemReq.TargetPos)
  return targetpos_;
}
 void SetupGemReq::set_targetpos(::google::protobuf::int32 value) {
  
  targetpos_ = value;
  // @@protoc_insertion_point(field_set:SetupGemReq.TargetPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupGemAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupGemAck::SetupGemAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupGemAck)
}

void SetupGemAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupGemAck::SetupGemAck(const SetupGemAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupGemAck)
}

void SetupGemAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

SetupGemAck::~SetupGemAck() {
  // @@protoc_insertion_point(destructor:SetupGemAck)
  SharedDtor();
}

void SetupGemAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupGemAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupGemAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupGemAck_descriptor_;
}

const SetupGemAck& SetupGemAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupGemAck* SetupGemAck::default_instance_ = NULL;

SetupGemAck* SetupGemAck::New(::google::protobuf::Arena* arena) const {
  SetupGemAck* n = new SetupGemAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupGemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupGemAck)
  retcode_ = 0u;
}

bool SetupGemAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupGemAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupGemAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupGemAck)
  return false;
#undef DO_
}

void SetupGemAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupGemAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupGemAck)
}

::google::protobuf::uint8* SetupGemAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupGemAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupGemAck)
  return target;
}

int SetupGemAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupGemAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupGemAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupGemAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupGemAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupGemAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupGemAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupGemAck)
    MergeFrom(*source);
  }
}

void SetupGemAck::MergeFrom(const SetupGemAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupGemAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupGemAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupGemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupGemAck::CopyFrom(const SetupGemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupGemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupGemAck::IsInitialized() const {

  return true;
}

void SetupGemAck::Swap(SetupGemAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupGemAck::InternalSwap(SetupGemAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupGemAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupGemAck_descriptor_;
  metadata.reflection = SetupGemAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupGemAck

// optional uint32 RetCode = 1;
void SetupGemAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 SetupGemAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupGemAck.RetCode)
  return retcode_;
}
 void SetupGemAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SetupGemAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetGemReq::kGemGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetGemReq::UnsetGemReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetGemReq)
}

void UnsetGemReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetGemReq::UnsetGemReq(const UnsetGemReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetGemReq)
}

void UnsetGemReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  gemguid_ = GOOGLE_ULONGLONG(0);
}

UnsetGemReq::~UnsetGemReq() {
  // @@protoc_insertion_point(destructor:UnsetGemReq)
  SharedDtor();
}

void UnsetGemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetGemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetGemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetGemReq_descriptor_;
}

const UnsetGemReq& UnsetGemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetGemReq* UnsetGemReq::default_instance_ = NULL;

UnsetGemReq* UnsetGemReq::New(::google::protobuf::Arena* arena) const {
  UnsetGemReq* n = new UnsetGemReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetGemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetGemReq)
  gemguid_ = GOOGLE_ULONGLONG(0);
}

bool UnsetGemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetGemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 GemGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gemguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetGemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetGemReq)
  return false;
#undef DO_
}

void UnsetGemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetGemReq)
  // optional uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gemguid(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetGemReq)
}

::google::protobuf::uint8* UnsetGemReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetGemReq)
  // optional uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gemguid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetGemReq)
  return target;
}

int UnsetGemReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetGemReq)
  int total_size = 0;

  // optional uint64 GemGuid = 1;
  if (this->gemguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gemguid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetGemReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetGemReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetGemReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetGemReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetGemReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetGemReq)
    MergeFrom(*source);
  }
}

void UnsetGemReq::MergeFrom(const UnsetGemReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetGemReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.gemguid() != 0) {
    set_gemguid(from.gemguid());
  }
}

void UnsetGemReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetGemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetGemReq::CopyFrom(const UnsetGemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetGemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetGemReq::IsInitialized() const {

  return true;
}

void UnsetGemReq::Swap(UnsetGemReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetGemReq::InternalSwap(UnsetGemReq* other) {
  std::swap(gemguid_, other->gemguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetGemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetGemReq_descriptor_;
  metadata.reflection = UnsetGemReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetGemReq

// optional uint64 GemGuid = 1;
void UnsetGemReq::clear_gemguid() {
  gemguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UnsetGemReq::gemguid() const {
  // @@protoc_insertion_point(field_get:UnsetGemReq.GemGuid)
  return gemguid_;
}
 void UnsetGemReq::set_gemguid(::google::protobuf::uint64 value) {
  
  gemguid_ = value;
  // @@protoc_insertion_point(field_set:UnsetGemReq.GemGuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetGemAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetGemAck::UnsetGemAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetGemAck)
}

void UnsetGemAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetGemAck::UnsetGemAck(const UnsetGemAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetGemAck)
}

void UnsetGemAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

UnsetGemAck::~UnsetGemAck() {
  // @@protoc_insertion_point(destructor:UnsetGemAck)
  SharedDtor();
}

void UnsetGemAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetGemAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetGemAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetGemAck_descriptor_;
}

const UnsetGemAck& UnsetGemAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetGemAck* UnsetGemAck::default_instance_ = NULL;

UnsetGemAck* UnsetGemAck::New(::google::protobuf::Arena* arena) const {
  UnsetGemAck* n = new UnsetGemAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetGemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetGemAck)
  retcode_ = 0u;
}

bool UnsetGemAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetGemAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetGemAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetGemAck)
  return false;
#undef DO_
}

void UnsetGemAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetGemAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetGemAck)
}

::google::protobuf::uint8* UnsetGemAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetGemAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetGemAck)
  return target;
}

int UnsetGemAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetGemAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetGemAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetGemAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetGemAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetGemAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetGemAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetGemAck)
    MergeFrom(*source);
  }
}

void UnsetGemAck::MergeFrom(const UnsetGemAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetGemAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetGemAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetGemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetGemAck::CopyFrom(const UnsetGemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetGemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetGemAck::IsInitialized() const {

  return true;
}

void UnsetGemAck::Swap(UnsetGemAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetGemAck::InternalSwap(UnsetGemAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetGemAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetGemAck_descriptor_;
  metadata.reflection = UnsetGemAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetGemAck

// optional uint32 RetCode = 1;
void UnsetGemAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 UnsetGemAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetGemAck.RetCode)
  return retcode_;
}
 void UnsetGemAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:UnsetGemAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupPartnerReq::kPartnerGuidFieldNumber;
const int SetupPartnerReq::kTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupPartnerReq::SetupPartnerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupPartnerReq)
}

void SetupPartnerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupPartnerReq::SetupPartnerReq(const SetupPartnerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupPartnerReq)
}

void SetupPartnerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  partnerguid_ = GOOGLE_ULONGLONG(0);
  targetpos_ = 0;
}

SetupPartnerReq::~SetupPartnerReq() {
  // @@protoc_insertion_point(destructor:SetupPartnerReq)
  SharedDtor();
}

void SetupPartnerReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupPartnerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupPartnerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupPartnerReq_descriptor_;
}

const SetupPartnerReq& SetupPartnerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupPartnerReq* SetupPartnerReq::default_instance_ = NULL;

SetupPartnerReq* SetupPartnerReq::New(::google::protobuf::Arena* arena) const {
  SetupPartnerReq* n = new SetupPartnerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupPartnerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupPartnerReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SetupPartnerReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SetupPartnerReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(partnerguid_, targetpos_);

#undef ZR_HELPER_
#undef ZR_

}

bool SetupPartnerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupPartnerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 PartnerGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partnerguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetPos;
        break;
      }

      // optional int32 TargetPos = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetpos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupPartnerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupPartnerReq)
  return false;
#undef DO_
}

void SetupPartnerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupPartnerReq)
  // optional uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->partnerguid(), output);
  }

  // optional int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->targetpos(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupPartnerReq)
}

::google::protobuf::uint8* SetupPartnerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupPartnerReq)
  // optional uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->partnerguid(), target);
  }

  // optional int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->targetpos(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupPartnerReq)
  return target;
}

int SetupPartnerReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupPartnerReq)
  int total_size = 0;

  // optional uint64 PartnerGuid = 1;
  if (this->partnerguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->partnerguid());
  }

  // optional int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetpos());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupPartnerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupPartnerReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupPartnerReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupPartnerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupPartnerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupPartnerReq)
    MergeFrom(*source);
  }
}

void SetupPartnerReq::MergeFrom(const SetupPartnerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupPartnerReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.partnerguid() != 0) {
    set_partnerguid(from.partnerguid());
  }
  if (from.targetpos() != 0) {
    set_targetpos(from.targetpos());
  }
}

void SetupPartnerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupPartnerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupPartnerReq::CopyFrom(const SetupPartnerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupPartnerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupPartnerReq::IsInitialized() const {

  return true;
}

void SetupPartnerReq::Swap(SetupPartnerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupPartnerReq::InternalSwap(SetupPartnerReq* other) {
  std::swap(partnerguid_, other->partnerguid_);
  std::swap(targetpos_, other->targetpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupPartnerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupPartnerReq_descriptor_;
  metadata.reflection = SetupPartnerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupPartnerReq

// optional uint64 PartnerGuid = 1;
void SetupPartnerReq::clear_partnerguid() {
  partnerguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SetupPartnerReq::partnerguid() const {
  // @@protoc_insertion_point(field_get:SetupPartnerReq.PartnerGuid)
  return partnerguid_;
}
 void SetupPartnerReq::set_partnerguid(::google::protobuf::uint64 value) {
  
  partnerguid_ = value;
  // @@protoc_insertion_point(field_set:SetupPartnerReq.PartnerGuid)
}

// optional int32 TargetPos = 2;
void SetupPartnerReq::clear_targetpos() {
  targetpos_ = 0;
}
 ::google::protobuf::int32 SetupPartnerReq::targetpos() const {
  // @@protoc_insertion_point(field_get:SetupPartnerReq.TargetPos)
  return targetpos_;
}
 void SetupPartnerReq::set_targetpos(::google::protobuf::int32 value) {
  
  targetpos_ = value;
  // @@protoc_insertion_point(field_set:SetupPartnerReq.TargetPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupPartnerAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupPartnerAck::SetupPartnerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupPartnerAck)
}

void SetupPartnerAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupPartnerAck::SetupPartnerAck(const SetupPartnerAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupPartnerAck)
}

void SetupPartnerAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

SetupPartnerAck::~SetupPartnerAck() {
  // @@protoc_insertion_point(destructor:SetupPartnerAck)
  SharedDtor();
}

void SetupPartnerAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupPartnerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupPartnerAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupPartnerAck_descriptor_;
}

const SetupPartnerAck& SetupPartnerAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupPartnerAck* SetupPartnerAck::default_instance_ = NULL;

SetupPartnerAck* SetupPartnerAck::New(::google::protobuf::Arena* arena) const {
  SetupPartnerAck* n = new SetupPartnerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupPartnerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupPartnerAck)
  retcode_ = 0u;
}

bool SetupPartnerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupPartnerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupPartnerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupPartnerAck)
  return false;
#undef DO_
}

void SetupPartnerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupPartnerAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupPartnerAck)
}

::google::protobuf::uint8* SetupPartnerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupPartnerAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupPartnerAck)
  return target;
}

int SetupPartnerAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupPartnerAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupPartnerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupPartnerAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupPartnerAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupPartnerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupPartnerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupPartnerAck)
    MergeFrom(*source);
  }
}

void SetupPartnerAck::MergeFrom(const SetupPartnerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupPartnerAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupPartnerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupPartnerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupPartnerAck::CopyFrom(const SetupPartnerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupPartnerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupPartnerAck::IsInitialized() const {

  return true;
}

void SetupPartnerAck::Swap(SetupPartnerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupPartnerAck::InternalSwap(SetupPartnerAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupPartnerAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupPartnerAck_descriptor_;
  metadata.reflection = SetupPartnerAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupPartnerAck

// optional uint32 RetCode = 1;
void SetupPartnerAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 SetupPartnerAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupPartnerAck.RetCode)
  return retcode_;
}
 void SetupPartnerAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SetupPartnerAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetPartnerReq::kTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetPartnerReq::UnsetPartnerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetPartnerReq)
}

void UnsetPartnerReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetPartnerReq::UnsetPartnerReq(const UnsetPartnerReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetPartnerReq)
}

void UnsetPartnerReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  targetpos_ = 0;
}

UnsetPartnerReq::~UnsetPartnerReq() {
  // @@protoc_insertion_point(destructor:UnsetPartnerReq)
  SharedDtor();
}

void UnsetPartnerReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetPartnerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetPartnerReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetPartnerReq_descriptor_;
}

const UnsetPartnerReq& UnsetPartnerReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetPartnerReq* UnsetPartnerReq::default_instance_ = NULL;

UnsetPartnerReq* UnsetPartnerReq::New(::google::protobuf::Arena* arena) const {
  UnsetPartnerReq* n = new UnsetPartnerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetPartnerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetPartnerReq)
  targetpos_ = 0;
}

bool UnsetPartnerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetPartnerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 TargetPos = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetpos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetPartnerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetPartnerReq)
  return false;
#undef DO_
}

void UnsetPartnerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetPartnerReq)
  // optional int32 TargetPos = 1;
  if (this->targetpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->targetpos(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetPartnerReq)
}

::google::protobuf::uint8* UnsetPartnerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetPartnerReq)
  // optional int32 TargetPos = 1;
  if (this->targetpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->targetpos(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetPartnerReq)
  return target;
}

int UnsetPartnerReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetPartnerReq)
  int total_size = 0;

  // optional int32 TargetPos = 1;
  if (this->targetpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetpos());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetPartnerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetPartnerReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetPartnerReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetPartnerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetPartnerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetPartnerReq)
    MergeFrom(*source);
  }
}

void UnsetPartnerReq::MergeFrom(const UnsetPartnerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetPartnerReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.targetpos() != 0) {
    set_targetpos(from.targetpos());
  }
}

void UnsetPartnerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetPartnerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetPartnerReq::CopyFrom(const UnsetPartnerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetPartnerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetPartnerReq::IsInitialized() const {

  return true;
}

void UnsetPartnerReq::Swap(UnsetPartnerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetPartnerReq::InternalSwap(UnsetPartnerReq* other) {
  std::swap(targetpos_, other->targetpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetPartnerReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetPartnerReq_descriptor_;
  metadata.reflection = UnsetPartnerReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetPartnerReq

// optional int32 TargetPos = 1;
void UnsetPartnerReq::clear_targetpos() {
  targetpos_ = 0;
}
 ::google::protobuf::int32 UnsetPartnerReq::targetpos() const {
  // @@protoc_insertion_point(field_get:UnsetPartnerReq.TargetPos)
  return targetpos_;
}
 void UnsetPartnerReq::set_targetpos(::google::protobuf::int32 value) {
  
  targetpos_ = value;
  // @@protoc_insertion_point(field_set:UnsetPartnerReq.TargetPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetPartnerAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetPartnerAck::UnsetPartnerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetPartnerAck)
}

void UnsetPartnerAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetPartnerAck::UnsetPartnerAck(const UnsetPartnerAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetPartnerAck)
}

void UnsetPartnerAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

UnsetPartnerAck::~UnsetPartnerAck() {
  // @@protoc_insertion_point(destructor:UnsetPartnerAck)
  SharedDtor();
}

void UnsetPartnerAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetPartnerAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetPartnerAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetPartnerAck_descriptor_;
}

const UnsetPartnerAck& UnsetPartnerAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetPartnerAck* UnsetPartnerAck::default_instance_ = NULL;

UnsetPartnerAck* UnsetPartnerAck::New(::google::protobuf::Arena* arena) const {
  UnsetPartnerAck* n = new UnsetPartnerAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetPartnerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetPartnerAck)
  retcode_ = 0u;
}

bool UnsetPartnerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetPartnerAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetPartnerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetPartnerAck)
  return false;
#undef DO_
}

void UnsetPartnerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetPartnerAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetPartnerAck)
}

::google::protobuf::uint8* UnsetPartnerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetPartnerAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetPartnerAck)
  return target;
}

int UnsetPartnerAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetPartnerAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetPartnerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetPartnerAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetPartnerAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetPartnerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetPartnerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetPartnerAck)
    MergeFrom(*source);
  }
}

void UnsetPartnerAck::MergeFrom(const UnsetPartnerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetPartnerAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetPartnerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetPartnerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetPartnerAck::CopyFrom(const UnsetPartnerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetPartnerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetPartnerAck::IsInitialized() const {

  return true;
}

void UnsetPartnerAck::Swap(UnsetPartnerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetPartnerAck::InternalSwap(UnsetPartnerAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetPartnerAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetPartnerAck_descriptor_;
  metadata.reflection = UnsetPartnerAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetPartnerAck

// optional uint32 RetCode = 1;
void UnsetPartnerAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 UnsetPartnerAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetPartnerAck.RetCode)
  return retcode_;
}
 void UnsetPartnerAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:UnsetPartnerAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupMountReq::kMountGuidFieldNumber;
const int SetupMountReq::kTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupMountReq::SetupMountReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupMountReq)
}

void SetupMountReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupMountReq::SetupMountReq(const SetupMountReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupMountReq)
}

void SetupMountReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mountguid_ = GOOGLE_ULONGLONG(0);
  targetpos_ = 0;
}

SetupMountReq::~SetupMountReq() {
  // @@protoc_insertion_point(destructor:SetupMountReq)
  SharedDtor();
}

void SetupMountReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupMountReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupMountReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupMountReq_descriptor_;
}

const SetupMountReq& SetupMountReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupMountReq* SetupMountReq::default_instance_ = NULL;

SetupMountReq* SetupMountReq::New(::google::protobuf::Arena* arena) const {
  SetupMountReq* n = new SetupMountReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupMountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupMountReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SetupMountReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SetupMountReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(mountguid_, targetpos_);

#undef ZR_HELPER_
#undef ZR_

}

bool SetupMountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupMountReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 MountGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mountguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetPos;
        break;
      }

      // optional int32 TargetPos = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targetpos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupMountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupMountReq)
  return false;
#undef DO_
}

void SetupMountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupMountReq)
  // optional uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mountguid(), output);
  }

  // optional int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->targetpos(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupMountReq)
}

::google::protobuf::uint8* SetupMountReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupMountReq)
  // optional uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mountguid(), target);
  }

  // optional int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->targetpos(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupMountReq)
  return target;
}

int SetupMountReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupMountReq)
  int total_size = 0;

  // optional uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mountguid());
  }

  // optional int32 TargetPos = 2;
  if (this->targetpos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targetpos());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupMountReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupMountReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupMountReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupMountReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupMountReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupMountReq)
    MergeFrom(*source);
  }
}

void SetupMountReq::MergeFrom(const SetupMountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupMountReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.mountguid() != 0) {
    set_mountguid(from.mountguid());
  }
  if (from.targetpos() != 0) {
    set_targetpos(from.targetpos());
  }
}

void SetupMountReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupMountReq::CopyFrom(const SetupMountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupMountReq::IsInitialized() const {

  return true;
}

void SetupMountReq::Swap(SetupMountReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupMountReq::InternalSwap(SetupMountReq* other) {
  std::swap(mountguid_, other->mountguid_);
  std::swap(targetpos_, other->targetpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupMountReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupMountReq_descriptor_;
  metadata.reflection = SetupMountReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupMountReq

// optional uint64 MountGuid = 1;
void SetupMountReq::clear_mountguid() {
  mountguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SetupMountReq::mountguid() const {
  // @@protoc_insertion_point(field_get:SetupMountReq.MountGuid)
  return mountguid_;
}
 void SetupMountReq::set_mountguid(::google::protobuf::uint64 value) {
  
  mountguid_ = value;
  // @@protoc_insertion_point(field_set:SetupMountReq.MountGuid)
}

// optional int32 TargetPos = 2;
void SetupMountReq::clear_targetpos() {
  targetpos_ = 0;
}
 ::google::protobuf::int32 SetupMountReq::targetpos() const {
  // @@protoc_insertion_point(field_get:SetupMountReq.TargetPos)
  return targetpos_;
}
 void SetupMountReq::set_targetpos(::google::protobuf::int32 value) {
  
  targetpos_ = value;
  // @@protoc_insertion_point(field_set:SetupMountReq.TargetPos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupMountAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupMountAck::SetupMountAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupMountAck)
}

void SetupMountAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupMountAck::SetupMountAck(const SetupMountAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupMountAck)
}

void SetupMountAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

SetupMountAck::~SetupMountAck() {
  // @@protoc_insertion_point(destructor:SetupMountAck)
  SharedDtor();
}

void SetupMountAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupMountAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupMountAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupMountAck_descriptor_;
}

const SetupMountAck& SetupMountAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupMountAck* SetupMountAck::default_instance_ = NULL;

SetupMountAck* SetupMountAck::New(::google::protobuf::Arena* arena) const {
  SetupMountAck* n = new SetupMountAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupMountAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupMountAck)
  retcode_ = 0u;
}

bool SetupMountAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupMountAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupMountAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupMountAck)
  return false;
#undef DO_
}

void SetupMountAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupMountAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupMountAck)
}

::google::protobuf::uint8* SetupMountAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupMountAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupMountAck)
  return target;
}

int SetupMountAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupMountAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupMountAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupMountAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupMountAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupMountAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupMountAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupMountAck)
    MergeFrom(*source);
  }
}

void SetupMountAck::MergeFrom(const SetupMountAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupMountAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupMountAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupMountAck::CopyFrom(const SetupMountAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupMountAck::IsInitialized() const {

  return true;
}

void SetupMountAck::Swap(SetupMountAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupMountAck::InternalSwap(SetupMountAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupMountAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupMountAck_descriptor_;
  metadata.reflection = SetupMountAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupMountAck

// optional uint32 RetCode = 1;
void SetupMountAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 SetupMountAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupMountAck.RetCode)
  return retcode_;
}
 void SetupMountAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SetupMountAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetMountReq::kMountGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetMountReq::UnsetMountReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetMountReq)
}

void UnsetMountReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetMountReq::UnsetMountReq(const UnsetMountReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetMountReq)
}

void UnsetMountReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  mountguid_ = GOOGLE_ULONGLONG(0);
}

UnsetMountReq::~UnsetMountReq() {
  // @@protoc_insertion_point(destructor:UnsetMountReq)
  SharedDtor();
}

void UnsetMountReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetMountReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetMountReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetMountReq_descriptor_;
}

const UnsetMountReq& UnsetMountReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetMountReq* UnsetMountReq::default_instance_ = NULL;

UnsetMountReq* UnsetMountReq::New(::google::protobuf::Arena* arena) const {
  UnsetMountReq* n = new UnsetMountReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetMountReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetMountReq)
  mountguid_ = GOOGLE_ULONGLONG(0);
}

bool UnsetMountReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetMountReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 MountGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mountguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetMountReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetMountReq)
  return false;
#undef DO_
}

void UnsetMountReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetMountReq)
  // optional uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mountguid(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetMountReq)
}

::google::protobuf::uint8* UnsetMountReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetMountReq)
  // optional uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mountguid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetMountReq)
  return target;
}

int UnsetMountReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetMountReq)
  int total_size = 0;

  // optional uint64 MountGuid = 1;
  if (this->mountguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mountguid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetMountReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetMountReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetMountReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetMountReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetMountReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetMountReq)
    MergeFrom(*source);
  }
}

void UnsetMountReq::MergeFrom(const UnsetMountReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetMountReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.mountguid() != 0) {
    set_mountguid(from.mountguid());
  }
}

void UnsetMountReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetMountReq::CopyFrom(const UnsetMountReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetMountReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetMountReq::IsInitialized() const {

  return true;
}

void UnsetMountReq::Swap(UnsetMountReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetMountReq::InternalSwap(UnsetMountReq* other) {
  std::swap(mountguid_, other->mountguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetMountReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetMountReq_descriptor_;
  metadata.reflection = UnsetMountReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetMountReq

// optional uint64 MountGuid = 1;
void UnsetMountReq::clear_mountguid() {
  mountguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UnsetMountReq::mountguid() const {
  // @@protoc_insertion_point(field_get:UnsetMountReq.MountGuid)
  return mountguid_;
}
 void UnsetMountReq::set_mountguid(::google::protobuf::uint64 value) {
  
  mountguid_ = value;
  // @@protoc_insertion_point(field_set:UnsetMountReq.MountGuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetMountAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetMountAck::UnsetMountAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetMountAck)
}

void UnsetMountAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetMountAck::UnsetMountAck(const UnsetMountAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetMountAck)
}

void UnsetMountAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

UnsetMountAck::~UnsetMountAck() {
  // @@protoc_insertion_point(destructor:UnsetMountAck)
  SharedDtor();
}

void UnsetMountAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetMountAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetMountAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetMountAck_descriptor_;
}

const UnsetMountAck& UnsetMountAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetMountAck* UnsetMountAck::default_instance_ = NULL;

UnsetMountAck* UnsetMountAck::New(::google::protobuf::Arena* arena) const {
  UnsetMountAck* n = new UnsetMountAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetMountAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetMountAck)
  retcode_ = 0u;
}

bool UnsetMountAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetMountAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetMountAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetMountAck)
  return false;
#undef DO_
}

void UnsetMountAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetMountAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetMountAck)
}

::google::protobuf::uint8* UnsetMountAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetMountAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetMountAck)
  return target;
}

int UnsetMountAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetMountAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetMountAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetMountAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetMountAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetMountAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetMountAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetMountAck)
    MergeFrom(*source);
  }
}

void UnsetMountAck::MergeFrom(const UnsetMountAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetMountAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetMountAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetMountAck::CopyFrom(const UnsetMountAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetMountAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetMountAck::IsInitialized() const {

  return true;
}

void UnsetMountAck::Swap(UnsetMountAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetMountAck::InternalSwap(UnsetMountAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetMountAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetMountAck_descriptor_;
  metadata.reflection = UnsetMountAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetMountAck

// optional uint32 RetCode = 1;
void UnsetMountAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 UnsetMountAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetMountAck.RetCode)
  return retcode_;
}
 void UnsetMountAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:UnsetMountAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupPetReq::kPetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupPetReq::SetupPetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupPetReq)
}

void SetupPetReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupPetReq::SetupPetReq(const SetupPetReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupPetReq)
}

void SetupPetReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  petguid_ = GOOGLE_ULONGLONG(0);
}

SetupPetReq::~SetupPetReq() {
  // @@protoc_insertion_point(destructor:SetupPetReq)
  SharedDtor();
}

void SetupPetReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupPetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupPetReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupPetReq_descriptor_;
}

const SetupPetReq& SetupPetReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupPetReq* SetupPetReq::default_instance_ = NULL;

SetupPetReq* SetupPetReq::New(::google::protobuf::Arena* arena) const {
  SetupPetReq* n = new SetupPetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupPetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupPetReq)
  petguid_ = GOOGLE_ULONGLONG(0);
}

bool SetupPetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupPetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 PetGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &petguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupPetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupPetReq)
  return false;
#undef DO_
}

void SetupPetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupPetReq)
  // optional uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->petguid(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupPetReq)
}

::google::protobuf::uint8* SetupPetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupPetReq)
  // optional uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->petguid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupPetReq)
  return target;
}

int SetupPetReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupPetReq)
  int total_size = 0;

  // optional uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->petguid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupPetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupPetReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupPetReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupPetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupPetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupPetReq)
    MergeFrom(*source);
  }
}

void SetupPetReq::MergeFrom(const SetupPetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupPetReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.petguid() != 0) {
    set_petguid(from.petguid());
  }
}

void SetupPetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupPetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupPetReq::CopyFrom(const SetupPetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupPetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupPetReq::IsInitialized() const {

  return true;
}

void SetupPetReq::Swap(SetupPetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupPetReq::InternalSwap(SetupPetReq* other) {
  std::swap(petguid_, other->petguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupPetReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupPetReq_descriptor_;
  metadata.reflection = SetupPetReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupPetReq

// optional uint64 PetGuid = 1;
void SetupPetReq::clear_petguid() {
  petguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SetupPetReq::petguid() const {
  // @@protoc_insertion_point(field_get:SetupPetReq.PetGuid)
  return petguid_;
}
 void SetupPetReq::set_petguid(::google::protobuf::uint64 value) {
  
  petguid_ = value;
  // @@protoc_insertion_point(field_set:SetupPetReq.PetGuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupPetAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupPetAck::SetupPetAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetupPetAck)
}

void SetupPetAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupPetAck::SetupPetAck(const SetupPetAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetupPetAck)
}

void SetupPetAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

SetupPetAck::~SetupPetAck() {
  // @@protoc_insertion_point(destructor:SetupPetAck)
  SharedDtor();
}

void SetupPetAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetupPetAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupPetAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupPetAck_descriptor_;
}

const SetupPetAck& SetupPetAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

SetupPetAck* SetupPetAck::default_instance_ = NULL;

SetupPetAck* SetupPetAck::New(::google::protobuf::Arena* arena) const {
  SetupPetAck* n = new SetupPetAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupPetAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SetupPetAck)
  retcode_ = 0u;
}

bool SetupPetAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetupPetAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetupPetAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetupPetAck)
  return false;
#undef DO_
}

void SetupPetAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetupPetAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:SetupPetAck)
}

::google::protobuf::uint8* SetupPetAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SetupPetAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SetupPetAck)
  return target;
}

int SetupPetAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SetupPetAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupPetAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SetupPetAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetupPetAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupPetAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SetupPetAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SetupPetAck)
    MergeFrom(*source);
  }
}

void SetupPetAck::MergeFrom(const SetupPetAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SetupPetAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetupPetAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SetupPetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupPetAck::CopyFrom(const SetupPetAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetupPetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupPetAck::IsInitialized() const {

  return true;
}

void SetupPetAck::Swap(SetupPetAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupPetAck::InternalSwap(SetupPetAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupPetAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupPetAck_descriptor_;
  metadata.reflection = SetupPetAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupPetAck

// optional uint32 RetCode = 1;
void SetupPetAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 SetupPetAck::retcode() const {
  // @@protoc_insertion_point(field_get:SetupPetAck.RetCode)
  return retcode_;
}
 void SetupPetAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SetupPetAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetPetReq::kPetGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetPetReq::UnsetPetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetPetReq)
}

void UnsetPetReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetPetReq::UnsetPetReq(const UnsetPetReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetPetReq)
}

void UnsetPetReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  petguid_ = GOOGLE_ULONGLONG(0);
}

UnsetPetReq::~UnsetPetReq() {
  // @@protoc_insertion_point(destructor:UnsetPetReq)
  SharedDtor();
}

void UnsetPetReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetPetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetPetReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetPetReq_descriptor_;
}

const UnsetPetReq& UnsetPetReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetPetReq* UnsetPetReq::default_instance_ = NULL;

UnsetPetReq* UnsetPetReq::New(::google::protobuf::Arena* arena) const {
  UnsetPetReq* n = new UnsetPetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetPetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetPetReq)
  petguid_ = GOOGLE_ULONGLONG(0);
}

bool UnsetPetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetPetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 PetGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &petguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetPetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetPetReq)
  return false;
#undef DO_
}

void UnsetPetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetPetReq)
  // optional uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->petguid(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetPetReq)
}

::google::protobuf::uint8* UnsetPetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetPetReq)
  // optional uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->petguid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetPetReq)
  return target;
}

int UnsetPetReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetPetReq)
  int total_size = 0;

  // optional uint64 PetGuid = 1;
  if (this->petguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->petguid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetPetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetPetReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetPetReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetPetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetPetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetPetReq)
    MergeFrom(*source);
  }
}

void UnsetPetReq::MergeFrom(const UnsetPetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetPetReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.petguid() != 0) {
    set_petguid(from.petguid());
  }
}

void UnsetPetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetPetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetPetReq::CopyFrom(const UnsetPetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetPetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetPetReq::IsInitialized() const {

  return true;
}

void UnsetPetReq::Swap(UnsetPetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetPetReq::InternalSwap(UnsetPetReq* other) {
  std::swap(petguid_, other->petguid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetPetReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetPetReq_descriptor_;
  metadata.reflection = UnsetPetReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetPetReq

// optional uint64 PetGuid = 1;
void UnsetPetReq::clear_petguid() {
  petguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 UnsetPetReq::petguid() const {
  // @@protoc_insertion_point(field_get:UnsetPetReq.PetGuid)
  return petguid_;
}
 void UnsetPetReq::set_petguid(::google::protobuf::uint64 value) {
  
  petguid_ = value;
  // @@protoc_insertion_point(field_set:UnsetPetReq.PetGuid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsetPetAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsetPetAck::UnsetPetAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnsetPetAck)
}

void UnsetPetAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnsetPetAck::UnsetPetAck(const UnsetPetAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnsetPetAck)
}

void UnsetPetAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

UnsetPetAck::~UnsetPetAck() {
  // @@protoc_insertion_point(destructor:UnsetPetAck)
  SharedDtor();
}

void UnsetPetAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnsetPetAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsetPetAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnsetPetAck_descriptor_;
}

const UnsetPetAck& UnsetPetAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UnsetPetAck* UnsetPetAck::default_instance_ = NULL;

UnsetPetAck* UnsetPetAck::New(::google::protobuf::Arena* arena) const {
  UnsetPetAck* n = new UnsetPetAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsetPetAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UnsetPetAck)
  retcode_ = 0u;
}

bool UnsetPetAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnsetPetAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnsetPetAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnsetPetAck)
  return false;
#undef DO_
}

void UnsetPetAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnsetPetAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:UnsetPetAck)
}

::google::protobuf::uint8* UnsetPetAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UnsetPetAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:UnsetPetAck)
  return target;
}

int UnsetPetAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UnsetPetAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsetPetAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UnsetPetAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UnsetPetAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsetPetAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UnsetPetAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UnsetPetAck)
    MergeFrom(*source);
  }
}

void UnsetPetAck::MergeFrom(const UnsetPetAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UnsetPetAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnsetPetAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UnsetPetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsetPetAck::CopyFrom(const UnsetPetAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UnsetPetAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsetPetAck::IsInitialized() const {

  return true;
}

void UnsetPetAck::Swap(UnsetPetAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsetPetAck::InternalSwap(UnsetPetAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsetPetAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnsetPetAck_descriptor_;
  metadata.reflection = UnsetPetAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnsetPetAck

// optional uint32 RetCode = 1;
void UnsetPetAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 UnsetPetAck::retcode() const {
  // @@protoc_insertion_point(field_get:UnsetPetAck.RetCode)
  return retcode_;
}
 void UnsetPetAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:UnsetPetAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreBuyReq::kStoreTypeFieldNumber;
const int StoreBuyReq::kStoreIDFieldNumber;
const int StoreBuyReq::kBuyNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreBuyReq::StoreBuyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreBuyReq)
}

void StoreBuyReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StoreBuyReq::StoreBuyReq(const StoreBuyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StoreBuyReq)
}

void StoreBuyReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  storetype_ = 0;
  storeid_ = 0;
  buynum_ = 0;
}

StoreBuyReq::~StoreBuyReq() {
  // @@protoc_insertion_point(destructor:StoreBuyReq)
  SharedDtor();
}

void StoreBuyReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StoreBuyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreBuyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreBuyReq_descriptor_;
}

const StoreBuyReq& StoreBuyReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

StoreBuyReq* StoreBuyReq::default_instance_ = NULL;

StoreBuyReq* StoreBuyReq::New(::google::protobuf::Arena* arena) const {
  StoreBuyReq* n = new StoreBuyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreBuyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreBuyReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StoreBuyReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StoreBuyReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(storetype_, buynum_);

#undef ZR_HELPER_
#undef ZR_

}

bool StoreBuyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreBuyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 StoreType = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_StoreID;
        break;
      }

      // optional int32 StoreID = 2;
      case 2: {
        if (tag == 16) {
         parse_StoreID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &storeid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_BuyNum;
        break;
      }

      // optional int32 BuyNum = 3;
      case 3: {
        if (tag == 24) {
         parse_BuyNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buynum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreBuyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreBuyReq)
  return false;
#undef DO_
}

void StoreBuyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreBuyReq)
  // optional int32 StoreType = 1;
  if (this->storetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->storetype(), output);
  }

  // optional int32 StoreID = 2;
  if (this->storeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->storeid(), output);
  }

  // optional int32 BuyNum = 3;
  if (this->buynum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buynum(), output);
  }

  // @@protoc_insertion_point(serialize_end:StoreBuyReq)
}

::google::protobuf::uint8* StoreBuyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreBuyReq)
  // optional int32 StoreType = 1;
  if (this->storetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->storetype(), target);
  }

  // optional int32 StoreID = 2;
  if (this->storeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->storeid(), target);
  }

  // optional int32 BuyNum = 3;
  if (this->buynum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buynum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:StoreBuyReq)
  return target;
}

int StoreBuyReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:StoreBuyReq)
  int total_size = 0;

  // optional int32 StoreType = 1;
  if (this->storetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storetype());
  }

  // optional int32 StoreID = 2;
  if (this->storeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->storeid());
  }

  // optional int32 BuyNum = 3;
  if (this->buynum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->buynum());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreBuyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreBuyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StoreBuyReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreBuyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreBuyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreBuyReq)
    MergeFrom(*source);
  }
}

void StoreBuyReq::MergeFrom(const StoreBuyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreBuyReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.storetype() != 0) {
    set_storetype(from.storetype());
  }
  if (from.storeid() != 0) {
    set_storeid(from.storeid());
  }
  if (from.buynum() != 0) {
    set_buynum(from.buynum());
  }
}

void StoreBuyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreBuyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreBuyReq::CopyFrom(const StoreBuyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreBuyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreBuyReq::IsInitialized() const {

  return true;
}

void StoreBuyReq::Swap(StoreBuyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreBuyReq::InternalSwap(StoreBuyReq* other) {
  std::swap(storetype_, other->storetype_);
  std::swap(storeid_, other->storeid_);
  std::swap(buynum_, other->buynum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreBuyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreBuyReq_descriptor_;
  metadata.reflection = StoreBuyReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreBuyReq

// optional int32 StoreType = 1;
void StoreBuyReq::clear_storetype() {
  storetype_ = 0;
}
 ::google::protobuf::int32 StoreBuyReq::storetype() const {
  // @@protoc_insertion_point(field_get:StoreBuyReq.StoreType)
  return storetype_;
}
 void StoreBuyReq::set_storetype(::google::protobuf::int32 value) {
  
  storetype_ = value;
  // @@protoc_insertion_point(field_set:StoreBuyReq.StoreType)
}

// optional int32 StoreID = 2;
void StoreBuyReq::clear_storeid() {
  storeid_ = 0;
}
 ::google::protobuf::int32 StoreBuyReq::storeid() const {
  // @@protoc_insertion_point(field_get:StoreBuyReq.StoreID)
  return storeid_;
}
 void StoreBuyReq::set_storeid(::google::protobuf::int32 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:StoreBuyReq.StoreID)
}

// optional int32 BuyNum = 3;
void StoreBuyReq::clear_buynum() {
  buynum_ = 0;
}
 ::google::protobuf::int32 StoreBuyReq::buynum() const {
  // @@protoc_insertion_point(field_get:StoreBuyReq.BuyNum)
  return buynum_;
}
 void StoreBuyReq::set_buynum(::google::protobuf::int32 value) {
  
  buynum_ = value;
  // @@protoc_insertion_point(field_set:StoreBuyReq.BuyNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreBuyAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreBuyAck::StoreBuyAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:StoreBuyAck)
}

void StoreBuyAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

StoreBuyAck::StoreBuyAck(const StoreBuyAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:StoreBuyAck)
}

void StoreBuyAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  retcode_ = 0u;
}

StoreBuyAck::~StoreBuyAck() {
  // @@protoc_insertion_point(destructor:StoreBuyAck)
  SharedDtor();
}

void StoreBuyAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StoreBuyAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreBuyAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreBuyAck_descriptor_;
}

const StoreBuyAck& StoreBuyAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

StoreBuyAck* StoreBuyAck::default_instance_ = NULL;

StoreBuyAck* StoreBuyAck::New(::google::protobuf::Arena* arena) const {
  StoreBuyAck* n = new StoreBuyAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreBuyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:StoreBuyAck)
  retcode_ = 0u;
}

bool StoreBuyAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:StoreBuyAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 RetCode = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:StoreBuyAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:StoreBuyAck)
  return false;
#undef DO_
}

void StoreBuyAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:StoreBuyAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // @@protoc_insertion_point(serialize_end:StoreBuyAck)
}

::google::protobuf::uint8* StoreBuyAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:StoreBuyAck)
  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:StoreBuyAck)
  return target;
}

int StoreBuyAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:StoreBuyAck)
  int total_size = 0;

  // optional uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreBuyAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:StoreBuyAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StoreBuyAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreBuyAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:StoreBuyAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:StoreBuyAck)
    MergeFrom(*source);
  }
}

void StoreBuyAck::MergeFrom(const StoreBuyAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:StoreBuyAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void StoreBuyAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:StoreBuyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreBuyAck::CopyFrom(const StoreBuyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StoreBuyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreBuyAck::IsInitialized() const {

  return true;
}

void StoreBuyAck::Swap(StoreBuyAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreBuyAck::InternalSwap(StoreBuyAck* other) {
  std::swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreBuyAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreBuyAck_descriptor_;
  metadata.reflection = StoreBuyAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreBuyAck

// optional uint32 RetCode = 1;
void StoreBuyAck::clear_retcode() {
  retcode_ = 0u;
}
 ::google::protobuf::uint32 StoreBuyAck::retcode() const {
  // @@protoc_insertion_point(field_get:StoreBuyAck.RetCode)
  return retcode_;
}
 void StoreBuyAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:StoreBuyAck.RetCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectChangeNotify::kRoleIDFieldNumber;
const int ObjectChangeNotify::kChangeTypeFieldNumber;
const int ObjectChangeNotify::kIntValue1FieldNumber;
const int ObjectChangeNotify::kIntValue2FieldNumber;
const int ObjectChangeNotify::kStrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectChangeNotify::ObjectChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ObjectChangeNotify)
}

void ObjectChangeNotify::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ObjectChangeNotify::ObjectChangeNotify(const ObjectChangeNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ObjectChangeNotify)
}

void ObjectChangeNotify::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roleid_ = GOOGLE_LONGLONG(0);
  changetype_ = 0;
  intvalue1_ = GOOGLE_LONGLONG(0);
  intvalue2_ = GOOGLE_LONGLONG(0);
  strvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ObjectChangeNotify::~ObjectChangeNotify() {
  // @@protoc_insertion_point(destructor:ObjectChangeNotify)
  SharedDtor();
}

void ObjectChangeNotify::SharedDtor() {
  strvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ObjectChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectChangeNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectChangeNotify_descriptor_;
}

const ObjectChangeNotify& ObjectChangeNotify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

ObjectChangeNotify* ObjectChangeNotify::default_instance_ = NULL;

ObjectChangeNotify* ObjectChangeNotify::New(::google::protobuf::Arena* arena) const {
  ObjectChangeNotify* n = new ObjectChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:ObjectChangeNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ObjectChangeNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ObjectChangeNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roleid_, intvalue2_);
  changetype_ = 0;
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ObjectChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ObjectChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 RoleID = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ChangeType;
        break;
      }

      // optional int32 ChangeType = 2;
      case 2: {
        if (tag == 16) {
         parse_ChangeType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &changetype_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IntValue1;
        break;
      }

      // optional int64 IntValue1 = 3;
      case 3: {
        if (tag == 24) {
         parse_IntValue1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &intvalue1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_IntValue2;
        break;
      }

      // optional int64 IntValue2 = 4;
      case 4: {
        if (tag == 32) {
         parse_IntValue2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &intvalue2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_StrValue;
        break;
      }

      // optional string StrValue = 5;
      case 5: {
        if (tag == 42) {
         parse_StrValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strvalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strvalue().data(), this->strvalue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ObjectChangeNotify.StrValue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ObjectChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ObjectChangeNotify)
  return false;
#undef DO_
}

void ObjectChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ObjectChangeNotify)
  // optional int64 RoleID = 1;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleid(), output);
  }

  // optional int32 ChangeType = 2;
  if (this->changetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->changetype(), output);
  }

  // optional int64 IntValue1 = 3;
  if (this->intvalue1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->intvalue1(), output);
  }

  // optional int64 IntValue2 = 4;
  if (this->intvalue2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->intvalue2(), output);
  }

  // optional string StrValue = 5;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ObjectChangeNotify.StrValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->strvalue(), output);
  }

  // @@protoc_insertion_point(serialize_end:ObjectChangeNotify)
}

::google::protobuf::uint8* ObjectChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ObjectChangeNotify)
  // optional int64 RoleID = 1;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleid(), target);
  }

  // optional int32 ChangeType = 2;
  if (this->changetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->changetype(), target);
  }

  // optional int64 IntValue1 = 3;
  if (this->intvalue1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->intvalue1(), target);
  }

  // optional int64 IntValue2 = 4;
  if (this->intvalue2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->intvalue2(), target);
  }

  // optional string StrValue = 5;
  if (this->strvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strvalue().data(), this->strvalue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ObjectChangeNotify.StrValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strvalue(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ObjectChangeNotify)
  return target;
}

int ObjectChangeNotify::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ObjectChangeNotify)
  int total_size = 0;

  // optional int64 RoleID = 1;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->roleid());
  }

  // optional int32 ChangeType = 2;
  if (this->changetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->changetype());
  }

  // optional int64 IntValue1 = 3;
  if (this->intvalue1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->intvalue1());
  }

  // optional int64 IntValue2 = 4;
  if (this->intvalue2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->intvalue2());
  }

  // optional string StrValue = 5;
  if (this->strvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strvalue());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObjectChangeNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ObjectChangeNotify* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObjectChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObjectChangeNotify)
    MergeFrom(*source);
  }
}

void ObjectChangeNotify::MergeFrom(const ObjectChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObjectChangeNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.changetype() != 0) {
    set_changetype(from.changetype());
  }
  if (from.intvalue1() != 0) {
    set_intvalue1(from.intvalue1());
  }
  if (from.intvalue2() != 0) {
    set_intvalue2(from.intvalue2());
  }
  if (from.strvalue().size() > 0) {

    strvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strvalue_);
  }
}

void ObjectChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObjectChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectChangeNotify::CopyFrom(const ObjectChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObjectChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectChangeNotify::IsInitialized() const {

  return true;
}

void ObjectChangeNotify::Swap(ObjectChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectChangeNotify::InternalSwap(ObjectChangeNotify* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(changetype_, other->changetype_);
  std::swap(intvalue1_, other->intvalue1_);
  std::swap(intvalue2_, other->intvalue2_);
  strvalue_.Swap(&other->strvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectChangeNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectChangeNotify_descriptor_;
  metadata.reflection = ObjectChangeNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectChangeNotify

// optional int64 RoleID = 1;
void ObjectChangeNotify::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ObjectChangeNotify::roleid() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.RoleID)
  return roleid_;
}
 void ObjectChangeNotify::set_roleid(::google::protobuf::int64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.RoleID)
}

// optional int32 ChangeType = 2;
void ObjectChangeNotify::clear_changetype() {
  changetype_ = 0;
}
 ::google::protobuf::int32 ObjectChangeNotify::changetype() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.ChangeType)
  return changetype_;
}
 void ObjectChangeNotify::set_changetype(::google::protobuf::int32 value) {
  
  changetype_ = value;
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.ChangeType)
}

// optional int64 IntValue1 = 3;
void ObjectChangeNotify::clear_intvalue1() {
  intvalue1_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ObjectChangeNotify::intvalue1() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.IntValue1)
  return intvalue1_;
}
 void ObjectChangeNotify::set_intvalue1(::google::protobuf::int64 value) {
  
  intvalue1_ = value;
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.IntValue1)
}

// optional int64 IntValue2 = 4;
void ObjectChangeNotify::clear_intvalue2() {
  intvalue2_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 ObjectChangeNotify::intvalue2() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.IntValue2)
  return intvalue2_;
}
 void ObjectChangeNotify::set_intvalue2(::google::protobuf::int64 value) {
  
  intvalue2_ = value;
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.IntValue2)
}

// optional string StrValue = 5;
void ObjectChangeNotify::clear_strvalue() {
  strvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ObjectChangeNotify::strvalue() const {
  // @@protoc_insertion_point(field_get:ObjectChangeNotify.StrValue)
  return strvalue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectChangeNotify::set_strvalue(const ::std::string& value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ObjectChangeNotify.StrValue)
}
 void ObjectChangeNotify::set_strvalue(const char* value) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ObjectChangeNotify.StrValue)
}
 void ObjectChangeNotify::set_strvalue(const char* value, size_t size) {
  
  strvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ObjectChangeNotify.StrValue)
}
 ::std::string* ObjectChangeNotify::mutable_strvalue() {
  
  // @@protoc_insertion_point(field_mutable:ObjectChangeNotify.StrValue)
  return strvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ObjectChangeNotify::release_strvalue() {
  // @@protoc_insertion_point(field_release:ObjectChangeNotify.StrValue)
  
  return strvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ObjectChangeNotify::set_allocated_strvalue(::std::string* strvalue) {
  if (strvalue != NULL) {
    
  } else {
    
  }
  strvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strvalue);
  // @@protoc_insertion_point(field_set_allocated:ObjectChangeNotify.StrValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HitEffectItem::kCastGuidFieldNumber;
const int HitEffectItem::kTargetGuidFieldNumber;
const int HitEffectItem::kHurtValueFieldNumber;
const int HitEffectItem::kCritFieldNumber;
const int HitEffectItem::kHitActionIDFieldNumber;
const int HitEffectItem::kHitEffectIDFieldNumber;
const int HitEffectItem::kHitDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HitEffectItem::HitEffectItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HitEffectItem)
}

void HitEffectItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HitEffectItem::HitEffectItem(const HitEffectItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HitEffectItem)
}

void HitEffectItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  castguid_ = GOOGLE_ULONGLONG(0);
  targetguid_ = GOOGLE_ULONGLONG(0);
  hurtvalue_ = 0;
  crit_ = false;
  hitactionid_ = 0u;
  hiteffectid_ = 0u;
  hitdistance_ = 0;
}

HitEffectItem::~HitEffectItem() {
  // @@protoc_insertion_point(destructor:HitEffectItem)
  SharedDtor();
}

void HitEffectItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HitEffectItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HitEffectItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HitEffectItem_descriptor_;
}

const HitEffectItem& HitEffectItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

HitEffectItem* HitEffectItem::default_instance_ = NULL;

HitEffectItem* HitEffectItem::New(::google::protobuf::Arena* arena) const {
  HitEffectItem* n = new HitEffectItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HitEffectItem::Clear() {
// @@protoc_insertion_point(message_clear_start:HitEffectItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(HitEffectItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HitEffectItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(castguid_, hitdistance_);

#undef ZR_HELPER_
#undef ZR_

}

bool HitEffectItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HitEffectItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 CastGuid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &castguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_TargetGuid;
        break;
      }

      // optional uint64 TargetGuid = 2;
      case 2: {
        if (tag == 16) {
         parse_TargetGuid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetguid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_HurtValue;
        break;
      }

      // optional int32 HurtValue = 3;
      case 3: {
        if (tag == 24) {
         parse_HurtValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hurtvalue_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Crit;
        break;
      }

      // optional bool Crit = 4;
      case 4: {
        if (tag == 32) {
         parse_Crit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &crit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_HitActionID;
        break;
      }

      // optional uint32 HitActionID = 5;
      case 5: {
        if (tag == 40) {
         parse_HitActionID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hitactionid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_HitEffectID;
        break;
      }

      // optional uint32 HitEffectID = 6;
      case 6: {
        if (tag == 48) {
         parse_HitEffectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hiteffectid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_HitDistance;
        break;
      }

      // optional float HitDistance = 7;
      case 7: {
        if (tag == 61) {
         parse_HitDistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hitdistance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HitEffectItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HitEffectItem)
  return false;
#undef DO_
}

void HitEffectItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HitEffectItem)
  // optional uint64 CastGuid = 1;
  if (this->castguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->castguid(), output);
  }

  // optional uint64 TargetGuid = 2;
  if (this->targetguid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetguid(), output);
  }

  // optional int32 HurtValue = 3;
  if (this->hurtvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->hurtvalue(), output);
  }

  // optional bool Crit = 4;
  if (this->crit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->crit(), output);
  }

  // optional uint32 HitActionID = 5;
  if (this->hitactionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hitactionid(), output);
  }

  // optional uint32 HitEffectID = 6;
  if (this->hiteffectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->hiteffectid(), output);
  }

  // optional float HitDistance = 7;
  if (this->hitdistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->hitdistance(), output);
  }

  // @@protoc_insertion_point(serialize_end:HitEffectItem)
}

::google::protobuf::uint8* HitEffectItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HitEffectItem)
  // optional uint64 CastGuid = 1;
  if (this->castguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->castguid(), target);
  }

  // optional uint64 TargetGuid = 2;
  if (this->targetguid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetguid(), target);
  }

  // optional int32 HurtValue = 3;
  if (this->hurtvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->hurtvalue(), target);
  }

  // optional bool Crit = 4;
  if (this->crit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->crit(), target);
  }

  // optional uint32 HitActionID = 5;
  if (this->hitactionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hitactionid(), target);
  }

  // optional uint32 HitEffectID = 6;
  if (this->hiteffectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->hiteffectid(), target);
  }

  // optional float HitDistance = 7;
  if (this->hitdistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->hitdistance(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:HitEffectItem)
  return target;
}

int HitEffectItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:HitEffectItem)
  int total_size = 0;

  // optional uint64 CastGuid = 1;
  if (this->castguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->castguid());
  }

  // optional uint64 TargetGuid = 2;
  if (this->targetguid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetguid());
  }

  // optional int32 HurtValue = 3;
  if (this->hurtvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hurtvalue());
  }

  // optional bool Crit = 4;
  if (this->crit() != 0) {
    total_size += 1 + 1;
  }

  // optional uint32 HitActionID = 5;
  if (this->hitactionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hitactionid());
  }

  // optional uint32 HitEffectID = 6;
  if (this->hiteffectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hiteffectid());
  }

  // optional float HitDistance = 7;
  if (this->hitdistance() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HitEffectItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HitEffectItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HitEffectItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HitEffectItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HitEffectItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HitEffectItem)
    MergeFrom(*source);
  }
}

void HitEffectItem::MergeFrom(const HitEffectItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HitEffectItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.castguid() != 0) {
    set_castguid(from.castguid());
  }
  if (from.targetguid() != 0) {
    set_targetguid(from.targetguid());
  }
  if (from.hurtvalue() != 0) {
    set_hurtvalue(from.hurtvalue());
  }
  if (from.crit() != 0) {
    set_crit(from.crit());
  }
  if (from.hitactionid() != 0) {
    set_hitactionid(from.hitactionid());
  }
  if (from.hiteffectid() != 0) {
    set_hiteffectid(from.hiteffectid());
  }
  if (from.hitdistance() != 0) {
    set_hitdistance(from.hitdistance());
  }
}

void HitEffectItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HitEffectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HitEffectItem::CopyFrom(const HitEffectItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HitEffectItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HitEffectItem::IsInitialized() const {

  return true;
}

void HitEffectItem::Swap(HitEffectItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HitEffectItem::InternalSwap(HitEffectItem* other) {
  std::swap(castguid_, other->castguid_);
  std::swap(targetguid_, other->targetguid_);
  std::swap(hurtvalue_, other->hurtvalue_);
  std::swap(crit_, other->crit_);
  std::swap(hitactionid_, other->hitactionid_);
  std::swap(hiteffectid_, other->hiteffectid_);
  std::swap(hitdistance_, other->hitdistance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HitEffectItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HitEffectItem_descriptor_;
  metadata.reflection = HitEffectItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HitEffectItem

// optional uint64 CastGuid = 1;
void HitEffectItem::clear_castguid() {
  castguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HitEffectItem::castguid() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.CastGuid)
  return castguid_;
}
 void HitEffectItem::set_castguid(::google::protobuf::uint64 value) {
  
  castguid_ = value;
  // @@protoc_insertion_point(field_set:HitEffectItem.CastGuid)
}

// optional uint64 TargetGuid = 2;
void HitEffectItem::clear_targetguid() {
  targetguid_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 HitEffectItem::targetguid() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.TargetGuid)
  return targetguid_;
}
 void HitEffectItem::set_targetguid(::google::protobuf::uint64 value) {
  
  targetguid_ = value;
  // @@protoc_insertion_point(field_set:HitEffectItem.TargetGuid)
}

// optional int32 HurtValue = 3;
void HitEffectItem::clear_hurtvalue() {
  hurtvalue_ = 0;
}
 ::google::protobuf::int32 HitEffectItem::hurtvalue() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.HurtValue)
  return hurtvalue_;
}
 void HitEffectItem::set_hurtvalue(::google::protobuf::int32 value) {
  
  hurtvalue_ = value;
  // @@protoc_insertion_point(field_set:HitEffectItem.HurtValue)
}

// optional bool Crit = 4;
void HitEffectItem::clear_crit() {
  crit_ = false;
}
 bool HitEffectItem::crit() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.Crit)
  return crit_;
}
 void HitEffectItem::set_crit(bool value) {
  
  crit_ = value;
  // @@protoc_insertion_point(field_set:HitEffectItem.Crit)
}

// optional uint32 HitActionID = 5;
void HitEffectItem::clear_hitactionid() {
  hitactionid_ = 0u;
}
 ::google::protobuf::uint32 HitEffectItem::hitactionid() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.HitActionID)
  return hitactionid_;
}
 void HitEffectItem::set_hitactionid(::google::protobuf::uint32 value) {
  
  hitactionid_ = value;
  // @@protoc_insertion_point(field_set:HitEffectItem.HitActionID)
}

// optional uint32 HitEffectID = 6;
void HitEffectItem::clear_hiteffectid() {
  hiteffectid_ = 0u;
}
 ::google::protobuf::uint32 HitEffectItem::hiteffectid() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.HitEffectID)
  return hiteffectid_;
}
 void HitEffectItem::set_hiteffectid(::google::protobuf::uint32 value) {
  
  hiteffectid_ = value;
  // @@protoc_insertion_point(field_set:HitEffectItem.HitEffectID)
}

// optional float HitDistance = 7;
void HitEffectItem::clear_hitdistance() {
  hitdistance_ = 0;
}
 float HitEffectItem::hitdistance() const {
  // @@protoc_insertion_point(field_get:HitEffectItem.HitDistance)
  return hitdistance_;
}
 void HitEffectItem::set_hitdistance(float value) {
  
  hitdistance_ = value;
  // @@protoc_insertion_point(field_set:HitEffectItem.HitDistance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HitEffectNtf::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HitEffectNtf::HitEffectNtf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HitEffectNtf)
}

void HitEffectNtf::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HitEffectNtf::HitEffectNtf(const HitEffectNtf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HitEffectNtf)
}

void HitEffectNtf::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

HitEffectNtf::~HitEffectNtf() {
  // @@protoc_insertion_point(destructor:HitEffectNtf)
  SharedDtor();
}

void HitEffectNtf::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HitEffectNtf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HitEffectNtf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HitEffectNtf_descriptor_;
}

const HitEffectNtf& HitEffectNtf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

HitEffectNtf* HitEffectNtf::default_instance_ = NULL;

HitEffectNtf* HitEffectNtf::New(::google::protobuf::Arena* arena) const {
  HitEffectNtf* n = new HitEffectNtf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HitEffectNtf::Clear() {
// @@protoc_insertion_point(message_clear_start:HitEffectNtf)
  itemlist_.Clear();
}

bool HitEffectNtf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HitEffectNtf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .HitEffectItem ItemList = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ItemList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_itemlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_ItemList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HitEffectNtf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HitEffectNtf)
  return false;
#undef DO_
}

void HitEffectNtf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HitEffectNtf)
  // repeated .HitEffectItem ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->itemlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:HitEffectNtf)
}

::google::protobuf::uint8* HitEffectNtf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HitEffectNtf)
  // repeated .HitEffectItem ItemList = 1;
  for (unsigned int i = 0, n = this->itemlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->itemlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:HitEffectNtf)
  return target;
}

int HitEffectNtf::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:HitEffectNtf)
  int total_size = 0;

  // repeated .HitEffectItem ItemList = 1;
  total_size += 1 * this->itemlist_size();
  for (int i = 0; i < this->itemlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->itemlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HitEffectNtf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HitEffectNtf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const HitEffectNtf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HitEffectNtf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HitEffectNtf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HitEffectNtf)
    MergeFrom(*source);
  }
}

void HitEffectNtf::MergeFrom(const HitEffectNtf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HitEffectNtf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  itemlist_.MergeFrom(from.itemlist_);
}

void HitEffectNtf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HitEffectNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HitEffectNtf::CopyFrom(const HitEffectNtf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HitEffectNtf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HitEffectNtf::IsInitialized() const {

  return true;
}

void HitEffectNtf::Swap(HitEffectNtf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HitEffectNtf::InternalSwap(HitEffectNtf* other) {
  itemlist_.UnsafeArenaSwap(&other->itemlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HitEffectNtf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HitEffectNtf_descriptor_;
  metadata.reflection = HitEffectNtf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HitEffectNtf

// repeated .HitEffectItem ItemList = 1;
int HitEffectNtf::itemlist_size() const {
  return itemlist_.size();
}
void HitEffectNtf::clear_itemlist() {
  itemlist_.Clear();
}
const ::HitEffectItem& HitEffectNtf::itemlist(int index) const {
  // @@protoc_insertion_point(field_get:HitEffectNtf.ItemList)
  return itemlist_.Get(index);
}
::HitEffectItem* HitEffectNtf::mutable_itemlist(int index) {
  // @@protoc_insertion_point(field_mutable:HitEffectNtf.ItemList)
  return itemlist_.Mutable(index);
}
::HitEffectItem* HitEffectNtf::add_itemlist() {
  // @@protoc_insertion_point(field_add:HitEffectNtf.ItemList)
  return itemlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::HitEffectItem >*
HitEffectNtf::mutable_itemlist() {
  // @@protoc_insertion_point(field_mutable_list:HitEffectNtf.ItemList)
  return &itemlist_;
}
const ::google::protobuf::RepeatedPtrField< ::HitEffectItem >&
HitEffectNtf::itemlist() const {
  // @@protoc_insertion_point(field_list:HitEffectNtf.ItemList)
  return itemlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseItemReq::UseItemReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseItemReq)
}

void UseItemReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UseItemReq::UseItemReq(const UseItemReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UseItemReq)
}

void UseItemReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UseItemReq::~UseItemReq() {
  // @@protoc_insertion_point(destructor:UseItemReq)
  SharedDtor();
}

void UseItemReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseItemReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseItemReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseItemReq_descriptor_;
}

const UseItemReq& UseItemReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UseItemReq* UseItemReq::default_instance_ = NULL;

UseItemReq* UseItemReq::New(::google::protobuf::Arena* arena) const {
  UseItemReq* n = new UseItemReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:UseItemReq)
}

bool UseItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseItemReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:UseItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseItemReq)
  return false;
#undef DO_
}

void UseItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseItemReq)
  // @@protoc_insertion_point(serialize_end:UseItemReq)
}

::google::protobuf::uint8* UseItemReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseItemReq)
  // @@protoc_insertion_point(serialize_to_array_end:UseItemReq)
  return target;
}

int UseItemReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UseItemReq)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseItemReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseItemReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UseItemReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UseItemReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseItemReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseItemReq)
    MergeFrom(*source);
  }
}

void UseItemReq::MergeFrom(const UseItemReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseItemReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void UseItemReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseItemReq::CopyFrom(const UseItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemReq::IsInitialized() const {

  return true;
}

void UseItemReq::Swap(UseItemReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseItemReq::InternalSwap(UseItemReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseItemReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseItemReq_descriptor_;
  metadata.reflection = UseItemReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseItemReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseItemAck::UseItemAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UseItemAck)
}

void UseItemAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UseItemAck::UseItemAck(const UseItemAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UseItemAck)
}

void UseItemAck::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UseItemAck::~UseItemAck() {
  // @@protoc_insertion_point(destructor:UseItemAck)
  SharedDtor();
}

void UseItemAck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseItemAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseItemAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseItemAck_descriptor_;
}

const UseItemAck& UseItemAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

UseItemAck* UseItemAck::default_instance_ = NULL;

UseItemAck* UseItemAck::New(::google::protobuf::Arena* arena) const {
  UseItemAck* n = new UseItemAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseItemAck::Clear() {
// @@protoc_insertion_point(message_clear_start:UseItemAck)
}

bool UseItemAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UseItemAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:UseItemAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UseItemAck)
  return false;
#undef DO_
}

void UseItemAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UseItemAck)
  // @@protoc_insertion_point(serialize_end:UseItemAck)
}

::google::protobuf::uint8* UseItemAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UseItemAck)
  // @@protoc_insertion_point(serialize_to_array_end:UseItemAck)
  return target;
}

int UseItemAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UseItemAck)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseItemAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UseItemAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UseItemAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UseItemAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UseItemAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UseItemAck)
    MergeFrom(*source);
  }
}

void UseItemAck::MergeFrom(const UseItemAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UseItemAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void UseItemAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UseItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseItemAck::CopyFrom(const UseItemAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UseItemAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemAck::IsInitialized() const {

  return true;
}

void UseItemAck::Swap(UseItemAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseItemAck::InternalSwap(UseItemAck* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseItemAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseItemAck_descriptor_;
  metadata.reflection = UseItemAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseItemAck

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetRandomNameReq::kSexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetRandomNameReq::MsgGetRandomNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgGetRandomNameReq)
}

void MsgGetRandomNameReq::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgGetRandomNameReq::MsgGetRandomNameReq(const MsgGetRandomNameReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgGetRandomNameReq)
}

void MsgGetRandomNameReq::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sex_ = 0;
}

MsgGetRandomNameReq::~MsgGetRandomNameReq() {
  // @@protoc_insertion_point(destructor:MsgGetRandomNameReq)
  SharedDtor();
}

void MsgGetRandomNameReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MsgGetRandomNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetRandomNameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgGetRandomNameReq_descriptor_;
}

const MsgGetRandomNameReq& MsgGetRandomNameReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

MsgGetRandomNameReq* MsgGetRandomNameReq::default_instance_ = NULL;

MsgGetRandomNameReq* MsgGetRandomNameReq::New(::google::protobuf::Arena* arena) const {
  MsgGetRandomNameReq* n = new MsgGetRandomNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGetRandomNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgGetRandomNameReq)
  sex_ = 0;
}

bool MsgGetRandomNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgGetRandomNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 Sex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgGetRandomNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgGetRandomNameReq)
  return false;
#undef DO_
}

void MsgGetRandomNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgGetRandomNameReq)
  // optional int32 Sex = 1;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sex(), output);
  }

  // @@protoc_insertion_point(serialize_end:MsgGetRandomNameReq)
}

::google::protobuf::uint8* MsgGetRandomNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgGetRandomNameReq)
  // optional int32 Sex = 1;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MsgGetRandomNameReq)
  return target;
}

int MsgGetRandomNameReq::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MsgGetRandomNameReq)
  int total_size = 0;

  // optional int32 Sex = 1;
  if (this->sex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetRandomNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgGetRandomNameReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgGetRandomNameReq* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgGetRandomNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgGetRandomNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgGetRandomNameReq)
    MergeFrom(*source);
  }
}

void MsgGetRandomNameReq::MergeFrom(const MsgGetRandomNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgGetRandomNameReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
}

void MsgGetRandomNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgGetRandomNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetRandomNameReq::CopyFrom(const MsgGetRandomNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgGetRandomNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetRandomNameReq::IsInitialized() const {

  return true;
}

void MsgGetRandomNameReq::Swap(MsgGetRandomNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetRandomNameReq::InternalSwap(MsgGetRandomNameReq* other) {
  std::swap(sex_, other->sex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGetRandomNameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgGetRandomNameReq_descriptor_;
  metadata.reflection = MsgGetRandomNameReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgGetRandomNameReq

// optional int32 Sex = 1;
void MsgGetRandomNameReq::clear_sex() {
  sex_ = 0;
}
 ::google::protobuf::int32 MsgGetRandomNameReq::sex() const {
  // @@protoc_insertion_point(field_get:MsgGetRandomNameReq.Sex)
  return sex_;
}
 void MsgGetRandomNameReq::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:MsgGetRandomNameReq.Sex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetRandomNameAck::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetRandomNameAck::MsgGetRandomNameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MsgGetRandomNameAck)
}

void MsgGetRandomNameAck::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MsgGetRandomNameAck::MsgGetRandomNameAck(const MsgGetRandomNameAck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MsgGetRandomNameAck)
}

void MsgGetRandomNameAck::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MsgGetRandomNameAck::~MsgGetRandomNameAck() {
  // @@protoc_insertion_point(destructor:MsgGetRandomNameAck)
  SharedDtor();
}

void MsgGetRandomNameAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MsgGetRandomNameAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetRandomNameAck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgGetRandomNameAck_descriptor_;
}

const MsgGetRandomNameAck& MsgGetRandomNameAck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Msg_5fGame_2eproto();
  return *default_instance_;
}

MsgGetRandomNameAck* MsgGetRandomNameAck::default_instance_ = NULL;

MsgGetRandomNameAck* MsgGetRandomNameAck::New(::google::protobuf::Arena* arena) const {
  MsgGetRandomNameAck* n = new MsgGetRandomNameAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGetRandomNameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgGetRandomNameAck)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgGetRandomNameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MsgGetRandomNameAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "MsgGetRandomNameAck.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MsgGetRandomNameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MsgGetRandomNameAck)
  return false;
#undef DO_
}

void MsgGetRandomNameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MsgGetRandomNameAck)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgGetRandomNameAck.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:MsgGetRandomNameAck)
}

::google::protobuf::uint8* MsgGetRandomNameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MsgGetRandomNameAck)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "MsgGetRandomNameAck.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MsgGetRandomNameAck)
  return target;
}

int MsgGetRandomNameAck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MsgGetRandomNameAck)
  int total_size = 0;

  // optional string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetRandomNameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MsgGetRandomNameAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MsgGetRandomNameAck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgGetRandomNameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MsgGetRandomNameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MsgGetRandomNameAck)
    MergeFrom(*source);
  }
}

void MsgGetRandomNameAck::MergeFrom(const MsgGetRandomNameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MsgGetRandomNameAck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void MsgGetRandomNameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MsgGetRandomNameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetRandomNameAck::CopyFrom(const MsgGetRandomNameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgGetRandomNameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetRandomNameAck::IsInitialized() const {

  return true;
}

void MsgGetRandomNameAck::Swap(MsgGetRandomNameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetRandomNameAck::InternalSwap(MsgGetRandomNameAck* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGetRandomNameAck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MsgGetRandomNameAck_descriptor_;
  metadata.reflection = MsgGetRandomNameAck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgGetRandomNameAck

// optional string Name = 1;
void MsgGetRandomNameAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MsgGetRandomNameAck::name() const {
  // @@protoc_insertion_point(field_get:MsgGetRandomNameAck.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgGetRandomNameAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgGetRandomNameAck.Name)
}
 void MsgGetRandomNameAck::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgGetRandomNameAck.Name)
}
 void MsgGetRandomNameAck::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgGetRandomNameAck.Name)
}
 ::std::string* MsgGetRandomNameAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:MsgGetRandomNameAck.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MsgGetRandomNameAck::release_name() {
  // @@protoc_insertion_point(field_release:MsgGetRandomNameAck.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MsgGetRandomNameAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MsgGetRandomNameAck.Name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
